<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LRTK Blog</title>
    <link>https://lrtk-coder.github.io/</link>
    
    <atom:link href="https://lrtk-coder.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Coding, Security, IT News 등 정리한 블로그</description>
    <pubDate>Sun, 30 May 2021 21:13:29 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Webhacking.kr Old - 34 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-34Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-34Write-Up/</guid>
      <pubDate>Sun, 30 May 2021 12:11:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-34"><a href="#Old-34" class="headerlink" title="Old - 34"></a>Old - 34</h2><p><img src="/images/pasted-530.png"><br>들어가자마자 debug me라고 alert 창이 띄어졌다.</p><p>개발자 도구를 이용하여, JS를 확인해봤다.<br><br>너무나 많은 코드가 있었고, 난독화까지 되어 있어서 분석은 힘들 것이라 생각하였다.</p><p><img src="/images/pasted-531.png"><br>그래서 맨 처음 alert창이 띄어졌는 것을 생각하여, 검색 기능으로 alert를 검색하였다.<br><br>해당 조건이 만족되지 않아서 else문으로 빠져서 alert창이 띄어졌으니, if문의 코드를 콘솔에 실행시켰다.</p><p><img src="/images/pasted-532.png"><br>자동으로 서버에 <code>?Passw0RRdd=1</code>를 보내고, Flag를 획득하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-34Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 29 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-29-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-29-Write-Up/</guid>
      <pubDate>Sun, 30 May 2021 12:07:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-29"><a href="#Old-29" class="headerlink" title="Old - 29"></a>Old - 29</h2><p><img src="/images/pasted-519.png"><br>파일을 업로드하는 페이지가 나왔다.<br><br>맨위에 Flag는 다른 테이블에 있다고 하니, 아마 SQLi를 통해 다른 테이블을 알아내는 문제로 추측된다.</p><p><img src="/images/pasted-520.png"><br>몇 번 업로드를 하니, 대충 어떻게 업로드가 되는지 알 수 있었다.<br></p><p><img src="/images/pasted-521.png"><br>일단 공격백터로 filename을 사용할 수 있는지 알아보기 위해 ‘를 넣어서 서버로 보냈다.<br><br>그 결과 쿼리 에러가 발생되었다.</p><p>filename의 값을 insult 쿼리에 삽입하여, 데이터를 저장하는 것으로 추측되는데 문제는 filename의 위치를 알아내야한다.<br><br><code>INSEULT INTO 테이블명 VALUES(값1, 값2, 값3);</code> 여기서 filename의 위치가 값1인지 값3인지를 정확하게 모른다는 것이다.<br></p><p><img src="/images/pasted-522.png"><br>그래서 나는 일단 값3에 위치한다고 생각하고, <code>INSEULT INTO 테이블명 VALUES(값1, 값2, filename);#);</code>으로 만들어줘서 해당 위치가 맞는지 확인을 하였다.<br><br>기대와 다르게 다른 위치인 듯하여, 경우의 수를 모두 넣어서 테스트를 진행하였다.</p><p><img src="/images/pasted-523.png"><br><code>3&#39;, &#39;123&#39;, My IP);#</code>를 서버로 보내니, 해당 값이 저장되어 출력되었다.<br><br>이로써 <code>INSULT INTO 테이블명 VALUES(filename, time, ip);</code>로 이루어져있다는 것을 알 수 있었다.</p><p>전에 풀이하였던 32번 문제에 사용한 방법대로, VALUES 절에 여러 값들을 넣어서 내가 원하는 값도 같이 저장되도록 하였다.</p><p><img src="/images/pasted-524.png"><br>여기서 굳이 값을 추가하는 이유는 filename은 INSULT 문에서 작음 따음표로 묶어져 있기 때문에 <code>database()</code>를 넣어도 문자열로 인식되어 실행이 되지 않는다.</p><p><img src="/images/pasted-525.png" alt="1&#39;, &#39;123&#39;, My IP),(database(), &#39;123&#39;, My IP);#"><br>database()을 사용하여 해당 테이블이 어떤 database에 존재하는지 확인하였다.</p><p><img src="/images/pasted-526.png" alt="1&#39;, &#39;123&#39;, My IP),((SELECT count(table_name) from information_schema.tables where table_schema=&#39;chall29&#39;), &#39;123&#39;, My IP);#"><br>스키마으로 테이블의 개수를 확인하였다. 이렇게 한 이유는 테이블이 여러 개가 있으면, Limit를 이용하여 하나씩 출력을 해야하기 때문인데 총 몇번을 시도를 하면 되는지 확인하기 위해서다.</p><p><img src="/images/pasted-527.png" alt="1&#39;, &#39;123&#39;, My IP),((SELECT table_name from information_schema.tables where table_schema=&#39;chall29&#39; LIMIT 0, 1), &#39;123&#39;, My IP);#"><br>2개 중 첫번째 테이블명을 확인하니, <code>files</code>가 나왔다. 아마 파일을 업로드하면 저 테이블에 저장이 될 것으로 판단된다.</p><p><img src="/images/pasted-528.png" alt="1&#39;, &#39;123&#39;, My IP),((SELECT table_name from information_schema.tables where table_schema=&#39;chall29&#39; LIMIT 1, 2), &#39;123&#39;, My IP);#"><br>두번째 테이블명을 출력하니, 확실히 Flag가 저장되어 있을 것 같다.</p><p><img src="/images/pasted-529.png" alt="1&#39;, &#39;123&#39;, My IP),((SELECT * from flag_congratz), &#39;123&#39;, My IP);#"><br>flag_congratz 테이블 안에 Flag 말고는 다른 데이터는 존재하지 않을 거 같아서 모두 출력하였더니, 운 좋게 빙고였다.<br><br>이렇게 Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-29-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 53 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-53-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-53-Write-Up/</guid>
      <pubDate>Sun, 30 May 2021 01:26:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-53"><a href="#Old-53" class="headerlink" title="Old - 53"></a>Old - 53</h2><p><img src="/images/pasted-516.png"><br>아무 반응이 없어서 코드를 확인하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$db = dbconnect();</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;./tablename.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;answer&#x27;</span>] == $hidden_table) solve(<span class="number">53</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/select|by/i&quot;</span>,$_GET[<span class="string">&#x27;val&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;no hack&quot;</span>);</span><br><span class="line">$result = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select a from <span class="subst">$hidden_table</span> where a=<span class="subst">&#123;$_GET[&#x27;val&#x27;]&#125;</span>&quot;</span>));</span><br><span class="line"><span class="keyword">echo</span>($result[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><p>이번 문제는 테이블명을 answer에 넣어서 서버로 보내면, flag를 획득할 수 있는 문제이다.<br><br>테이블명을 얻기 위해서는 <code>select a from $hidden_table where a=&#123;$_GET[&#39;val&#39;]&#125;</code>에 SQLI를 통하여 테이블명을 얻어야 한다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/select|by/i&quot;</span>,$_GET[<span class="string">&#x27;val&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;no hack&quot;</span>);</span><br></pre></td></tr></table></figure><p><code>select, by</code>를 검증하고 있는데, 문제는 <code>select</code>를 사용할 수 없어서 Union을 이용하여 SQLI를 진행할 수 가 없다.</p><blockquote><p><a href="https://bebhionn.tistory.com/39">6.SQL Injection&gt;테이블 명, 컬럼 명 알아내기</a><br>Union을 이용한 테이블 명을 알아내는 방법</p></blockquote><blockquote><p><a href="https://ar9ang3.tistory.com/7">웹해킹 SQLI 우회기법 정리 - Webhacking SQL Injection Bypass Honey Tips :: Is Secure?</a></p></blockquote><p>인터넷에 검색을 해봤지만, 도통 union을 사용한 방법 밖에 없어서 다른 사람의 문제풀이를 참고하였다.<br><br>나는 위 블로그에서 procedure analyse 함수를 이용한 SQLi를 배울 수 있었다.</p><p>도커에 있는 Mysql에 시도를 하니, 작동이 되지 않았다. 인터넷에 procedure analyse를 검색하니, 사용할 수 있는 버전의 제한이 있었다.</p><blockquote><p><a href="https://dev.mysql.com/doc/refman/5.7/en/procedure-analyse.html">MySQL :: MySQL 5.7 Reference Manual :: 8.4.2.4 Using PROCEDURE ANALYSE</a><br>PROCEDURE ANALYSE ()는 MySQL 5.7.18에서 더 이상 사용되지 않으며 MySQL 8.0에서 제거되었습니다.</p></blockquote><p>내가 사용하고 있는 Mysql의 버전은 8.0.23이라서 에러가 발생한 것이였다.<br></p><blockquote><p><a href="http://www.igloosec.co.kr/BLOG_MySQL%20DoS%20%EC%B7%A8%EC%95%BD%EC%A0%90(CVE-2015-4870)%EB%B6%84%EC%84%9D?searchItem=&searchWord=&bbsCateId=1&gotoPage=1">igloosec 보안이슈 :: MySQL DoS 취약점(CVE-2015-4870)분석</a></p></blockquote><p>나는 여기서 사용 가능한 버전의 범위가 궁금하여 검색을 해보니, 이글루 시큐리티에서 조사한 내용 중 MySQL 3.23.X 이상 버전에서 사용 가능한 기능이라고 명시되어있어서 3.23.X ~ 5.7.18까지의 버전에서 사용 가능하다는 것을 알 수 있었다.</p><p><img src="/images/pasted-517.png"><br>위와 같이 val 파라미터에 procedure analyse 함수를 삽입하여 보내니, 테이블 명이 출력되었다.</p><p><img src="/images/pasted-518.png"><br>해당 테이블 명을 answer 파라미터에 담아서 보내니, Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/30/Webhacking-kr-Old-53-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 모의고사</title>
      <link>https://lrtk-coder.github.io/2021/05/29/Programmers-Level-1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/</link>
      <guid>https://lrtk-coder.github.io/2021/05/29/Programmers-Level-1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/</guid>
      <pubDate>Sat, 29 May 2021 14:47:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;모의고사&quot;&gt;&lt;a href=&quot;#모의고사&quot; class=&quot;headerlink&quot; title=&quot;모의고사&quot;&gt;&lt;/a&gt;&lt;a href=&quot;&quot;&gt;모의고사&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="모의고사"><a href="#모의고사" class="headerlink" title="모의고사"></a><a href="">모의고사</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.</p><p>1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, …<br><br>2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, …<br><br>3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, …<br></p><p>1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>시험은 최대 10,000 문제로 구성되어있습니다.</li><li>문제의 정답은 1, 2, 3, 4, 5중 하나입니다.</li><li>가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grading</span>(<span class="params">player:<span class="built_in">list</span>, answers:<span class="built_in">list</span></span>):</span></span><br><span class="line">    size = <span class="built_in">len</span>(player)</span><br><span class="line">    count = <span class="built_in">len</span>(answers)</span><br><span class="line">    </span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">        <span class="keyword">if</span> answers[i] == player[i%size]:</span><br><span class="line">              result += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">answers:<span class="built_in">list</span></span>):</span></span><br><span class="line">    p1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">    p2 = [<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>]</span><br><span class="line">    p3 = [<span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>]</span><br><span class="line">    </span><br><span class="line">    result = [(<span class="number">1</span>, grading(p1, answers)), (<span class="number">2</span>, grading(p2, answers)), (<span class="number">3</span>, grading(p3, answers))]</span><br><span class="line">    max_result = <span class="built_in">max</span>(result, key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> [i[<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> result <span class="keyword">if</span> max_result[<span class="number">1</span>] == i[<span class="number">1</span>]]</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EC%99%84%EC%A0%84%ED%83%90%EC%83%89/">완전탐색</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/29/Programmers-Level-1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 48 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/29/Webhacking-kr-Old-48-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/29/Webhacking-kr-Old-48-Write-Up/</guid>
      <pubDate>Sat, 29 May 2021 05:46:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-48"><a href="#Old-48" class="headerlink" title="Old - 48"></a>Old - 48</h2><p><img src="/images/pasted-508.png"><br>입력한 Text와 파일을 업로드할 수 있는 페이지가 나왔다.</p><p><img src="/images/pasted-509.png"><br>나는 뭔가 있을 까봐 입력하여, 코드를 살펴보니 아무 것도 없었다.</p><p><img src="/images/pasted-511.png"><br>파일와 text를 입력하여 코드를 살펴보니, 역시 아무것도 없었다.<br><br>하지만 내가 업로드한 PHP은 운영체제에 명령을 전달하는 코드였고, 나는 내가 업로드한 <code>/upload/test.php</code>에 명령어를 전달하였다.</p><p><img src="/images/pasted-512.png"><br>그러나, 해당 코드는 실행이 안되고 읽기만 되는 것으로 다른 방법으로 접근을 해야한다.</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/?mode=del&amp;time=1622299124</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: webhacking.kr:10006</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span>: http://webhacking.kr:10006/</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=31qq1t47nvtsrqr4bjchovl30v</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br></pre></td></tr></table></figure><p>그래서 마지막 기능인 delete 기능을 살펴보니, <code>/?mode=del&amp;time=1622299124</code>이 서버에 전달 되는 것을 볼 수 있었다.</p><p>여기서 나는 한가지 가정을 세울 수 있었다.<br><br>내가 만약 코드를 구현하였으면, <code>mode=del</code>를 넣겨줬으면 <code>rm</code>명령어를 통해 삭제를 진행했을 것이다.<br><br>그럼 내가 업로드한 파일의 이름을 쓸 수 밖에 없을 텐데, 만약 파일의 이름이 <code>파일명;ls</code>이면 파일을 삭제 후 ls이 실행 될 것이다.</p><p><img src="/images/pasted-513.png"><br>Filename 부분을 수정하여 <code>test.php</code>인 것을 <code>test.php;ls</code>으로 수정하고, 해당 부분을 삭제하였다.</p><p><img src="/images/pasted-514.png"><br><img src="/images/pasted-515.png"><br>그랬더니, ls이 실행이 되었고 flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/29/Webhacking-kr-Old-48-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 35 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/29/Webhacking-kr-Old-35-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/29/Webhacking-kr-Old-35-Write-Up/</guid>
      <pubDate>Sat, 29 May 2021 05:26:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-35"><a href="#Old-35" class="headerlink" title="Old - 35"></a>Old - 35</h2><p><img src="/images/pasted-497.png"><br>전화번호를 입력하는 페이지가 나왔다.</p><p><img src="/images/pasted-498.png"><br><code>?phone=010-9333-0222&amp;id=guest</code><br>카페에서 여자가 내 번호를 물어봤을 때, 내가 여자의 폰에 전화번호를 입력하는 설레는 마음으로 입력하여, 서버로 보내니 no hack이 출력되었다.<br><br>왜 까였는지 확인하기 위해, 코드를 분석하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$db = dbconnect();</span><br><span class="line"><span class="keyword">if</span>($_GET[‘phone’] &amp;&amp; $_GET[‘id’])&#123;</span><br><span class="line">  <span class="keyword">if</span>(preg_match(“/\*|\/|=|select|-|<span class="comment">#|;/i”,$_GET[‘phone’])) exit(“no hack”);</span></span><br><span class="line">  <span class="keyword">if</span>(strlen($_GET[‘id’]) &gt; <span class="number">5</span>) <span class="keyword">exit</span>(“no hack”);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(“/admin/i”,$_GET[‘id’])) <span class="keyword">exit</span>(“you are not admin”);</span><br><span class="line">  mysqli_query($db,”insert into chall35(id,ip,phone) values(‘&#123;$_GET[‘id’]&#125;’,’&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’,&#123;$_GET[‘phone’]&#125;)”) <span class="keyword">or</span> <span class="keyword">die</span>(“query <span class="built_in">error</span>”);</span><br><span class="line">  <span class="keyword">echo</span> “Done&lt;br&gt;”;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>phone과 id가 파라미터로 받는다.<br><br>phone에 <code>*, /, =, selcet, -, #, ;</code> 문자가 포함되어 있으면, “no hack”이 출력된다.<br><br>id의 길이가 5 초과이면, “no hack”이 출력된다. 또한 id이 <code>admin</code>의 문자가 포함되어 있으면 “you are not admin”이 출력된다.</p><p>위 조건을 모두 통과를 하면, <code>insert into chall35(id,ip,phone) values(‘&#123;$_GET[‘id’]&#125;’,’&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’,&#123;$_GET[‘phone’]&#125;)</code>의 쿼리를 통해 값이 저장이 된다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$isAdmin = mysqli_fetch_array(mysqli_query($db,”select ip <span class="keyword">from</span> chall35 where id=‘admin’ <span class="keyword">and</span> ip=‘&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’”));</span><br><span class="line"><span class="keyword">if</span>($isAdmin[‘ip’] == $_SERVER[‘REMOTE_ADDR’])&#123;</span><br><span class="line">  solve(<span class="number">35</span>);</span><br><span class="line">  mysqli_query($db,”delete <span class="keyword">from</span> chall35”);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>select ip from chall35 where id=‘admin’ and ip=‘&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’</code>의 결과가 나의 공인 IP와 일치한다면, Flag를 출력한다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$phone_list = mysqli_query($db,”select * <span class="keyword">from</span> chall35 where ip=‘&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’”);</span><br><span class="line"><span class="keyword">echo</span> “&lt;!--\n”;</span><br><span class="line"><span class="keyword">while</span>($r = mysqli_fetch_array($phone_list))&#123;</span><br><span class="line">  <span class="keyword">echo</span> htmlentities($r[‘id’]).” - “.$r[‘phone’].”\n”;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> “--&gt;\n”;</span><br></pre></td></tr></table></figure><p><code>select * from chall35 where ip=‘&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’</code>의 결과를 HTML 주석으로 출력한다.</p><p>나는 코드를 보고 일단 chall35 테이블에 내 IP로 저장된 데이터들을 출력하였다.<br><img src="/images/pasted-499.png"><br>주석으로 데이터가 출력되었다.<br><br>나의 IP으로 저장된 admin 계정이 없고, guest 계정만 있다는 것을 알 수 있었다.</p><p>나는 <code>insert into chall35(id,ip,phone) values(‘&#123;$_GET[‘id’]&#125;’,’&#123;$_SERVER[‘REMOTE_ADDR’]&#125;’,&#123;$_GET[‘phone’]&#125;)</code>를 통해 admin을 삽입하고자 하였다.<br><img src="/images/pasted-500.png"><br>Id 파라미터에서 Hex을 검증을 안하여, hex를 이용하여 admin를 삽입하고자 하였다.</p><p><img src="/images/pasted-501.png"><br>시도를 하였지만 no hack이 출력이 되었고 그 이유를 보니, id의 길이가 5를 초과하여 no hack이 출력된 것이였다.<br></p><p>시도할 수 있는 공격백터는 id와 phone으로 진행해야하는데, id는 길이 때문에 공격에 사용할 수 없다.<br><br>phone로 공격해야한다는 것을 생각을 하였고, 혹시 내가 모르는 insert 쿼리 사용법이 있는지 알아보기로 하였다.</p><blockquote><p><a href="https://private.tistory.com/63">공부해서 남 주자</a><br>위 블로그에서 방법을 찾을 수 있었다.</p></blockquote><p><img src="/images/pasted-502.png"><br>테스트를 해보니, admin이 잘 삽입된 것을 볼 수 있다.</p><p><img src="/images/pasted-503.png"><br><code>2&#39;), (&#39;admin&#39;, &#39;223.38.91.158&#39;, &#39;3</code>으로 계속 시도하였는데 query error가 나와서 당황했는데, 문제의 코드를 자세히 보니 phone의 타입은 int형이였다.<br><br><code>2), (&#39;admin&#39;, &#39;223.38.91.158&#39;, 3</code>으로 시도하니, 정상 작동하였다.</p><p><img src="/images/pasted-504.png"><br>내가 생각한 이론이라면, Flag가 바로 출력되어야 하는데 출력이 되지 않아서 주석을 확인해보니 admin이 저장되지 않았다.</p><p><img src="/images/pasted-505.png"><br>Query문이 잘못되었다면, Error를 출력했을텐데 출력이 되지 않았으니 IP주소가 틀린 것인데 IP주소는 틀림없이 맞는 주소였다.</p><p>집에서 한번 더 시도하고, 안되면 다른 사람의 풀이를 참고해야겠다……</p><p><img src="/images/pasted-506.png"><br><img src="/images/pasted-507.png"><br>집에서 시도하였더니, flag를 획득할 수 있었다.<br><br>밖에선 아이폰의 핫스팟으로 시도하였는데, 왜 안됬는지 의문이다. 일단 문의 넣어봤다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/29/Webhacking-kr-Old-35-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 2016년</title>
      <link>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-2016%EB%85%84/</link>
      <guid>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-2016%EB%85%84/</guid>
      <pubDate>Fri, 28 May 2021 15:53:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;2016&quot;&gt;&lt;a href=&quot;#2016&quot; class=&quot;headerlink&quot; title=&quot;2016&quot;&gt;&lt;/a&gt;&lt;a href=&quot;&quot;&gt;2016&lt;/a&gt;&lt;/h1&gt;&lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="2016"><a href="#2016" class="headerlink" title="2016"></a><a href="">2016</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>2016년 1월 1일은 금요일입니다. 2016년 a월 b일은 무슨 요일일까요? 두 수 a ,b를 입력받아 2016년 a월 b일이 무슨 요일인지 리턴하는 함수, solution을 완성하세요. 요일의 이름은 일요일부터 토요일까지 각각 <code>SUN,MON,TUE,WED,THU,FRI,SAT</code>입니다. 예를 들어 a=5, b=24라면 5월 24일은 화요일이므로 문자열 “TUE”를 반환하세요.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>2016년은 윤년입니다.</li><li>2016년 a월 b일은 실제로 있는 날입니다. (13월 26일이나 2월 45일같은 날짜는 주어지지 않습니다)</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    week = [<span class="string">&#x27;MON&#x27;</span>, <span class="string">&#x27;TUE&#x27;</span>, <span class="string">&#x27;WED&#x27;</span>, <span class="string">&#x27;THU&#x27;</span>, <span class="string">&#x27;FRI&#x27;</span>, <span class="string">&#x27;SAT&#x27;</span>, <span class="string">&#x27;SUN&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> week[datetime.date(<span class="number">2016</span>, a, b).weekday()]</span><br></pre></td></tr></table></figure><p>datetime 모듈을 이용하여 간단하게 풀이하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-2016%EB%85%84/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 시저 암호</title>
      <link>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%8B%9C%EC%A0%80-%EC%95%94%ED%98%B8/</link>
      <guid>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%8B%9C%EC%A0%80-%EC%95%94%ED%98%B8/</guid>
      <pubDate>Fri, 28 May 2021 15:10:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;시저-암호&quot;&gt;&lt;a href=&quot;#시저-암호&quot; class=&quot;headerlink&quot; title=&quot;시저 암호&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12926&quot;&gt;시저 암</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="시저-암호"><a href="#시저-암호" class="headerlink" title="시저 암호"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12926">시저 암호</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>어떤 문장의 각 알파벳을 일정한 거리만큼 밀어서 다른 알파벳으로 바꾸는 암호화 방식을 시저 암호라고 합니다. 예를 들어 “AB”는 1만큼 밀면 “BC”가 되고, 3만큼 밀면 “DE”가 됩니다. “z”는 1만큼 밀면 “a”가 됩니다. 문자열 s와 거리 n을 입력받아 s를 n만큼 민 암호문을 만드는 함수, solution을 완성해 보세요.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>공백은 아무리 밀어도 공백입니다.</li><li>s는 알파벳 소문자, 대문자, 공백으로만 이루어져 있습니다.</li><li>s의 길이는 8000이하입니다.</li><li>n은 1 이상, 25이하인 자연수입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><h4 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">indexSize</span>(<span class="params">idx:<span class="built_in">int</span></span>):</span></span><br><span class="line">        <span class="keyword">return</span> idx - <span class="number">26</span> <span class="keyword">if</span> idx &gt;= <span class="number">26</span> <span class="keyword">else</span> idx</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s:<span class="built_in">str</span>, n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    lowerList = <span class="built_in">list</span>(string.ascii_lowercase)</span><br><span class="line">    s = <span class="built_in">list</span>(s)</span><br><span class="line">    </span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> i.isupper():</span><br><span class="line">            idx = indexSize(lowerList.index(i.lower()) + n)</span><br><span class="line">            result += lowerList[idx].upper()</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">elif</span> i.islower():</span><br><span class="line">            idx = indexSize(lowerList.index(i) + n)</span><br><span class="line">            result += lowerList[idx]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result += i</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>이 방법은 소문자 알파벳의 리스트를 생성하여, 인덱스를 n만큼 증가시켜서 출력하는 풀이이다.</p><h4 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s:<span class="built_in">str</span>, n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    s = <span class="built_in">list</span>(s)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">        <span class="keyword">if</span> s[i].isupper():</span><br><span class="line">            s[i] = <span class="built_in">chr</span>((<span class="built_in">ord</span>(s[i]) - <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>) + n) % <span class="number">26</span> + <span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>))</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">elif</span> s[i].islower():</span><br><span class="line">            s[i] = <span class="built_in">chr</span>((<span class="built_in">ord</span>(s[i]) - <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>) + n) % <span class="number">26</span> + <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(s)</span><br></pre></td></tr></table></figure><p>아스키코드를 이용한 방법이다.<br><br>방법1에선 26을 넘어가는 인덱스는 조건문을 이용하여, 인덱스 - 26로 하여 크기를 조정해줬는데 방법2에선 <code>%26</code>를 이용하여 조정하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%8B%9C%EC%A0%80-%EC%95%94%ED%98%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 이상한 문자 만들기</title>
      <link>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%9D%B4%EC%83%81%ED%95%9C-%EB%AC%B8%EC%9E%90-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%9D%B4%EC%83%81%ED%95%9C-%EB%AC%B8%EC%9E%90-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <pubDate>Fri, 28 May 2021 01:26:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;이상한-문자-만들기&quot;&gt;&lt;a href=&quot;#이상한-문자-만들기&quot; class=&quot;headerlink&quot; title=&quot;이상한 문자 만들기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/less</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="이상한-문자-만들기"><a href="#이상한-문자-만들기" class="headerlink" title="이상한 문자 만들기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12930">이상한 문자 만들기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>문자열 s는 한 개 이상의 단어로 구성되어 있습니다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다. 각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요.</p><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>문자열 전체의 짝/홀수 인덱스가 아니라, 단어(공백을 기준)별로 짝/홀수 인덱스를 판단해야합니다.</li><li>첫 번째 글자는 0번째 인덱스로 보아 짝수번째 알파벳으로 처리해야 합니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s:<span class="built_in">str</span></span>):</span></span><br><span class="line">    s = s.lower().split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        i = <span class="built_in">list</span>(i)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(i), <span class="number">2</span>):</span><br><span class="line">            i[j] = i[j].upper()</span><br><span class="line"></span><br><span class="line">        result.append(<span class="string">&#x27;&#x27;</span>.join(i))</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27; &#x27;</span>.join(result)</span><br></pre></td></tr></table></figure><p>나는 문자열을 소문자로 변경 후 띄어쓰기 기준으로 나누어 리스트로 만들었다.<br><br>이때 중요한 것은 나눠진 부분은 띄어쓰기로 구분하였다.<br><br>E.g.) <code>aa aa</code> -&gt; <code>[&#39;aa&#39;, &#39; &#39;, &#39;aa&#39;]</code></p><p>그리고 0부터 2씩 증가시켜서 알파벳을 대문자로 변경하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%9D%B4%EC%83%81%ED%95%9C-%EB%AC%B8%EC%9E%90-%EB%A7%8C%EB%93%A4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 정수 내림차순으로 배치하기</title>
      <link>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%A0%95%EC%88%98-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%A0%95%EC%88%98-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Fri, 28 May 2021 00:45:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;정수-내림차순으로-배치하기&quot;&gt;&lt;a href=&quot;#정수-내림차순으로-배치하기&quot; class=&quot;headerlink&quot; title=&quot;정수 내림차순으로 배치하기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/cou</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="정수-내림차순으로-배치하기"><a href="#정수-내림차순으로-배치하기" class="headerlink" title="정수 내림차순으로 배치하기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12933">정수 내림차순으로 배치하기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 예를들어 n이 118372면 873211을 리턴하면 됩니다.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>n은 1이상 8000000000 이하인 자연수입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    n = <span class="built_in">sorted</span>(<span class="built_in">str</span>(n), reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(n))</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/28/Programmers-Level-1-%EC%A0%95%EC%88%98-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 8 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/28/Webhacking-kr-Old-8-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/28/Webhacking-kr-Old-8-Write-Up/</guid>
      <pubDate>Fri, 28 May 2021 00:32:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-8"><a href="#Old-8" class="headerlink" title="Old - 8"></a>Old - 8</h2><p><img src="/images/pasted-494.png"><br>특별한 반응이 없어서 코드를 확인하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$agent=trim(getenv(<span class="string">&quot;HTTP_USER_AGENT&quot;</span>));</span><br><span class="line">$ip=$_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/from/i&quot;</span>,$agent))&#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">&quot;&lt;br&gt;Access Denied!&lt;br&gt;&lt;br&gt;&quot;</span>);</span><br><span class="line">  <span class="keyword">echo</span>(htmlspecialchars($agent));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>접속한 브라우저와 공인 ip를 각각 agent, ip 변수에 넣어줬다.<br><br>Agent 변수는 preg_match 함수로, <code>from</code>문자열이 있는지 검사하였다.<br><br>만약 있다면, Access Denied! 문구와 agent에 있는 특수문자가 HTML 엔티티로 변환된 문자열을 페이지에 출력하고, 종료한다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$db = dbconnect();</span><br><span class="line">$count_ck = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select count(id) from chall8&quot;</span>));</span><br><span class="line"><span class="keyword">if</span>($count_ck[<span class="number">0</span>] &gt;= <span class="number">70</span>)&#123; mysqli_query($db,<span class="string">&quot;delete from chall8&quot;</span>); &#125;</span><br></pre></td></tr></table></figure><p>Chall8 테이블에 ID 컬럼의 총 갯수를 count_ck 변수에 넣어줬다.<br><br>만약 count_ck 변수의 값이 70개 이상이라면, chall8 테이블은 삭제된다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$result = mysqli_query($db,<span class="string">&quot;select id from chall8 where agent=&#x27;&quot;</span>.addslashes($_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]).<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">$ck = mysqli_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($ck)&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;hi &lt;b&gt;&quot;</span>.htmlentities($ck[<span class="number">0</span>]).<span class="string">&quot;&lt;/b&gt;&lt;p&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>($ck[<span class="number">0</span>]==<span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">    mysqli_query($db,<span class="string">&quot;delete from chall8&quot;</span>);</span><br><span class="line">    solve(<span class="number">8</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$ck)&#123;</span><br><span class="line">  $q=mysqli_query($db,<span class="string">&quot;insert into chall8(agent,ip,id) values(&#x27;<span class="subst">&#123;$agent&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$ip&#125;</span>&#x27;,&#x27;guest&#x27;)&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;query error&quot;</span>);</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">&quot;&lt;br&gt;&lt;br&gt;done!  (<span class="subst">&#123;$count_ck[0]&#125;</span>/70)&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>select id from chall8 where agent=접속한 브라우저</code>로 나온 결과가 없다면, 테이블에 agent, ip 변수를 삽입한다.<br><br>만약 결과가 있고, 그 결과가 admin이면 Flag를 획득할 수 있다.</p><p>나는 프록시를 이용하여 agent 정보를 수정하여 SQLi를 진행할 것이다.<br><br>일단 첫번째 목표를 insert 쿼리에 SQLi를 삽입하여 admin을 생성하여, 요청할 것이다.</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">User-Agent</span>: lrtk&#x27;, &#x27;0&#x27;, &#x27;admin&#x27;)#</span><br></pre></td></tr></table></figure><p>위와 같은 SQLi를 삽입하였다.<br><br>삽입을 한 쿼리를 보면, <code>insert into chall8(agent,ip,id) values(&#39;lrtk, &#39;0&#39;, &#39;admin&#39;)#&#39;,&#39;&#123;$ip&#125;&#39;,&#39;guest&#39;)</code>으로 된다.<br></p><p><img src="/images/pasted-495.png"><br><code>--</code> 대신 <code>#</code>를 사용한 이유는 <code>trim(getenv(&quot;HTTP_USER_AGENT&quot;))</code> 때문이다.<br><br><code>--</code>를 사용하여, 뒤의 쿼리가 주석처리가 되기 위해선 <code>--</code>뒤에 공백이 존재해야 한다. 하지만 trim 함수로 공백이 삭제가 되기 때문에 <code>--</code>은 주석처리가 되지 않는다.<br><br><code>#</code>의 경우, 뒤에 공백이 없어도 주석처리가 되기 때문에 <code>#</code>를 이용하여 주석처리를 한 것이다.</p><p><img src="/images/pasted-496.png"><br>테이블에 데이터를 삽입하고, 다시 Agent를 lrtk로 수정하여 보내면, Flag를 획득할 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking,kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/28/Webhacking-kr-Old-8-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 3 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-3-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-3-Write-Up/</guid>
      <pubDate>Thu, 27 May 2021 20:15:12 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-3"><a href="#Old-3" class="headerlink" title="Old - 3"></a>Old - 3</h2><p><img src="/images/pasted-481.png"><br>이상한 페이지가 나왔다.</p><p><img src="/images/pasted-482.png"><br>작은 박스를 클릭하니, 색이 검정색으로 변경하고 값이 1로 변경이 되었다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> answer=<span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="function"><span class="title">for</span>(<span class="params">i=<span class="number">1</span>;i&lt;=<span class="number">25</span>;i++</span>)</span> &#123; answer=answer+<span class="built_in">eval</span>(<span class="string">&quot;kk._&quot;</span>+i+<span class="string">&quot;.value&quot;</span>); &#125;</span><br><span class="line">  kk._answer.value=answer;</span><br><span class="line">  kk.submit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Solved 버튼을 클릭 시 서버에 어떤한 값이 보내지는지 확인을 해보니, Input들의 값들을 한 문자열로 만든 후 서버로 보내졌다.<br><br>일단 저 퍼즐을 어떻게 푸는 지 몰라서 느낌대로 클릭 후 서버로 보냈는데, No!!라는 문구를 출력 후 다시 퍼즐 페이지로 리다이렉트되었다.</p><p><img src="/images/pasted-483.png"><br>퍼즐 위에 Nonogram이라는 글자가 있는데, 퍼즐의 이름이 Nonogram인 듯하여 인터넷에 검색하였다.<br><br>row와 column에 있는 숫자들을 이용하여 그림을 만드는 것이였다.</p><p><img src="/images/pasted-484.png"></p><blockquote><p><a href="https://itfix.tistory.com/1036">네모네모 로직,  노노그램 하는 방법</a><br>위 사이트를 참고하여, 노노그램을 풀이하였다.</p></blockquote><p><img src="/images/pasted-485.png"><br>서버로 보내지는 값을 보니, 위에서 말했던 것처럼 Input들의 값들이 한 문자열로 합쳐져 있다.</p><p><img src="/images/pasted-486.png"><br>값을 보내니, 클리어하였다고 이름을 등록하는 사이트로 이동하였다.</p><p><img src="/images/pasted-487.png"><br>등록하니, 이러한 로그가 페이지에 출력되었다.</p><p><img src="/images/pasted-488.png"><br>뒤로가기를 하여, 다른 이름으로 등록하니 이름만 다르고 같은 로그가 찍혔다.</p><p><img src="/images/pasted-489.png"><br>다시 뒤로가기를 하여, 이름 등록하는 페이지의 코드를 살펴봤다.<br><br>그 결과 숨겨진 Input을 볼 수 있었다.</p><p>나는 공격 백터를 이름 Input과 answer Input으로 잡고 일단 SQLi 테스트를 하였다.</p><p><img src="/images/pasted-490.png"><br>이름에선 Error가 발생되지 않았다.</p><p><img src="/images/pasted-491.png"><br>answer에선 에러가 발생하여, answer에서 SQLi를 진행하였다.</p><p><img src="/images/pasted-492.png"><br><code>&quot;1010100000011100101011111&#39; or 1=1-- &quot;</code>로 값을 변경하여 어떻게 반응할 지 확인을 하였는데, Flag가 나왔다…</p><p><img src="/images/pasted-493.png"><br>True가 되면서 모든 값들이 나와 Flag를 주는 것으로 판단된다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-3-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 49 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-49-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-49-Write-Up/</guid>
      <pubDate>Thu, 27 May 2021 00:34:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-49"><a href="#Old-49" class="headerlink" title="Old - 49"></a>Old - 49</h2><p><img src="/images/pasted-479.png"><br>46번 문제와 똑같은 페이지가 나왔다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>($_GET[<span class="string">&#x27;lv&#x27;</span>])&#123;</span><br><span class="line">    $db = dbconnect();</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/select|or|and|\(|\)|limit|,|\/|order|cash| |\t|\&#x27;|\&quot;/i&quot;</span>,$_GET[<span class="string">&#x27;lv&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;no hack&quot;</span>);</span><br><span class="line">    $result = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select id from chall49 where lv=<span class="subst">&#123;$_GET[&#x27;lv&#x27;]&#125;</span>&quot;</span>));</span><br><span class="line">    <span class="keyword">echo</span> $result[<span class="number">0</span>] ;</span><br><span class="line">    <span class="keyword">if</span>($result[<span class="number">0</span>]==<span class="string">&quot;admin&quot;</span>) solve(<span class="number">49</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드를 보니, 입력 검증 <code>select, or, and, (, ), limit, ,, /, order, cash</code>가 있었다.<br><br>이 때문에 <code>(, ,, )</code>를 사용하는 46번 답은 검증에 걸린다.</p><p><img src="/images/pasted-480.png"><br>그래서 이번 검증에는 Hex가 없어서 admin을 hex로 인코딩하여 요청하니, Flag를 얻을 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-49-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 60 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-60-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-60-Write-Up/</guid>
      <pubDate>Thu, 27 May 2021 00:29:24 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-60"><a href="#Old-60" class="headerlink" title="Old - 60"></a>Old - 60</h2><p><img src="/images/pasted-475.png"><br>기능을 알 수 없는 페이지가 나왔다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">&quot;../../config.php&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>($_GET[<span class="string">&#x27;view_source&#x27;</span>]) view_source();</span><br><span class="line">  login_chk();</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;Your idx is <span class="subst">&#123;$_SESSION[&#x27;idx&#x27;]&#125;</span>&lt;hr&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>(!is_numeric($_COOKIE[<span class="string">&#x27;PHPSESSID&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;Access Denied&lt;br&gt;&lt;a href=./?view_source=1&gt;view-source&lt;/a&gt;&quot;</span>);</span><br><span class="line">  sleep(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span>($_GET[<span class="string">&#x27;mode&#x27;</span>]==<span class="string">&quot;auth&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;Auth~&lt;br&gt;&quot;</span>);</span><br><span class="line">    $result = file_get_contents(<span class="string">&quot;./readme/<span class="subst">&#123;$_SESSION[&#x27;idx&#x27;]&#125;</span>.txt&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/<span class="subst">&#123;$_SESSION[&#x27;idx&#x27;]&#125;</span>/&quot;</span>,$result))&#123;</span><br><span class="line">      <span class="keyword">echo</span>(<span class="string">&quot;Done!&quot;</span>);</span><br><span class="line">      unlink(<span class="string">&quot;./readme/<span class="subst">&#123;$_SESSION[&#x27;idx&#x27;]&#125;</span>.txt&quot;</span>);</span><br><span class="line">      solve(<span class="number">60</span>);</span><br><span class="line">      <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  $p = fopen(<span class="string">&quot;./readme/<span class="subst">&#123;$_SESSION[&#x27;idx&#x27;]&#125;</span>.txt&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">  fwrite($p,$_SESSION[<span class="string">&#x27;idx&#x27;</span>]);</span><br><span class="line">  fclose($p);</span><br><span class="line">  <span class="keyword">if</span>($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]!=<span class="string">&quot;127.0.0.1&quot;</span>)&#123;</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    unlink(<span class="string">&quot;./readme/<span class="subst">&#123;$_SESSION[&#x27;idx&#x27;]&#125;</span>.txt&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드를 보니, 정해진 text의 내용과 내 세션이 같으면 flag를 획득할 수 있는 것으로 판단된다.</p><p>코드를 나눠서 분석을 하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!is_numeric($_COOKIE[<span class="string">&#x27;PHPSESSID&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;Access Denied&lt;br&gt;&lt;a href=./?view_source=1&gt;view-source&lt;/a&gt;&quot;</span>);</span><br></pre></td></tr></table></figure><p>is_numeric 함수가 뭔지 몰라서 검색하니, 값이 숫자인지를 확인하는 함수였다.<br><br>위 코드는 쿠키값이 숫자가 아니면, Access Denied를 출력하는 코드였다.</p><p><img src="/images/pasted-476.png"><br><img src="/images/pasted-477.png"><br>PHPSESSID의 값을 1로 변경했더니, Access Denied가 출력이 안되었다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$p = fopen(<span class="string">&quot;./readme/<span class="subst">&#123;$_SESSION[&#x27;idx&#x27;]&#125;</span>.txt&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">  fwrite($p,$_SESSION[<span class="string">&#x27;idx&#x27;</span>]);</span><br><span class="line">  fclose($p);</span><br><span class="line">  <span class="keyword">if</span>($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]!=<span class="string">&quot;127.0.0.1&quot;</span>)&#123;</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    unlink(<span class="string">&quot;./readme/<span class="subst">&#123;$_SESSION[&#x27;idx&#x27;]&#125;</span>.txt&quot;</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>쿠키 값이 숫자인 상태로 서버에 페이지를 요청하면, IP가 127.0.0.1이 아닌 접속은 1초 뒤에 생성된 세션이 들어있는 파일을 삭제한다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sleep(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;mode&#x27;</span>]==<span class="string">&quot;auth&quot;</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;Auth~&lt;br&gt;&quot;</span>);</span><br><span class="line">$result = file_get_contents(<span class="string">&quot;./readme/<span class="subst">&#123;$_SESSION[&#x27;idx&#x27;]&#125;</span>.txt&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/<span class="subst">&#123;$_SESSION[&#x27;idx&#x27;]&#125;</span>/&quot;</span>,$result))&#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">&quot;Done!&quot;</span>);</span><br><span class="line">  unlink(<span class="string">&quot;./readme/<span class="subst">&#123;$_SESSION[&#x27;idx&#x27;]&#125;</span>.txt&quot;</span>);</span><br><span class="line">  solve(<span class="number">60</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>쿠키값이 숫자인 채로 Get메소드로 <code>mode=auth</code>를 넘기면, 세션이 들어있는 파일을 읽어서 현재 세션과 같으면 Flag를 출력한다.</p><p><img src="/images/pasted-478.png"><br>나는 1초라는 시간을 이용하기로 하였다.<br><br>두 개의 브라우저 세션 쿠키를 숫자로 변경하여, 웨일이 문제 페이지에 접속하여 파일을 생성 후 1초라는 로딩 시간동안 크롬에선 서버에 Get메소드로 <code>?mode=auth</code>를 전달하여 웨일 때문에 생성된 파일을 읽어들어서 Flag를 획득하였다.<br></p><p>이러한 방법이 레이스 공격이다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/27/Webhacking-kr-Old-60-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 46 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/26/Webhacking-kr-Old-46-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/26/Webhacking-kr-Old-46-Write-Up/</guid>
      <pubDate>Wed, 26 May 2021 23:02:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-46"><a href="#Old-46" class="headerlink" title="Old - 46"></a>Old - 46</h2><p><img src="/images/pasted-468.png"><br>Sqli 문제가 나왔다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>($_GET[<span class="string">&#x27;lv&#x27;</span>])&#123;</span><br><span class="line">    $db = dbconnect();</span><br><span class="line">    $_GET[<span class="string">&#x27;lv&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;lv&#x27;</span>]);</span><br><span class="line">    $_GET[<span class="string">&#x27;lv&#x27;</span>] = str_replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>,$_GET[<span class="string">&#x27;lv&#x27;</span>]);</span><br><span class="line">    $_GET[<span class="string">&#x27;lv&#x27;</span>] = str_replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&quot;</span>,$_GET[<span class="string">&#x27;lv&#x27;</span>]);</span><br><span class="line">    $_GET[<span class="string">&#x27;lv&#x27;</span>] = str_replace(<span class="string">&quot;*&quot;</span>,<span class="string">&quot;&quot;</span>,$_GET[<span class="string">&#x27;lv&#x27;</span>]);</span><br><span class="line">    $_GET[<span class="string">&#x27;lv&#x27;</span>] = str_replace(<span class="string">&quot;%&quot;</span>,<span class="string">&quot;&quot;</span>,$_GET[<span class="string">&#x27;lv&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/select|0x|limit|cash/i&quot;</span>,$_GET[<span class="string">&#x27;lv&#x27;</span>])) <span class="keyword">exit</span>();</span><br><span class="line">    $result = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select id,cash from chall46 where lv=<span class="subst">$_GET</span>[lv]&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span>($result)&#123;</span><br><span class="line">      <span class="keyword">echo</span>(<span class="string">&quot;<span class="subst">&#123;$result[&#x27;id&#x27;]&#125;</span> information&lt;br&gt;&lt;br&gt;money : <span class="subst">&#123;$result[&#x27;cash&#x27;]&#125;</span>&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span>($result[<span class="string">&#x27;id&#x27;</span>] == <span class="string">&quot;admin&quot;</span>) solve(<span class="number">46</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드를 확인해보니, 입력값에 대한 검증이 몇가지 있었다.</p><p><strong>입력값에 대한 검증</strong><br>    - addshlashes : <code>&#39;, &quot;, \, NUL</code><br>    - replace : <code>공백, /, *, %</code><br>    - preg_match : <code>select, 0x, limit, cash</code><br>위 검증을 우회하여, 쿼리문의 id 결과값을 admin으로 출력해야한다.</p><p>Sqli를 진행하기 전 어떤 데이터가 있는지 확인해봤다.</p><p><img src="/images/pasted-469.png"><br>1~4번까지 데이터가 있었고, 그 이후에는 출력이 되지 않았다.<br><br>혹시 다른 ID를 SQL 함수로 admin을 만들 수 있지 않을까 했지만, 없는 것 같다.</p><p>확인을 끝냈으니, Sqli에 사용될 쿼리를 테스트하였다.<br><img src="/images/pasted-471.png"><br>몇가지 방법을 시도 끝에 admin을 출력할 수 있었다.<br><br>하지만, 쿼리에 공백과 작음따음표가 있어서 이를 우회해야한다.</p><p><img src="/images/pasted-472.png"><br>나는 공백 검증을 우회하기 위해 <code>or</code> 대신에 <code>||</code>를 사용하기로 했다.</p><p>작은 따음표는 Webhacking.kr 문제 풀이 중에 알아낸 Hex값을 넣으면 문자열로 반환되는 것처럼 Char 함수를 이용하기로 하였다.<br><br>Hex는 현재 preg_match에서 검증하고 있기 때문에 사용하지 않았다.</p><p><img src="/images/pasted-473.png"><br>출력이 잘 되는 것을 볼 수 있다.<br><br>이를 서버로 보냈다.</p><p><img src="/images/pasted-474.png"><br>Flag를 얻을 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/26/Webhacking-kr-Old-46-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 11 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/26/Webhacking-kr-Old-11-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/26/Webhacking-kr-Old-11-Write-Up/</guid>
      <pubDate>Wed, 26 May 2021 21:25:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-11"><a href="#Old-11" class="headerlink" title="Old - 11"></a>Old - 11</h2><p><img src="/images/pasted-466.png"><br>아무 반응이 없어서 코드를 확인하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  $pat=<span class="string">&quot;/[1-3][a-f]&#123;5&#125;_.*<span class="subst">$_SERVER</span>[REMOTE_ADDR].*\tp\ta\ts\ts/&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>(preg_match($pat,$_GET[<span class="string">&#x27;val&#x27;</span>]))&#123;</span><br><span class="line">    solve(<span class="number">11</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">echo</span>(<span class="string">&quot;&lt;h2&gt;Wrong&lt;/h2&gt;&quot;</span>);</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드를 확인해보니, 정규포현식 관련된 문제인 듯하다.<br><br>Get 메소드로 보낸 입력값이 정규포현식에 걸리면, Falg를 출력한다.</p><p>변수 pat에 정의된 정규포현식을 분석하였다.<br>    - [1-3] : 1부터 3까지의 숫자에 해당하는 문자<br>    - [a-f]{5} : a~e까지의 알파벳 소문자<br>    - _.<em>$_SERVER[REMOTE_ADDR] : <code>_</code> + <code>공인 IP 주소</code><br>    - \</em>\tp\ta\ts\ts  : <code>\t</code> 은 탭을 뜻함. 즉, 탭 p 탭 a …</p><p>위를 모두 만족하는 문자열은 <code>123abcde_IP주소    p    a    s    s</code>이다.</p><p><img src="/images/pasted-467.png"><br>위의 값을 서버로 보내니, Flag를 획득할 수 있었다.</p><blockquote><p>PHP 정규포현식 참고 사이트<br> <a href="http://tcpschool.com/php/php_regularExpression_basic">코딩의 시작, TCP School</a></p></blockquote>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/26/Webhacking-kr-Old-11-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 최대공약수와 최소공배수</title>
      <link>https://lrtk-coder.github.io/2021/05/26/Programmers-Level-1-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/</link>
      <guid>https://lrtk-coder.github.io/2021/05/26/Programmers-Level-1-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/</guid>
      <pubDate>Wed, 26 May 2021 20:36:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;최대공약수와-최소공배수&quot;&gt;&lt;a href=&quot;#최대공약수와-최소공배수&quot; class=&quot;headerlink&quot; title=&quot;최대공약수와 최소공배수&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/3</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="최대공약수와-최소공배수"><a href="#최대공약수와-최소공배수" class="headerlink" title="최대공약수와 최소공배수"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12940">최대공약수와 최소공배수</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.</p><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>두 수는 1이상 1000000이하의 자연수입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span>(<span class="params">num1:<span class="built_in">int</span>, num2:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">while</span> num1:</span><br><span class="line">        num2, num1 = num1, num2%num1</span><br><span class="line">    <span class="keyword">return</span> num2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lcm</span>(<span class="params">num1:<span class="built_in">int</span>, num2:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> num1 * num2 // gcd(num1, num2)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n, m</span>):</span></span><br><span class="line">    <span class="keyword">return</span> [gcd(n, m), lcm(n, m)]</span><br></pre></td></tr></table></figure><blockquote><p>참고 블로그<br><a href="https://mathbang.net/206">수학방</a><br><a href="https://brownbears.tistory.com/454">붐곰</a></p></blockquote>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/26/Programmers-Level-1-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 콜라츠 추측</title>
      <link>https://lrtk-coder.github.io/2021/05/26/Programmers-Level-1-%EC%BD%9C%EB%9D%BC%EC%B8%A0-%EC%B6%94%EC%B8%A1/</link>
      <guid>https://lrtk-coder.github.io/2021/05/26/Programmers-Level-1-%EC%BD%9C%EB%9D%BC%EC%B8%A0-%EC%B6%94%EC%B8%A1/</guid>
      <pubDate>Wed, 26 May 2021 20:07:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;콜라츠-추측&quot;&gt;&lt;a href=&quot;#콜라츠-추측&quot; class=&quot;headerlink&quot; title=&quot;콜라츠 추측&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12943&quot;&gt;콜</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="콜라츠-추측"><a href="#콜라츠-추측" class="headerlink" title="콜라츠 추측"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12943">콜라츠 추측</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1-1. 입력된 수가 짝수라면 2로 나눕니다.</span><br><span class="line">1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.</span><br><span class="line">2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.</span><br></pre></td></tr></table></figure><p>예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야하는지 반환하는 함수, solution을 완성해 주세요. 단, 작업을 500번을 반복해도 1이 되지 않는다면 –1을 반환해 주세요.</p><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>입력된 수, num은 1 이상 8000000 미만인 정수입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><h4 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">collatz</span>(<span class="params">num:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> num%<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> num * <span class="number">3</span> + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> num // <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">num:<span class="built_in">int</span></span>):</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> count</span><br><span class="line">        <span class="keyword">elif</span> count &gt;= <span class="number">500</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">        </span><br><span class="line">        num = collatz(num)</span><br><span class="line">        count += <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">collatz</span>(<span class="params">num:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> num%<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> num * <span class="number">3</span> + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> num // <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">num:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">for</span> count <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">500</span>):</span><br><span class="line">        <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> count</span><br><span class="line">        </span><br><span class="line">        num = collatz(num)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/26/Programmers-Level-1-%EC%BD%9C%EB%9D%BC%EC%B8%A0-%EC%B6%94%EC%B8%A1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 7 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/26/Webhacking-kr-Old-7-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/26/Webhacking-kr-Old-7-Write-Up/</guid>
      <pubDate>Wed, 26 May 2021 01:59:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-7"><a href="#Old-7" class="headerlink" title="Old - 7"></a>Old - 7</h2><p><img src="/images/pasted-462.png"><br>Auth 버튼을 클릭했지만, “Access_Denied!”라는 문구의 alert 창이 떴다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$go=$_GET[<span class="string">&#x27;val&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!$go) &#123; <span class="keyword">echo</span>(<span class="string">&quot;&lt;meta http-equiv=refresh content=0;url=index.php?val=1&gt;&quot;</span>); &#125;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;admin page&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor=&#x27;black&#x27;&gt;&lt;font size=2 color=gray&gt;&lt;b&gt;&lt;h3&gt;Admin page&lt;/h3&gt;&lt;/b&gt;&lt;p&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/2|-|\+|from|_|=|\\s|\*|\//i&quot;</span>,$go)) <span class="keyword">exit</span>(<span class="string">&quot;Access Denied!&quot;</span>);</span><br><span class="line">$db = dbconnect();</span><br><span class="line">$rand=rand(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line"><span class="keyword">if</span>($rand==<span class="number">1</span>)&#123;</span><br><span class="line">  $result=mysqli_query($db,<span class="string">&quot;select lv from chall7 where lv=(<span class="subst">$go</span>)&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;nice try!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($rand==<span class="number">2</span>)&#123;</span><br><span class="line">  $result=mysqli_query($db,<span class="string">&quot;select lv from chall7 where lv=((<span class="subst">$go</span>))&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;nice try!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($rand==<span class="number">3</span>)&#123;</span><br><span class="line">  $result=mysqli_query($db,<span class="string">&quot;select lv from chall7 where lv=(((<span class="subst">$go</span>)))&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;nice try!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($rand==<span class="number">4</span>)&#123;</span><br><span class="line">  $result=mysqli_query($db,<span class="string">&quot;select lv from chall7 where lv=((((<span class="subst">$go</span>))))&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;nice try!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($rand==<span class="number">5</span>)&#123;</span><br><span class="line">  $result=mysqli_query($db,<span class="string">&quot;select lv from chall7 where lv=(((((<span class="subst">$go</span>)))))&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;nice try!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">$data=mysqli_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>(!$data[<span class="number">0</span>]) &#123; <span class="keyword">echo</span>(<span class="string">&quot;query error&quot;</span>); <span class="keyword">exit</span>(); &#125;</span><br><span class="line"><span class="keyword">if</span>($data[<span class="number">0</span>]==<span class="number">1</span>)&#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">&quot;&lt;input type=button style=border:0;bgcolor=&#x27;gray&#x27; value=&#x27;auth&#x27; onclick=\&quot;alert(&#x27;Access_Denied!&#x27;)\&quot;&gt;&lt;p&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>($data[<span class="number">0</span>]==<span class="number">2</span>)&#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">&quot;&lt;input type=button style=border:0;bgcolor=&#x27;gray&#x27; value=&#x27;auth&#x27; onclick=\&quot;alert(&#x27;Hello admin&#x27;)\&quot;&gt;&lt;p&gt;&quot;</span>);</span><br><span class="line">  solve(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드를 보니, SQLi를 이용하여 Flag를 얻는 문제인 듯하다.</p><p>1~5번에서 랜덤으로 SQL Query문이 잡히기 때문에 현재 어떤 Query문인지 모른다.<br><br>그래서 나는 일단 1번 SQL Query문을 목표로 잡고 생각하기로 하였다.</p><p>현재 입력값에 대한 검증이 있는데, <code>2, -, +, from, _, =, 문자열 사이 공백, *, /</code>으로 대소문자 구별 없이 검증을 하고 있다.</p><p>해당 검증을 잘 우회하는지 검사하기 위해 코드를 작성하여 검증 우회 테스트를 하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $stdin = fopen(<span class="string">&#x27;php://stdin&#x27;</span>, <span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">    $input = trim(fread($stdin, <span class="number">1024</span>));</span><br><span class="line">    fclose($stdin);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/2|-|\+|from|_|=|\\s|\*|\//i&quot;</span>, $input)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Nop!!\n&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;select lv from chall7 where lv=(<span class="subst">&#123;$input&#125;</span>)\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>몇가지 시도를 해보니, 나머지를 이용하여 이론상으로 2를 만들 수 가 있었다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5%3  </span><br><span class="line">select lv from chall7 <span class="built_in">where</span> lv=(5%3)</span><br></pre></td></tr></table></figure><p>위의 쿼리문이 잘 작동하는지 mysql에서 테스트를 진행하니, 2가 출력이 되었다.<br><br>하지만, 무슨 이유인지 모르겠지만 문제에선 결과값이 없어서 query error를 출력하였다.</p><p>그래서 곰곰히 생각을 하니, 현재 내 도커의 DB에는 2이라는 데이터가 저장이 되어있다.<br><br>만약 문제에선 2가 저장이 안되어있다라는 상황을 생각하게 되었다.</p><p>도커의 mysql에 있는 2를 지우고 쿼리문을 실행하니, 결과값이 전혀 나오지 않았다.<br><br>이를 해결하기 위해 나는 select 2로 하여 2가 출력하도록 시도를 하였다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> lv <span class="keyword">from</span> chall7 <span class="keyword">where</span> lv=(<span class="number">0</span>) <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">2</span><span class="comment">-- );</span></span><br></pre></td></tr></table></figure><p>여러번 시도 끝에 where절의 lv가 false이고, 유니온으로 select 2를 연결 시키면 결과값이 2가 출력이 되었다.<br><br>하지만 위의 쿼리문은 문자열 사이에 공백이 있어서 검증에 통과를 못하였다.</p><p>그래서 구글에 “sql 쿼리 공백 없이“라고 검색하니, 원하는 방법을 찾을 수 있었다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0)union(select(5%3)</span><br><span class="line">select lv from chall7 <span class="built_in">where</span> lv=(0)union(select(5%3))</span><br></pre></td></tr></table></figure><p>바로 <code>(, )</code>를 이용한 방법이다.<br><br>검증은 통과했으나, 쿼리문이 작동 안할 수 도 있으니 Mysql에 테스트를 하였다.</p><p><img src="/images/pasted-463.png"><br>문제 없이 잘 작동하였다.</p><p>Val 파라미터에 <code>0)union(select(5%3)</code>를 넣고 요청하니,<br><img src="/images/pasted-464.png"><br>Nice try!가 출력이 되었다. 당연한 것이다.<br><br>왜냐하면, 쿼리문은 랜덤으로 정해지기 때문에 1번 쿼리문이 나올때까지 요청을 보내야한다.</p><p><img src="/images/pasted-465.png"><br>7번의 요청을 하니, Flag를 얻을 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/26/Webhacking-kr-Old-7-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 하샤드 수</title>
      <link>https://lrtk-coder.github.io/2021/05/25/Programmers-Level-1-%ED%95%98%EC%83%A4%EB%93%9C-%EC%88%98/</link>
      <guid>https://lrtk-coder.github.io/2021/05/25/Programmers-Level-1-%ED%95%98%EC%83%A4%EB%93%9C-%EC%88%98/</guid>
      <pubDate>Tue, 25 May 2021 21:34:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;하샤드-수&quot;&gt;&lt;a href=&quot;#하샤드-수&quot; class=&quot;headerlink&quot; title=&quot;하샤드 수&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12947&quot;&gt;하샤드 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="하샤드-수"><a href="#하샤드-수" class="headerlink" title="하샤드 수"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12947">하샤드 수</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>x는 1 이상, 10000 이하인 정수입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><h4 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">x:<span class="built_in">int</span></span>):</span></span><br><span class="line">    y = <span class="built_in">sum</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">str</span>(x)))</span><br><span class="line">    <span class="keyword">if</span> x%y:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><h4 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">x:<span class="built_in">int</span></span>):</span></span><br><span class="line">    y = <span class="built_in">sum</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">str</span>(x)))</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">not</span>(x%y)</span><br></pre></td></tr></table></figure><p>방법1을 좀 더 간소화 시킨 코드이다.<br><br>나머지가 0이면 하샤드의 수이니 True를 리턴해야한다.<br><br>파이썬은 0은 False로 인식하기 때문에 not을 해 줌으로 True로 리턴하게 해줬다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/25/Programmers-Level-1-%ED%95%98%EC%83%A4%EB%93%9C-%EC%88%98/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
