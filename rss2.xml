<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LRTK Blog</title>
    <link>https://lrtk-coder.github.io/</link>
    
    <atom:link href="https://lrtk-coder.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Coding, Security, IT News 등 정리한 블로그</description>
    <pubDate>Sun, 07 Mar 2021 00:54:20 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Dreamhack Web Client-side 기초 - CSRF</title>
      <link>https://lrtk-coder.github.io/2021/03/06/Dreamhack-Web-Client-side-%EA%B8%B0%EC%B4%88-CSRF/</link>
      <guid>https://lrtk-coder.github.io/2021/03/06/Dreamhack-Web-Client-side-%EA%B8%B0%EC%B4%88-CSRF/</guid>
      <pubDate>Sat, 06 Mar 2021 06:04:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;CSRF-Cross-Site-Request-Forgery-이란&quot;&gt;&lt;a href=&quot;#CSRF-Cross-Site-Request-Forgery-이란&quot; class=&quot;headerlink&quot; title=&quot;CSRF(Cross Site Request </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="CSRF-Cross-Site-Request-Forgery-이란"><a href="#CSRF-Cross-Site-Request-Forgery-이란" class="headerlink" title="CSRF(Cross Site Request Forgery)이란?"></a>CSRF(Cross Site Request Forgery)이란?</h1><p>브라우저는 기본적으로 SOP(Same-Origin-Policy)에 위반되지 않은 모든 요청에 쿠키를 포함해 전송함.</p><p>비정상적으로 사용자의 의도와 무관하게 다른 사이트에 HTTP 요청을 보내는 것을 CSRF 공격이라 함.</p><p>공격을 통해 공격자가 취할 수 있는 이득은 해당 세션 쿠키를 가진 사람만 사용할 수 있는 기능을 요청할 수 있다는 것임.</p><p>CSRF 공격을 성공적으로 수행하기 위해서는 아래 두 가지 조건이 요구됨.</p><ol><li><p>해당 사이트가 쿠키를 이용한 인증 방식을 사용해야함.<br><br>모든 HTTP 전송엔 쿠키가 함께 전송되기 때문에 쿠키에 저장된 세션 아이디로 전송됨.</p></li><li><p>공격자가 사전에 알 수 없는 파라미터가 존재해서는 안됨.<br><br>자동입력 방지 문자를 넣어야하는 요청이나 패스워드 변경 시 기존 패스워드를 입력해야하는 경우는 공격자가 입력해야하는 값을 모르기 때문에 공격이 실패하게 됨.</p></li></ol><h2 id="방어법"><a href="#방어법" class="headerlink" title="방어법"></a>방어법</h2><p>CSRF 공격을 막기 위해서는 보통 두 가지 방법을 사용함.</p><ol><li>세션 쿠키 대신 커스텀 헤더를 사용하여 사용자 인증</li></ol><ol start="2"><li>공격자가 예측할 수 없는 파라미터 추가 및 검증<br><br>Sam Origin에서만 접근 가능한 데이터 삽입 (CSRF Token), CAPTCHA, 비밀번호 등등</li></ol><p>위 두가지 방법은 서버 사이드에서 추가적인 검증을 통해 CSRF를 방어하는 방법임. 서버 코드에 검증 로직이 추가되는 방식이라 서버에 오버헤드가 발생하게됨.</p><p>직접적인 원인을 생각해보면, 브라우저가 크로스 사이트(다른 사이트)로부터 온 요청에 쿠키를 함께 전송한다는 것임.</p><p>이를 잡기 위해 SameSite 쿠키 설정이라는 개념이 있음.</p><p>SameSite 쿠키는 다른 사이트로부터 온 요청에 쿠키를 삽입할지를 설정을 통해서 결정할 수 있음.</p><p>설정 옵션은 Strict, Lax, Normal 값으로 설정 가능함.</p><ul><li><p>Strict 옵션<br><br>모든 크로스 사이트에서 출발한 요청에 해당 쿠키를 삽입하지 않음.</p></li><li><p>Lax 옵션<br><br>Link, Prerender, Form GET을 제외한 요청에는 쿠키를 삽입하지 않음.</p></li><li><p>Normal 옵션<br><br>옵션을 설정하지 않을 시와 동일한 권한을 가짐.</p></li></ul><blockquote><p>크롬은 2020년부터 개발자가 강제로 SameSite=None;Secure;을 넣지 않는 이상 모든 쿠키에 SameSite=Lax를 강제로 적용시킴.</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Dreamhack/">Dreamhack</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Dreamhack/">Dreamhack</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/03/06/Dreamhack-Web-Client-side-%EA%B8%B0%EC%B4%88-CSRF/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈 14623번 문제</title>
      <link>https://lrtk-coder.github.io/2021/03/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%88-14623%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/03/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%88-14623%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Fri, 05 Mar 2021 07:38:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;감정이입&quot;&gt;&lt;a href=&quot;#감정이입&quot; class=&quot;headerlink&quot; title=&quot;감정이입&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/14623&quot;&gt;감정이입&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;감정이입에 대해서 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="감정이입"><a href="#감정이입" class="headerlink" title="감정이입"></a><a href="https://www.acmicpc.net/problem/14623">감정이입</a></h1><p>감정이입에 대해서 알고 있는가? 감정이입이란 자신의 감정을 특정 대상에 이입시키거나 특정 대상의 감정을 자신에게 이입시켜서 서로 공감하는 것이다. 이렇게 자신이 다른 대상이 됐다고 생각을 하면 그전에는 느끼지 못했던 감정을 느낄 수 있어 풍부한 사고를 할 수 있다. 감정이입에 몰입하게 되면 어떠한 단계에 이르게 된다. 이 단계에서는 자신이 감정이입을 하는 대상이 되어 사고를 할 수 있게 된다.</p><p>예로부터 많은 천재들이 이 단계에 다다라 많은 업적을 세웠다. 알베르트 아인슈타인은 빛이 되어 상대성 이론을 발견했고, 찰리 채플린은 자신이 연기하는 대상 그 자체가 되어 많은 사람들이 기억하는 희극배우가 됐다.</p><p>컴퓨터 공학에서도 이런 단계에 다다를 수 있을까? CPU가 되어서 주변 입/출력 장치를 제어하거나, 뉴럴 네트워크에 존재하는 수많은 뉴런들 중 한 뉴런이 되어 계산에 관여하는 상상을 할 수 있을까?</p><p>천 리 길도 한 걸음부터. 컴퓨터에서는 없어서 안될 ALU(Arithmetic Logic Unit)가 되는 상상을 해보자. ALU는 두 이진수의 산술 연산 혹은 논리 연산을 계산하는 회로다. 두 이진수가 주어졌을 때 덧셈은 가산기를, 뺄셈은 보수기와 가산기를 이용해 이루어진다. 그렇다면 두 이진수의 곱셈은 어떻게 이루어 질까? ALU가 되어 이 문제를 해결해보자.</p><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(bin(int(input(), 2) * int(input(), 2))[2:])</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B8%8C%EB%A1%A0%EC%A6%88/">브론즈</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/03/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%88-14623%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈 17009번 문제</title>
      <link>https://lrtk-coder.github.io/2021/03/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%88-17009%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/03/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%88-17009%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Fri, 05 Mar 2021 07:18:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Winning-Score&quot;&gt;&lt;a href=&quot;#Winning-Score&quot; class=&quot;headerlink&quot; title=&quot;Winning Score&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/17009&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Winning-Score"><a href="#Winning-Score" class="headerlink" title="Winning Score"></a><a href="https://www.acmicpc.net/problem/17009">Winning Score</a></h1><p>You record all of the scoring activity at a basketball game. Points are scored by a 3-point shot, a 2-point field goal, or a 1-point free throw.</p><p>You know the number of each of these types of scoring for the two teams: the Apples and the Bananas. Your job is to determine which team won, or if the game ended in a tie.</p><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; [int(input()) for _ in range(3)]</span><br><span class="line">b &#x3D; [int(input()) for _ in range(3)]</span><br><span class="line"></span><br><span class="line">a_score &#x3D; a[0] * 3 + a[1] * 2 + a[2]</span><br><span class="line">b_score &#x3D; b[0] * 3 + b[1] * 2 + b[2]</span><br><span class="line"></span><br><span class="line">print([[&#39;A&#39;, &#39;T&#39;][a_score &#x3D;&#x3D; b_score], &#39;B&#39;][a_score &lt; b_score])</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B8%8C%EB%A1%A0%EC%A6%88/">브론즈</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/03/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%88-17009%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>KISEC - 그들의 사이버 첩보전 이야기 (OSINT에 대하여) 강의 후기</title>
      <link>https://lrtk-coder.github.io/2021/03/04/KISEC-%EA%B7%B8%EB%93%A4%EC%9D%98-%EC%82%AC%EC%9D%B4%EB%B2%84-%EC%B2%A9%EB%B3%B4%EC%A0%84-%EC%9D%B4%EC%95%BC%EA%B8%B0-OSINT%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EA%B0%95%EC%9D%98-%ED%9B%84%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/03/04/KISEC-%EA%B7%B8%EB%93%A4%EC%9D%98-%EC%82%AC%EC%9D%B4%EB%B2%84-%EC%B2%A9%EB%B3%B4%EC%A0%84-%EC%9D%B4%EC%95%BC%EA%B8%B0-OSINT%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EA%B0%95%EC%9D%98-%ED%9B%84%EA%B8%B0/</guid>
      <pubDate>Thu, 04 Mar 2021 10:50:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;평소에 OSINT에 관심이 있어서 강의를 수강하려 KISEC으로 갔다.&lt;/p&gt;
&lt;p&gt;강의에서 정말 많이 배울 수 있었다. 평소에 다크웹에 들어갈 때 감염의 위험을 두려워서 VM 위에 토르와 VPN으로 접속했는데 강사님의 말씀으로 파일을 다운로드 </description>
        
      
      
      
      <content:encoded><![CDATA[<p>평소에 OSINT에 관심이 있어서 강의를 수강하려 KISEC으로 갔다.</p><p>강의에서 정말 많이 배울 수 있었다. 평소에 다크웹에 들어갈 때 감염의 위험을 두려워서 VM 위에 토르와 VPN으로 접속했는데 강사님의 말씀으로 파일을 다운로드 안하는 이상 감염은 그리 신경 안써도 된다고 한다.</p><p>또한 토르말고 일반 브라우저로 onion 사이트를 접속할 수 있는 방법을 알려주셨는데 다크웹에 접속하기 위해 고생한 것이 헛고생이 되었다.</p><p>강의 내용 중에서 가장 흥미로운 것이 디지털 교도소와 n번방의 관계를 OSINT를 이용하여 증명한 CASE가 흥미롭고 재밌었다.</p><p>CASE에서 어떻게 디지털 교도소가 서버의 위치를 숨기는 방법, 추적을 피하기 위한 서비스 등을 알려주셨는데 그동안 궁금하였던 것이 풀어졌던 순간이였다.</p><p>다만 아쉬운 점이 강의가 8시간으로 다소 짧은 시간이라는 점이다. 좀 더 길게 진행됬으면 더 많은 것을 배울 수 있지만, 현 강의도 충분히 배울 내용이 많았다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/03/04/KISEC-%EA%B7%B8%EB%93%A4%EC%9D%98-%EC%82%AC%EC%9D%B4%EB%B2%84-%EC%B2%A9%EB%B3%B4%EC%A0%84-%EC%9D%B4%EC%95%BC%EA%B8%B0-OSINT%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC-%EA%B0%95%EC%9D%98-%ED%9B%84%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>보안뉴스 - 다크웹 차세대 범죄자 양성</title>
      <link>https://lrtk-coder.github.io/2021/03/04/%EB%B3%B4%EC%95%88%EB%89%B4%EC%8A%A4-%EA%B5%AC%EC%9D%B8%EA%B5%AC%EC%A7%81-%ED%99%9C%EB%8F%99-%EB%8A%98%EC%96%B4%EB%82%98%EB%8A%94-%EB%8B%A4%ED%81%AC%EC%9B%B9-%EC%B0%A8%EC%84%B8%EB%8C%80-%EB%B2%94%EC%A3%84%EC%9E%90-%EC%9C%A1%EC%84%B1-%EC%A4%91/</link>
      <guid>https://lrtk-coder.github.io/2021/03/04/%EB%B3%B4%EC%95%88%EB%89%B4%EC%8A%A4-%EA%B5%AC%EC%9D%B8%EA%B5%AC%EC%A7%81-%ED%99%9C%EB%8F%99-%EB%8A%98%EC%96%B4%EB%82%98%EB%8A%94-%EB%8B%A4%ED%81%AC%EC%9B%B9-%EC%B0%A8%EC%84%B8%EB%8C%80-%EB%B2%94%EC%A3%84%EC%9E%90-%EC%9C%A1%EC%84%B1-%EC%A4%91/</guid>
      <pubDate>Thu, 04 Mar 2021 02:07:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;구인구직-활동-늘어나는-다크웹-차세대-범죄자-육성-중&quot;&gt;&lt;a href=&quot;#구인구직-활동-늘어나는-다크웹-차세대-범죄자-육성-중&quot; class=&quot;headerlink&quot; title=&quot;구인구직 활동 늘어나는 다크웹, 차세대 범죄자 육성 중&quot;&gt;&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="구인구직-활동-늘어나는-다크웹-차세대-범죄자-육성-중"><a href="#구인구직-활동-늘어나는-다크웹-차세대-범죄자-육성-중" class="headerlink" title="구인구직 활동 늘어나는 다크웹, 차세대 범죄자 육성 중"></a><a href="https://www.boannews.com/media/view.asp?idx=95283">구인구직 활동 늘어나는 다크웹, 차세대 범죄자 육성 중</a></h1><p>뉴스 내용은 정리하자면, 다크웹에서 해킹조직에서 구인구직이 많이 진행된다는 기사이다.</p><p>나는 기사 내용 중 흥미로운 것을 발견할 수 있었다.</p><p>CryptBB라는 해킹포럼에서 초보자 대상으로 해킹 강좌가 올라와 있다는 내용이다.</p><p>그동안 포럼을 떠돌아다녀 봤는데 Dreamhack 사이트처럼 내용이 잘 정리된 글은 거의 보지를 못했다. 주로 궁금한 점을 질문을 하면 답변을 받는 식으로 하는데 Cryptbb는 아예 강좌가 올라와 있다고 한다.</p><p><img src="/images/pasted-264.png"></p><p><img src="/images/pasted-263.png"><br>강좌가 어떤 내용으로 이루어져 있는지 궁금하여 직접 CryptBB에 접속하였다.</p><p>사이트에서 특이한점이 워게임 사이트처럼 Chaalenges가 있다는 점이다.</p><p>또한 포럼의 내용은 Newbie, Programming, Hacking, Darkweb Discussions, Market으로 나누어져 있다.</p><p>Newbie은 사이트 사용 방법을 모르는 사이트의 Newbie가 질문하는 곳이다.</p><p>Beginner Programming은 프로그래밍의 초보자들을 위해 만들어진 곳인데 들어가보면 특정 유저가 강좌나 팁들을 올리거나 궁금한 점이 있으면 질문하는 곳이다. Begunner Hacking도 해킹을 위한 곳이다.</p><p>Programming 강좌를 하나 선택하여 확인을 해보니, 책처럼 자세한 내용을 정리한 것이 아닌 배우면 도움되는 것을 정리하였다. 또한 왜 배워야하는 지에 대한 내용 적혀져 있었다. 특이한 점은 보통 C언어를 배우고 어셈블리어를 배우는데 여기선 어셈블리어를 이해한 다음에 JAVA을 추천하고 있다. 아마 글쓴이의 개인적인 생각인 듯하다.</p><p>강좌에서 어셈블리어 공부할 때 도움되는 사이트를 첨부했는데 혹시 공부하실 분은 가서 공부하면 도움이 될 것 같다.<br><br><a href="https://www.101computing.net/little-man-computer-mini-challenges/">101 Computing LMC Challenges</a></p><p>Hacking 강좌는 확인해보니 강좌는 없었고, 주로 질문하는 곳이였다. 하지만 실망하지말라 Begunner Hacking을 좀 살펴보니 사이트 하나를 발견할 수 있었다. 바로 HackTown이라는 사이트를 발견할 수 있었다.</p><p><img src="/images/pasted-266.png"><br><img src="/images/pasted-265.png"><br>이 사이트는 강의를 목적으로 운영하는 사이트이다. 맴버쉽제로 운영되는데 무료 강의도 있었다. 맴버쉽을 가입하면, RAT 제작과 윈도우 디펜더 우회 방법, 쇼단을 이용하여 자신만의 봇넷 생성 등의 강의을 볼 수 있다.</p><p>무료 강의 중 하나를 봤는데 재밌는 점이 여기서도 자격증을 취득하는 것이 좋다는 글이 있었다. 또한 되도록이면 자신의 나라에서 범죄 행위를 하지말라는 경고도 있었다. 경고는 미성년자가 해킹을 하여 잡혀간 기사와 다크웹에서 해킹 조직을 구해서 들어가서 해킹을 하다가 잡혀간 기사를 보여주면서 경고한다.</p><p>경고하는 이유는 미숙한 실력으로 하지말고 실력을 키운 다음 범죄를 일으키라는 것이니 너무 좋게 보지말자.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/%EB%B3%B4%EC%95%88%EB%89%B4%EC%8A%A4/">보안뉴스</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B3%B4%EC%95%88%EB%89%B4%EC%8A%A4/">보안뉴스</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%8B%A4%ED%81%AC%EC%9B%B9/">다크웹</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/03/04/%EB%B3%B4%EC%95%88%EB%89%B4%EC%8A%A4-%EA%B5%AC%EC%9D%B8%EA%B5%AC%EC%A7%81-%ED%99%9C%EB%8F%99-%EB%8A%98%EC%96%B4%EB%82%98%EB%8A%94-%EB%8B%A4%ED%81%AC%EC%9B%B9-%EC%B0%A8%EC%84%B8%EB%8C%80-%EB%B2%94%EC%A3%84%EC%9E%90-%EC%9C%A1%EC%84%B1-%EC%A4%91/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Insecure DOR (Order Tickets)</title>
      <link>https://lrtk-coder.github.io/2021/03/02/Insecure-DOR-Order-Tickets/</link>
      <guid>https://lrtk-coder.github.io/2021/03/02/Insecure-DOR-Order-Tickets/</guid>
      <pubDate>Tue, 02 Mar 2021 16:06:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;문제풀이&quot;&gt;&lt;a href=&quot;#문제풀이&quot; class=&quot;headerlink&quot; title=&quot;문제풀이&quot;&gt;&lt;/a&gt;문제풀이&lt;/h1&gt;&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Lo</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/images/pasted-260.png"><br>이번엔 티켓을 구입하는 페이지가 나왔다.</p><p>프록시를 이용하여 어떤 값을 보내는지 확인하였다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/insecure_direct_object_ref_2.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: XXX.XXX.XXX.XXX</span><br><span class="line"><span class="attribute">Content-Length</span>: 46</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Origin</span>: http://XXX.XXX.XXX.XXX</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span>: http://XXX.XXX.XXX.XXX/insecure_direct_object_ref_2.php</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=hmnqs8cjcddm4sle4f32ikluk3; security_level=0</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">ticket_quantity=1&amp;ticket_price=15&amp;action=order</span><br></pre></td></tr></table></figure><p>Body부분을 보니, 티켓 갯수와 가격을 서버에 보내는 것을 확인할 수 있었다.</p><p>갯수를 10, 가격을 1로 변경했을 때 어떻게 작동하는지 확인하였다.</p><p><img src="/images/pasted-262.png"><br>티켓 수 만큼 가격이 계산되는 것 같았다.</p><p>간단하게 패킷을 수정하는 것만으로도 티켓 10표를 10유로로 구매할 수 있었다.</p><h2 id="Medium-amp-High"><a href="#Medium-amp-High" class="headerlink" title="Medium &amp; High"></a>Medium &amp; High</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ticket_quantity&#x3D;1&amp;action&#x3D;order</span><br></pre></td></tr></table></figure><p>가격 계산에 필요한 1표당 가격을 클라이언트에서 받아오지 않고 서버에서 갖고있다가 표의 개수 곱하기를 하여 가격을 계산하였다.</p><p>이에 따라 패킷을 수정하여 가격을 변경하는 행위를 막을 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/03/02/Insecure-DOR-Order-Tickets/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 10989번 문제</title>
      <link>https://lrtk-coder.github.io/2021/03/02/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-10989%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/03/02/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-10989%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Tue, 02 Mar 2021 12:27:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;수-정렬하기3&quot;&gt;&lt;a href=&quot;#수-정렬하기3&quot; class=&quot;headerlink&quot; title=&quot;수 정렬하기3&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/10989&quot;&gt;수 정렬하기3&lt;/a&gt;&lt;/h1&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="수-정렬하기3"><a href="#수-정렬하기3" class="headerlink" title="수 정렬하기3"></a><a href="https://www.acmicpc.net/problem/10989">수 정렬하기3</a></h1><p>N개의 수가 주어졌을 때, 이를 오름차순으로 정렬하는 프로그램을 작성하시오.</p><h2 id="문제풀이1"><a href="#문제풀이1" class="headerlink" title="문제풀이1"></a>문제풀이1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">n &#x3D; int(input())</span><br><span class="line">data &#x3D; [0] * 10001</span><br><span class="line"></span><br><span class="line">for _ in range(n):</span><br><span class="line">    d &#x3D; int(sys.stdin.readline())</span><br><span class="line">    data[d] +&#x3D; 1</span><br><span class="line"></span><br><span class="line">for i in range(10001):</span><br><span class="line">    if data[i] !&#x3D; 0:</span><br><span class="line">        for j in range(data[i]):</span><br><span class="line">            print(i)</span><br></pre></td></tr></table></figure><h3 id="풀이1-설명"><a href="#풀이1-설명" class="headerlink" title="풀이1 설명"></a>풀이1 설명</h3><p>문제의 조건을 보면 시간 제한은 3초, 메모리 제한은 8MB이다.</p><p>즉, 시간 복잡도/공간 복잡도를 생각을 해야하는 문제이다.</p><p>입력의 조건을 보면, 0 &lt;= m(입력되는 수) &lt;= 10,000이라는 조건이 있다.<br>그리고 이 어마무시한 입력값들이 최대 10,000,000이 주어진다는게 큰 문제이다.</p><p><img src="/images/pasted-252.png"></p><p>이러한 수 많은 값들이 리스트나 튜플로 메모리에 저장하여, 그 리스트나 튜플을 정렬한다고 했을 때 8MB라는 공간을 맞출 수 없다.</p><p>그래서 리스트의 인덱스을 입력되는 수라고 생각하고, 해당 자리의 값을 +1을 해준다.</p><p>위 사진과 같이 효율적으로 저장한다면, 총 5개의 데이터가 저장이 된다.<br>만약 입력값을 그냥 리스트로 저장한다고 하면 총 9개의 데이터가 저장이 되니, 훨씬 효율적이다.</p><p>이를 위해서 입력되는 값이 최대입력값과 최소입력값을 알아야 하고, 그 크키 만큼 리스트를 선언을 해줘야한다.<br>그래서 <code>[0] * 10001</code>이라는 0부터 10000까지의 공간을 리스트로 만든 것이다.</p><p><img src="/images/pasted-253.png"></p><p>하지만 마지막 출력을 위한 이중 for문이 있어서 시간이 좀 걸린 것이 걸렸다. 이를 수정하였다.</p><h2 id="문제-풀이2"><a href="#문제-풀이2" class="headerlink" title="문제 풀이2"></a>문제 풀이2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">n &#x3D; int(input())</span><br><span class="line">data &#x3D; [0] * 10001</span><br><span class="line"></span><br><span class="line">for _ in range(n):</span><br><span class="line">    d &#x3D; int(sys.stdin.readline())</span><br><span class="line">    data[d] +&#x3D; 1</span><br><span class="line"></span><br><span class="line">for i in range(10001):</span><br><span class="line">    if data[i] !&#x3D; 0:</span><br><span class="line">        print(f&#39;&#123;i&#125;\n&#39; * data[i], end&#x3D;&#39;&#39;)</span><br></pre></td></tr></table></figure><h3 id="풀이2-설명"><a href="#풀이2-설명" class="headerlink" title="풀이2 설명"></a>풀이2 설명</h3><p><img src="/images/pasted-254.png"></p><p>이중 for문에서 for문으로 변경하니, 훨씬 시간이 절약되는 것을 확인 할 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%845/">백준 실버5</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/03/02/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-10989%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 10814번 문제</title>
      <link>https://lrtk-coder.github.io/2021/03/02/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-10814%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/03/02/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-10814%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Tue, 02 Mar 2021 11:40:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;나이순-정렬&quot;&gt;&lt;a href=&quot;#나이순-정렬&quot; class=&quot;headerlink&quot; title=&quot;나이순 정렬&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/10814&quot;&gt;나이순 정렬&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;온라</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="나이순-정렬"><a href="#나이순-정렬" class="headerlink" title="나이순 정렬"></a><a href="https://www.acmicpc.net/problem/10814">나이순 정렬</a></h1><p>온라인 저지에 가입한 사람들의 나이와 이름이 가입한 순서대로 주어진다. 이때, 회원들을 나이가 증가하는 순으로, 나이가 같으면 먼저 가입한 사람이 앞에 오는 순서로 정렬하는 프로그램을 작성하시오.</p><h2 id="문제풀이1"><a href="#문제풀이1" class="headerlink" title="문제풀이1"></a>문제풀이1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">n &#x3D; int(input())</span><br><span class="line">data &#x3D; []</span><br><span class="line"></span><br><span class="line">for _ in range(n):</span><br><span class="line">    x, y &#x3D; input().split()</span><br><span class="line">    data.append((int(x), y))</span><br><span class="line"></span><br><span class="line">for a, b in sorted(data, key&#x3D;lambda x: x[0]):</span><br><span class="line">    print(a, b)</span><br></pre></td></tr></table></figure><h3 id="풀이1-설명"><a href="#풀이1-설명" class="headerlink" title="풀이1 설명"></a>풀이1 설명</h3><p>간단하게 sorted 함수를 이용하여 정렬하였다. 이때 key 속성을 지정하여 나이로 정렬 될 수 있게 설정하였다.</p><p><img src="/images/pasted-250.png"><br>하지만 여기서 큰 문제가 있으니, 바로 실행 시간이 엄청 많이 나온다는 것이다.</p><p>문제가 for문 안에 있는 input() 함수가 문제인 것으로 판단되어 sys 모듈의 stdin으로 변경하였다.</p><h2 id="문제풀이2"><a href="#문제풀이2" class="headerlink" title="문제풀이2"></a>문제풀이2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">n &#x3D; int(input())</span><br><span class="line">data &#x3D; []</span><br><span class="line"></span><br><span class="line">for _ in range(n):</span><br><span class="line">    x, y &#x3D; sys.stdin.readline().split()</span><br><span class="line">    data.append((int(x), y))</span><br><span class="line"></span><br><span class="line">for i in sorted(data, key&#x3D;lambda x: x[0]):</span><br><span class="line">    print(i[0], i[1])</span><br></pre></td></tr></table></figure><h3 id="풀이2-설명"><a href="#풀이2-설명" class="headerlink" title="풀이2 설명"></a>풀이2 설명</h3><p>문제풀이1에서 for문 안의 input 함수를 sys.stdin.readline 함수로 변경하였다.</p><p><img src="/images/pasted-251.png"><br>실행 시간이 확 줄어진 것을 볼 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%845/">백준 실버5</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/03/02/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-10814%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Insecure DOR (Reset Secret)</title>
      <link>https://lrtk-coder.github.io/2021/03/02/Insecure-DOR-Reset-Secret/</link>
      <guid>https://lrtk-coder.github.io/2021/03/02/Insecure-DOR-Reset-Secret/</guid>
      <pubDate>Tue, 02 Mar 2021 06:51:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;문제풀이&quot;&gt;&lt;a href=&quot;#문제풀이&quot; class=&quot;headerlink&quot; title=&quot;문제풀이&quot;&gt;&lt;/a&gt;문제풀이&lt;/h1&gt;&lt;h2 id=&quot;Low-amp-Medium-amp-High&quot;&gt;&lt;a href=&quot;#Low-amp-Medium-amp-Hig</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><h2 id="Low-amp-Medium-amp-High"><a href="#Low-amp-Medium-amp-High" class="headerlink" title="Low &amp; Medium &amp; High"></a>Low &amp; Medium &amp; High</h2><p><img src="/images/pasted-255.png"></p><p>이번엔 계정의 Scret 값을 Any bugs?로 변경해주는 사이트가 나왔다.</p><p>프록시를 이용하여 서버에 어떤 값을 보내는지 확인하였다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/xxe-2.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: XXX.XXX.XXX.XXX</span><br><span class="line"><span class="attribute">Content-Length</span>: 59</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36</span><br><span class="line"><span class="attribute">Content-type</span>: text/xml; charset=UTF-8</span><br><span class="line"><span class="attribute">Accept</span>: */*</span><br><span class="line"><span class="attribute">Origin</span>: http://XXX.XXX.XXX.XXX</span><br><span class="line"><span class="attribute">Referer</span>: http://XXX.XXX.XXX.XXX/insecure_direct_object_ref_3.php</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=hmnqs8cjcddm4sle4f32ikluk3; security_level=0</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">&lt;reset&gt;&lt;login&gt;bee&lt;/login&gt;&lt;secret&gt;Any bugs?&lt;/secret&gt;&lt;/reset&gt;</span><br></pre></td></tr></table></figure><p>Body부분을 확인해보니, XML형식으로 데이터를 보내주고 있었다.</p><p><img src="/images/pasted-256.png"><br>이번에도 bee 대신에 다른 계정을 삽입하여 보낸다면 그 계정의 Scret 값이 Any bugs?로 초기화가 되겠지만, 일단 bee 계정을 초기화 해보았다.</p><p><img src="/images/pasted-257.png"><br>이번엔 LRTK 계정의 Scret을 초기화하겠다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">reset</span>&gt;</span><span class="tag">&lt;<span class="name">login</span>&gt;</span>lrtk<span class="tag">&lt;/<span class="name">login</span>&gt;</span><span class="tag">&lt;<span class="name">secret</span>&gt;</span>Any bugs?<span class="tag">&lt;/<span class="name">secret</span>&gt;</span><span class="tag">&lt;/<span class="name">reset</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-259.png"></p><p>간단하게 변경되는 것을 볼 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/03/02/Insecure-DOR-Reset-Secret/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 11650번 문제</title>
      <link>https://lrtk-coder.github.io/2021/03/02/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-11650%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/03/02/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-11650%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Tue, 02 Mar 2021 02:55:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;좌표-정렬하기&quot;&gt;&lt;a href=&quot;#좌표-정렬하기&quot; class=&quot;headerlink&quot; title=&quot;좌표 정렬하기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11650&quot;&gt;좌표 정렬하기&lt;/a&gt;&lt;/h1&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="좌표-정렬하기"><a href="#좌표-정렬하기" class="headerlink" title="좌표 정렬하기"></a><a href="https://www.acmicpc.net/problem/11650">좌표 정렬하기</a></h1><p>2차원 평면 위의 점 N개가 주어진다. 좌표를 x좌표가 증가하는 순으로, x좌표가 같으면 y좌표가 증가하는 순서로 정렬한 다음 출력하는 프로그램을 작성하시오.</p><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">n &#x3D; int(input())</span><br><span class="line">data &#x3D; []</span><br><span class="line"></span><br><span class="line">for _ in range(n):</span><br><span class="line">    x, y &#x3D; sys.stdin.readline().split()</span><br><span class="line">    data.append((int(x), int(y)))</span><br><span class="line"></span><br><span class="line">for i in sorted(data):</span><br><span class="line">    print(i[0], i[1])</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>sorted 함수는 자동으로 0번째 값이 같으면 1번째 값으로 정렬한다.</p><p>하지만, key 속성을 사용하여 0번째 값을 key로 지정한다면 좀 다르게 정렬한다.</p><p>0번째 값이 같으면, 먼저 삽입된 순으로 정렬이 된다.</p><p>직접 sorted 함수와 key 속성을 쓴 sorted 함수를 비교하면 구별이 쉬울 것이다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%845/">백준 실버5</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/03/02/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-11650%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 1920번 문제</title>
      <link>https://lrtk-coder.github.io/2021/03/01/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-1920%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/03/01/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-1920%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Mon, 01 Mar 2021 14:15:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;수-찾기&quot;&gt;&lt;a href=&quot;#수-찾기&quot; class=&quot;headerlink&quot; title=&quot;수 찾기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1920&quot;&gt;수 찾기&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;N개의 정수 A[1]</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="수-찾기"><a href="#수-찾기" class="headerlink" title="수 찾기"></a><a href="https://www.acmicpc.net/problem/1920">수 찾기</a></h1><p>N개의 정수 A[1], A[2], …, A[N]이 주어져 있을 때, 이 안에 X라는 정수가 존재하는지 알아내는 프로그램을 작성하시오.</p><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">n &#x3D; input()</span><br><span class="line">data &#x3D; &#123;*map(int, input().split())&#125;</span><br><span class="line">n2 &#x3D; input()</span><br><span class="line">data2 &#x3D; [*map(int, input().split())]</span><br><span class="line"></span><br><span class="line">for _ in data2:</span><br><span class="line">    if _ in data:</span><br><span class="line">        print(1)</span><br><span class="line">    else:</span><br><span class="line">        print(0)</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>Set 함수를 이용하여 혹시나 있을 첫번째 데이터인 data 속의 값의 중복 제거 후 data2의 값과 하나씩 비교하여 있으면 1를 출력</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%844/">백준 실버4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/03/01/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-1920%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 5397번 문제</title>
      <link>https://lrtk-coder.github.io/2021/03/01/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%843-5397%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/03/01/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%843-5397%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Mon, 01 Mar 2021 03:42:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;키로거&quot;&gt;&lt;a href=&quot;#키로거&quot; class=&quot;headerlink&quot; title=&quot;키로거&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/5397&quot;&gt;키로거&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;창영이는 강산이의 비밀번호를</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="키로거"><a href="#키로거" class="headerlink" title="키로거"></a><a href="https://www.acmicpc.net/problem/5397">키로거</a></h1><p>창영이는 강산이의 비밀번호를 훔치기 위해서 강산이가 사용하는 컴퓨터에 키로거를 설치했다. 며칠을 기다린 끝에 창영이는 강산이가 비밀번호 창에 입력하는 글자를 얻어냈다.</p><p>키로거는 사용자가 키보드를 누른 명령을 모두 기록한다. 따라서, 강산이가 비밀번호를 입력할 때, 화살표나 백스페이스를 입력해도 정확한 비밀번호를 알아낼 수 있다.</p><p>강산이가 비밀번호 창에서 입력한 키가 주어졌을 때, 강산이의 비밀번호를 알아내는 프로그램을 작성하시오.</p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">test_case &#x3D; int(input())</span><br><span class="line">for _ in range(test_case):</span><br><span class="line">    left_stack, right_stack &#x3D; [], []</span><br><span class="line">    cuser &#x3D; input()</span><br><span class="line"></span><br><span class="line">    for data in cuser:</span><br><span class="line">        if data &#x3D;&#x3D; &#39;&lt;&#39;:</span><br><span class="line">            if left_stack:</span><br><span class="line">                right_stack.append(left_stack.pop())</span><br><span class="line">        elif data &#x3D;&#x3D; &#39;&gt;&#39;:</span><br><span class="line">            if right_stack:</span><br><span class="line">                left_stack.append(right_stack.pop())</span><br><span class="line">        elif data &#x3D;&#x3D; &#39;-&#39;:</span><br><span class="line">            if left_stack:</span><br><span class="line">                left_stack.pop()</span><br><span class="line">        else:</span><br><span class="line">            left_stack.append(data)</span><br><span class="line">    left_stack.extend(reversed(right_stack))</span><br><span class="line">    print(&#39;&#39;.join(left_stack))</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>두 개의 스택을 선언하여, 진짜 커서가 움직이는 것처럼 구현하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%843/">백준 실버3</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/03/01/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%843-5397%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 1966번 문제</title>
      <link>https://lrtk-coder.github.io/2021/03/01/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%843-1966%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/03/01/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%843-1966%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Mon, 01 Mar 2021 02:09:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;프린터-큐&quot;&gt;&lt;a href=&quot;#프린터-큐&quot; class=&quot;headerlink&quot; title=&quot;프린터 큐&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1966&quot;&gt;프린터 큐&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;여러분도 알다</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="프린터-큐"><a href="#프린터-큐" class="headerlink" title="프린터 큐"></a><a href="https://www.acmicpc.net/problem/1966">프린터 큐</a></h1><p>여러분도 알다시피 여러분의 프린터 기기는 여러분이 인쇄하고자 하는 문서를 인쇄 명령을 받은 ‘순서대로’, 즉 먼저 요청된 것을 먼저 인쇄한다. 여러 개의 문서가 쌓인다면 Queue 자료구조에 쌓여서 FIFO - First In First Out - 에 따라 인쇄가 되게 된다. 하지만 상근이는 새로운 프린터기 내부 소프트웨어를 개발하였는데, 이 프린터기는 다음과 같은 조건에 따라 인쇄를 하게 된다.</p><p>현재 Queue의 가장 앞에 있는 문서의 ‘중요도’를 확인한다.<br>나머지 문서들 중 현재 문서보다 중요도가 높은 문서가 하나라도 있다면, 이 문서를 인쇄하지 않고 Queue의 가장 뒤에 재배치 한다. 그렇지 않다면 바로 인쇄를 한다.<br>예를 들어 Queue에 4개의 문서(A B C D)가 있고, 중요도가 2 1 4 3 라면 C를 인쇄하고, 다음으로 D를 인쇄하고 A, B를 인쇄하게 된다.</p><p>여러분이 할 일은, 현재 Queue에 있는 문서의 수와 중요도가 주어졌을 때, 어떤 한 문서가 몇 번째로 인쇄되는지 알아내는 것이다. 예를 들어 위의 예에서 C문서는 1번째로, A문서는 3번째로 인쇄되게 된다.</p><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">test_case &#x3D; int(input())</span><br><span class="line">for _ in range(test_case):</span><br><span class="line">    n, m &#x3D; map(int, input().split())</span><br><span class="line">    queue &#x3D; [(data, idx) for idx, data in enumerate([*map(int, input().split())])]</span><br><span class="line"></span><br><span class="line">    count &#x3D; 0</span><br><span class="line">    while True:</span><br><span class="line">        if queue[0][0] &#x3D;&#x3D; max(queue, key&#x3D;lambda x: x[0])[0]:</span><br><span class="line">            count +&#x3D; 1</span><br><span class="line">            if queue[0][1] &#x3D;&#x3D; m:</span><br><span class="line">                print(count)</span><br><span class="line">                break</span><br><span class="line">            else:</span><br><span class="line">                queue.pop(0)</span><br><span class="line">        else:</span><br><span class="line">            queue.append(queue.pop(0))</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><ul><li>몇번을 입력 받을 건가? : test_case</li><li>Queue 안의 문서 갯수 : n</li><li>Queue에서 몇번째로 POP되는지 알고자하는 번수 : m</li><li>Queue</li></ul><p>위 4개를 입력받고, 해당 Queue에는 중요도가 저장이 된다.</p><p><img src="/images/pasted-248.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">test_case &#x3D; int(input())</span><br><span class="line">for _ in range(test_case):</span><br><span class="line">    n, m &#x3D; map(int, input().split())</span><br><span class="line">    queue &#x3D; [*map(int, input().split())]</span><br><span class="line">    queue &#x3D; [(data, idx) for idx, data in enumerate(queue)]</span><br></pre></td></tr></table></figure><p>문제풀이에선 queue를 한 줄로 표현했으나, 위와 같이 정의할 수도 있다.<br>queue의 값에 index(문서)도 같이 포함을 하여, 몇번째 문서인지를 검사할 수 있도록 하였다.</p><p><img src="/images/pasted-249.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">count &#x3D; 0</span><br><span class="line">while True:</span><br><span class="line">if queue[0][0] &#x3D;&#x3D; max(queue, key&#x3D;lambda x: x[0])[0]:</span><br><span class="line">count +&#x3D; 1</span><br><span class="line">    else:</span><br><span class="line">    queue.append(queue.pop(0))</span><br></pre></td></tr></table></figure><p>무한 루프를 이용하여, 중요도가 가장 큰 값이 pop을 할 수 있도록 순회를 하였다.</p><p>이렇게 Queue의 특성을 이용하여 풀이를 진행하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%843/">백준 실버3</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/03/01/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%843-1966%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈 2920번 문제</title>
      <link>https://lrtk-coder.github.io/2021/02/28/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%882-2920%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/02/28/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%882-2920%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Sun, 28 Feb 2021 06:27:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;음계&quot;&gt;&lt;a href=&quot;#음계&quot; class=&quot;headerlink&quot; title=&quot;음계&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2920&quot;&gt;음계&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;다장조는 c d e f g a b </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="음계"><a href="#음계" class="headerlink" title="음계"></a><a href="https://www.acmicpc.net/problem/2920">음계</a></h1><p>다장조는 c d e f g a b C, 총 8개 음으로 이루어져있다. 이 문제에서 8개 음은 다음과 같이 숫자로 바꾸어 표현한다. c는 1로, d는 2로, …, C를 8로 바꾼다.</p><p>1부터 8까지 차례대로 연주한다면 ascending, 8부터 1까지 차례대로 연주한다면 descending, 둘 다 아니라면 mixed 이다.</p><p>연주한 순서가 주어졌을 때, 이것이 ascending인지, descending인지, 아니면 mixed인지 판별하는 프로그램을 작성하시오.</p><h2 id="문제풀이1"><a href="#문제풀이1" class="headerlink" title="문제풀이1"></a>문제풀이1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">n &#x3D; [*map(int, input().split())]</span><br><span class="line"></span><br><span class="line">count_check &#x3D; True</span><br><span class="line">if n[0] &#x3D;&#x3D; 1:</span><br><span class="line">    for i in range(len(n)-1):</span><br><span class="line">        if n[i] &lt; n[i+1]:</span><br><span class="line">            continue</span><br><span class="line">        else:</span><br><span class="line">            count_check &#x3D; False</span><br><span class="line">        if count_check &#x3D;&#x3D; False:</span><br><span class="line">            print(&#39;mixed&#39;)</span><br><span class="line">            break</span><br><span class="line">    if count_check &#x3D;&#x3D; True:</span><br><span class="line">        print(&#39;ascending&#39;)</span><br><span class="line"></span><br><span class="line">elif n[0] &#x3D;&#x3D; 8:</span><br><span class="line">    for i in range(len(n)-1):</span><br><span class="line">        if n[i] &gt; n[i+1]:</span><br><span class="line">            continue</span><br><span class="line">        else:</span><br><span class="line">            count_check &#x3D; False</span><br><span class="line">        if count_check &#x3D;&#x3D; False:</span><br><span class="line">            print(&#39;mixed&#39;)</span><br><span class="line">            break</span><br><span class="line">    if count_check &#x3D;&#x3D; True:</span><br><span class="line">        print(&#39;descending&#39;)</span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line">    print(&#39;mixed&#39;)</span><br></pre></td></tr></table></figure><h3 id="풀이1-설명"><a href="#풀이1-설명" class="headerlink" title="풀이1 설명"></a>풀이1 설명</h3><p>문제에서 나타는 경우의 수는,</p><ul><li>1 2 3 4 5 6 7 8 : ‘ascending’</li><li>8 7 6 5 4 3 2 1 : ‘descending’</li><li>둘 다 아니면 mixed</li></ul><p>위 3개로 볼 수 있다.</p><p>그래서 나는 입력받은 값들을 리스트로 저장하여, 맨 첫번째 자리를 검사였다.</p><ul><li>만약 1이면, ascending인 오름차순</li><li>만약 8이면, descending인 내림차순</li><li>둘 다 아니면 mixed</li></ul><p>그 후, 진짜 오름차순과 내림차순으로 되어 있는지 검사를 하였다.</p><h2 id="문제풀이2"><a href="#문제풀이2" class="headerlink" title="문제풀이2"></a>문제풀이2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">n &#x3D; [*map(int, input().split())]</span><br><span class="line"></span><br><span class="line">ascending &#x3D; True</span><br><span class="line">descending &#x3D; True</span><br><span class="line"></span><br><span class="line">for i in range(len(n)-1):</span><br><span class="line">    if n[i] &lt; n[i+1]:</span><br><span class="line">        descending &#x3D; False</span><br><span class="line">    elif n[i] &gt; n[i+1]:</span><br><span class="line">        ascending &#x3D; False</span><br><span class="line">    else:</span><br><span class="line">        ascending &#x3D; False</span><br><span class="line">        descending &#x3D; False</span><br><span class="line"></span><br><span class="line">if ascending:</span><br><span class="line">    print(&#39;ascending&#39;)</span><br><span class="line">elif descending:</span><br><span class="line">    print(&#39;descending&#39;)</span><br><span class="line">else:</span><br><span class="line">    print(&#39;mixed&#39;)</span><br></pre></td></tr></table></figure><h3 id="풀이2-설명"><a href="#풀이2-설명" class="headerlink" title="풀이2 설명"></a>풀이2 설명</h3><p>여기선 내가 깊이 생각을 못 했던 것이 있었다.</p><p>굳이 첫번째 자리를 비교를 했어야 했는지와 왜 검사 값을 1개만 썼는지이다.</p><p>이 문제풀이에선 오름차순과 내림차순을 검사하는 변수인 ascending과 descending이 있다.</p><p>반복문으로 리스트화 된 입력값을 두 개씩 비교 후 오름차순인지 내림차순인지를 검사를 한다.</p><p>둘 다 False이면, mixed가 나온다.</p><p>문제풀이1에서 더욱 간단하게 짜여졌고, 가독성도 더 좋아 보인다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B8%8C%EB%A1%A0%EC%A6%88/">브론즈</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%882/">백준 브론즈2</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/02/28/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%882-2920%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Insecure DOR (Change Secret)</title>
      <link>https://lrtk-coder.github.io/2021/02/27/Insecure-DOR-Change-Secret/</link>
      <guid>https://lrtk-coder.github.io/2021/02/27/Insecure-DOR-Change-Secret/</guid>
      <pubDate>Sat, 27 Feb 2021 23:38:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;IDOR이란&quot;&gt;&lt;a href=&quot;#IDOR이란&quot; class=&quot;headerlink&quot; title=&quot;IDOR이란?&quot;&gt;&lt;/a&gt;IDOR이란?&lt;/h1&gt;&lt;p&gt;Insecure Direct Object Reference의 약자로, 공격자가 요청 메시지의 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="IDOR이란"><a href="#IDOR이란" class="headerlink" title="IDOR이란?"></a>IDOR이란?</h1><p>Insecure Direct Object Reference의 약자로, 공격자가 요청 메시지의 URL이나 파라미터를 변경하여 정상적으로 허용되지 않은 기능을 실행하거나 다른 사용자의 리소스에 접근할 수 있는 공격</p><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/images/pasted-242.png"></p><p>해당 계정의 시크릿 정보를 변경하는 사이트이다.</p><p><img src="/images/pasted-243.png"></p><p>확인을 위해 Test로 변경하여 SQL Injection (Login Form/User) 문제 페이지에서 조회하겠다.</p><p>URL을 보니, Get 메소드가 아닌 Post 메소드로 작동한다. 자세하게 살펴보기 위해 프록시를 이용해서 확인하였다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/insecure_direct_object_ref_1.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: XXX.XXX.XXX.XXX</span><br><span class="line"><span class="attribute">Content-Length</span>: 36</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Origin</span>: http://XXX.XXX.XXX.XXX</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span>: http://XXX.XXX.XXX.XXX/insecure_direct_object_ref_1.php</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=apcd6m4eamdnh3ounef36vsus5; security_level=0</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">secret=test2&amp;login=bee&amp;action=change</span><br></pre></td></tr></table></figure><p>Body 부분을 보니, 입력한 Secret 값과 계정 정보, submit 값을 보내는 것을 볼 수 있다.</p><p>만약 bee가 아닌 다른 계정을 입력하면 그 계정의 시크릿이 변경이 되는지 확인을 하였다.</p><p><img src="/images/pasted-244.png"></p><p>LRTK의 계정 시크릿 정보는 bababababa이다.</p><p>이를 login 파라미터 수정을 통해 변경하겠다.</p><p><img src="/images/pasted-245.png" alt="`secret=test&amp;login=lrtk&amp;action=change`"></p><p>수정이 되는 모습을 확인할 수 있었다.</p><h2 id="Medium-amp-High"><a href="#Medium-amp-High" class="headerlink" title="Medium &amp; High"></a>Medium &amp; High</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secret=test3&amp;token=942bdebf5252ff371011fd88bdbc300622cba84b&amp;action=change</span><br></pre></td></tr></table></figure><p>Bee 계정에서 LRTK 계정의 scret 값을 변경하려고 했는데 Low와 다르게 Token으로 계정을 분류한다. </p><p>LRTK 계정의 토큰을 모르니 실패하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/02/27/Insecure-DOR-Change-Secret/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 1874번 문제</title>
      <link>https://lrtk-coder.github.io/2021/02/27/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%843-1874%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/02/27/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%843-1874%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Sat, 27 Feb 2021 23:26:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;스택-수열&quot;&gt;&lt;a href=&quot;#스택-수열&quot; class=&quot;headerlink&quot; title=&quot;스택 수열&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1874&quot;&gt;스택 수열&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;스택 (sta</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="스택-수열"><a href="#스택-수열" class="headerlink" title="스택 수열"></a><a href="https://www.acmicpc.net/problem/1874">스택 수열</a></h1><p>스택 (stack)은 기본적인 자료구조 중 하나로, 컴퓨터 프로그램을 작성할 때 자주 이용되는 개념이다. 스택은 자료를 넣는 (push) 입구와 자료를 뽑는 (pop) 입구가 같아 제일 나중에 들어간 자료가 제일 먼저 나오는 (LIFO, Last in First out) 특성을 가지고 있다.</p><p>1부터 n까지의 수를 스택에 넣었다가 뽑아 늘어놓음으로써, 하나의 수열을 만들 수 있다. 이때, 스택에 push하는 순서는 반드시 오름차순을 지키도록 한다고 하자. 임의의 수열이 주어졌을 때 스택을 이용해 그 수열을 만들 수 있는지 없는지, 있다면 어떤 순서로 push와 pop 연산을 수행해야 하는지를 알아낼 수 있다. 이를 계산하는 프로그램을 작성하라.</p><h2 id="문제풀이1"><a href="#문제풀이1" class="headerlink" title="문제풀이1"></a>문제풀이1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">n &#x3D; int(input())</span><br><span class="line"></span><br><span class="line">count &#x3D; 1</span><br><span class="line">stack &#x3D; []</span><br><span class="line">result &#x3D; []</span><br><span class="line"></span><br><span class="line">for i in range(1, n+1):</span><br><span class="line">    data &#x3D; int(input())</span><br><span class="line">    while count &lt;&#x3D; data:</span><br><span class="line">        stack.append(count)</span><br><span class="line">        count +&#x3D; 1</span><br><span class="line">        result.append(&#39;+&#39;)</span><br><span class="line">    if stack[-1] &#x3D;&#x3D; data:</span><br><span class="line">        stack.pop()</span><br><span class="line">        result.append(&#39;-&#39;)</span><br><span class="line">    else:</span><br><span class="line">        print(&#39;NO&#39;)</span><br><span class="line">        exit(0)</span><br><span class="line"></span><br><span class="line">print(&#39;\n&#39;.join(result))</span><br></pre></td></tr></table></figure><h3 id="풀이1-설명"><a href="#풀이1-설명" class="headerlink" title="풀이1 설명"></a>풀이1 설명</h3><ul><li>n : 스택에 저장할 총 갯수</li><li>count : 스택에 Push할 값</li><li>data : 스택에 Pop할 값</li></ul><p>1~n까지 반복을 하는데, 그 속엔 data을 입력 받는다. 하지만 아직 스택엔 아무 값이 없어서 count가 data만큼 같아질 때까지 반복을 하는데 1씩 증가 할 때마다 스택에 넣는다.</p><p>그 후 스택의 맨 위가 data와 같은 값이면, pop을 하고 result에 <code>-</code>를 입력한다.</p><p>같은 값이 아니면 pop과 push만으로 구현이 안되니 NO를 출력하였다.</p><h2 id="문제-풀이2"><a href="#문제-풀이2" class="headerlink" title="문제 풀이2"></a>문제 풀이2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"></span><br><span class="line">n &#x3D; int(input())</span><br><span class="line">data &#x3D; map(lambda x: int(x.rstrip()), sys.stdin.readlines())</span><br><span class="line"></span><br><span class="line">count &#x3D; 1</span><br><span class="line">stack &#x3D; []</span><br><span class="line">result &#x3D; []</span><br><span class="line"></span><br><span class="line">for i in data:</span><br><span class="line">    while count &lt;&#x3D; i:</span><br><span class="line">        stack.append(count)</span><br><span class="line">        count +&#x3D; 1</span><br><span class="line">        result.append(&#39;+&#39;)</span><br><span class="line">    if stack[-1] &#x3D;&#x3D; i:</span><br><span class="line">        stack.pop()</span><br><span class="line">        result.append(&#39;-&#39;)</span><br><span class="line">    else:</span><br><span class="line">        print(&#39;NO&#39;)</span><br><span class="line">        exit(0)</span><br><span class="line">        </span><br><span class="line">print(&#39;\n&#39;.join(result))</span><br></pre></td></tr></table></figure><h3 id="풀이2-설명"><a href="#풀이2-설명" class="headerlink" title="풀이2 설명"></a>풀이2 설명</h3><p>풀이1은 반복문에서 input()로 입력값을 받고 있어서 시간이 많이 소모가 된다.</p><p>그래서 readlines()를 이용하여 값을 입력 받아서 저장된 값들을 반복문에서 하나하나 꺼내서 쓰는 방식으로 변경하였다.</p><p><img src="/images/pasted-246.png"></p><p>그 결과 시간이 대폭 줄었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%843/">백준 실버3</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/02/27/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%843-1874%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 16204번 문제</title>
      <link>https://lrtk-coder.github.io/2021/02/27/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-16204%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/02/27/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-16204%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Sat, 27 Feb 2021 23:21:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;카드-뽑기&quot;&gt;&lt;a href=&quot;#카드-뽑기&quot; class=&quot;headerlink&quot; title=&quot;카드 뽑기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/16204&quot;&gt;카드 뽑기&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;앞 면에 O</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="카드-뽑기"><a href="#카드-뽑기" class="headerlink" title="카드 뽑기"></a><a href="https://www.acmicpc.net/problem/16204">카드 뽑기</a></h1><p>앞 면에 O와 X가 적혀있는 카드 N개가 있다. N개의 카드 중 M개의 카드의 앞면에는 O가 한 개 적혀있고, 나머지 N-M개의 카드의 앞면에는 X가 한 개 적혀있다. 카드의 뒷 면은 두 종류의 카드 모두 같은 모양이라 구분할 수 없다.</p><p>카드의 뒷 면에 O나 X를 하나씩 적으려고 한다. 이 때, O는 K개, X는 N-K개 적으려고 한다.</p><p>앞 면과 뒷 면에 같은 모양이 적혀있는 카드의 최대 개수를 구하는 프로그램을 작성하시오.</p><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n, m, k &#x3D; map(int, input().split())</span><br><span class="line">print(min(m, k) + min(n-m, n-k))</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>문제를 정리하자면, </p><ul><li>카드 총 갯수 : n</li><li>앞면 O의 갯수 : m</li><li>앞면 X의 갯수 : n-m</li><li>뒷면 O의 갯수 : k</li><li>뒷면 X의 갯수 : n-k</li></ul><p>이렇게 정리가 된다.</p><p>즉, m과 k을 비교하여 가장 작은 수를 같은 모양이 적혀있는 O 카드의 최대 개수로 보면 된다.</p><p>X 카드의 경우 n-m과 n-k를 비교하면 된다.</p><p>그 후 더해주면 된다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B8%8C%EB%A1%A0%EC%A6%884/">브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/02/27/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-16204%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈 2798번 문제</title>
      <link>https://lrtk-coder.github.io/2021/02/27/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%882-2798%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/02/27/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%882-2798%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Sat, 27 Feb 2021 22:27:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;블랙잭&quot;&gt;&lt;a href=&quot;#블랙잭&quot; class=&quot;headerlink&quot; title=&quot;블랙잭&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2798&quot;&gt;블랙잭&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;카지노에서 제일 인기 있는 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="블랙잭"><a href="#블랙잭" class="headerlink" title="블랙잭"></a><a href="https://www.acmicpc.net/problem/2798">블랙잭</a></h1><p>카지노에서 제일 인기 있는 게임 블랙잭의 규칙은 상당히 쉽다. 카드의 합이 21을 넘지 않는 한도 내에서, 카드의 합을 최대한 크게 만드는 게임이다. 블랙잭은 카지노마다 다양한 규정이 있다.</p><p>한국 최고의 블랙잭 고수 김정인은 새로운 블랙잭 규칙을 만들어 상근, 창영이와 게임하려고 한다.</p><p>김정인 버전의 블랙잭에서 각 카드에는 양의 정수가 쓰여 있다. 그 다음, 딜러는 N장의 카드를 모두 숫자가 보이도록 바닥에 놓는다. 그런 후에 딜러는 숫자 M을 크게 외친다.</p><p>이제 플레이어는 제한된 시간 안에 N장의 카드 중에서 3장의 카드를 골라야 한다. 블랙잭 변형 게임이기 때문에, 플레이어가 고른 카드의 합은 M을 넘지 않으면서 M과 최대한 가깝게 만들어야 한다.</p><p>N장의 카드에 써져 있는 숫자가 주어졌을 때, M을 넘지 않으면서 M에 최대한 가까운 카드 3장의 합을 구해 출력하시오.</p><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">n, m &#x3D; map(int, input().split())</span><br><span class="line">data &#x3D; [*map(int, input().split())]</span><br><span class="line"></span><br><span class="line">result &#x3D; 0</span><br><span class="line">length &#x3D; len(data)</span><br><span class="line"></span><br><span class="line">for i in range(length):</span><br><span class="line">    for j in range(i+1, length):</span><br><span class="line">        for k in range(j+1, length):</span><br><span class="line">            sum_value &#x3D; data[i] + data[j] + data[k]</span><br><span class="line">            if sum_value &lt;&#x3D; m:</span><br><span class="line">                result &#x3D; max(result, sum_value)</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>두번째로 입력 받은 입력값에서 m보다 작지만 가장 가까운 3개의 합을 구해야한다.</p><p>구하려면 모든 경우의 수를 구해야한다.</p><ul><li>data[0] + data[1] + data[2]</li><li>data[0] + data[1] + data[3]</li><li>data[0] + data[1] + data[4]</li></ul><p>위와 같은 순으로 반복문을 돌려서 모든 경우의 수를 구하고, 합한 값이 m보다 작거나 같으면 result와 크기 비교 후 result에 저장을 하였다.</p><p>이러면, 조건에 만족하는 값들 중에 가장 큰 수를 저장 할 수 있어고 그 값이 저장이 된다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B8%8C%EB%A1%A0%EC%A6%88/">브론즈</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%882/">백준 브론즈2</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/02/27/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%882-2798%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>XSS - Stored (Blog)</title>
      <link>https://lrtk-coder.github.io/2021/02/27/XSS-Stored-Blog/</link>
      <guid>https://lrtk-coder.github.io/2021/02/27/XSS-Stored-Blog/</guid>
      <pubDate>Sat, 27 Feb 2021 03:57:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;문제풀이&quot;&gt;&lt;a href=&quot;#문제풀이&quot; class=&quot;headerlink&quot; title=&quot;문제풀이&quot;&gt;&lt;/a&gt;문제풀이&lt;/h1&gt;&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Lo</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/images/pasted-238.png"></p><p>form에 글에 입력하고 Submit 버튼을 클릭하면, 해당 글이 DB에 저장이 된다.</p><p>그리고 페이지는 DB에서 저장된 글을 가져와서 페이지로 반영을 한다.</p><p>이를 이용하여 XSS 코드를 DB에 저장하여 페이지에 반영하겠다.</p><p><img src="/images/pasted-239.png" alt="`&amp;ltimg src=# onerror=alert(1)&amp;gt`"></p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p><img src="/images/pasted-240.png"></p><p>addslashes 함수로 DB에서 불려온 값의 <code>&#39;</code>, <code>&quot;</code>, <code>\</code>가 이스케이프 되는 것을 볼 수 있다.</p><p>addslashes 함수를 우회하는 방법은 Low에서 사용한 XSS 코드처럼 <code>&#39;</code>, <code>&quot;</code>, <code>\</code>을 사용하지 않고 XSS을 시도하면 된다.</p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p><img src="/images/pasted-241.png"></p><p>htmlspecialchars 함수로 특수문자가 HTML 엔티티로 이스케이프되면서 그대로 출력되는 모습을 볼 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/02/27/XSS-Stored-Blog/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>XSS - Reflected (User-Agent)</title>
      <link>https://lrtk-coder.github.io/2021/02/27/XSS-Reflected-User-Agent/</link>
      <guid>https://lrtk-coder.github.io/2021/02/27/XSS-Reflected-User-Agent/</guid>
      <pubDate>Sat, 27 Feb 2021 03:34:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;User-Agent&quot;&gt;&lt;a href=&quot;#User-Agent&quot; class=&quot;headerlink&quot; title=&quot;User-Agent&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HT</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="User-Agent"><a href="#User-Agent" class="headerlink" title="User-Agent"></a><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent">User-Agent</a></h1><p>사용자 에이전트 요청 헤더는 서버와 네트워크 피어가 요청하는 응용 프로그램, 운영 체제, 공급 업체 및 / 또는 버전을 식별 할 수있는 특성 문자열 사용자 에이전트</p><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>XSS - Reflected (Referer) 문제와 똑같은 문제이다. 차이점이라면, Referer 헤더가 아닌 User-Agent 헤더를 이용하는 것이다.</p><p>바로 User-Agent을 프록시를 이용하여 XSS 코드를 삽입하여 페이지에 반영하겠다.</p><p><img src="/images/pasted-235.png" alt="`&amp;ltimg src=# onerror=alert(1)&amp;gt`"></p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p><img src="/images/pasted-236.png"><br><code>&#39;</code>, <code>&quot;</code>, <code>\</code>의 앞에 <code>\</code>이 추가되어 이스케이프가 된 것을 볼 수 있었다.</p><p>addslashed 함수로 입력값을 이스케이프를 한 것으로 보인다.</p><p>해당 우회방법은 Low 방법대로 <code>&#39;</code>, <code>&quot;</code>, <code>\</code>를 사용 안하는 방법이 있다.</p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p><img src="/images/pasted-237.png"></p><p>htmlspecialchars 함수에 의해 특수 문자가 HTML 엔티티로 이스케이프되어 그대로 출력되는 것을 볼 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/02/27/XSS-Reflected-User-Agent/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
