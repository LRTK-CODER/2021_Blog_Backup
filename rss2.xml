<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LRTK Blog</title>
    <link>https://lrtk-coder.github.io/</link>
    
    <atom:link href="https://lrtk-coder.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Coding, Security, IT News 등 정리한 블로그</description>
    <pubDate>Wed, 12 May 2021 23:43:20 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Webhacking.kr Old - 33 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-33-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-33-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 14:39:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-33"><a href="#Old-33" class="headerlink" title="Old - 33"></a>Old - 33</h2><p>이번 문제는 엄청 길어질 거 같아서 하나씩 나눠서 정리하였다.</p><h3 id="33-1-풀이"><a href="#33-1-풀이" class="headerlink" title="33-1 풀이"></a>33-1 풀이</h3><p><img src="/images/pasted-364.png"><br>view-source에서 코드를 살펴보니, 다음 문제로 넘어갈 힌트를 얻을 수 있었다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;get&#x27;</span>]==<span class="string">&quot;hehe&quot;</span>) <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=???&gt;Next&lt;/a&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span>(<span class="string">&quot;Wrong&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>Get 메소드로 <code>get=hehe</code>를 서버로 보내면, 다음 문제로 넘어갈 수 있는 a태그가 출력되는 것을 알 수 있었다.</p><p><img src="/images/pasted-365.png"><br>a태그가 출력되었고, 나는 다음 문제로 넘어갔다.</p><h3 id="33-2-풀이"><a href="#33-2-풀이" class="headerlink" title="33-2 풀이"></a>33-2 풀이</h3><p><img src="/images/pasted-366.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">&#x27;post&#x27;</span>]==<span class="string">&quot;hehe&quot;</span> &amp;&amp; $_POST[<span class="string">&#x27;post2&#x27;</span>]==<span class="string">&quot;hehe2&quot;</span>) <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=???&gt;Next&lt;/a&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;Wrong&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번 문제는 Post 메소드로 <code>post=hehe</code>와 <code>post2=hehe2</code>를 넘겨줘야 다음 문제로 넘어 갈 수 있었다.</p><p><img src="/images/pasted-367.png"><br>Post 메소드로 위의 값을 서버로 보내서 다음 문제로 넘어갈 수 있었다.</p><h3 id="33-3-풀이"><a href="#33-3-풀이" class="headerlink" title="33-3 풀이"></a>33-3 풀이</h3><p>문제 페이지에서 출력되는 텍스트는 같으니, 코드만 정리노트에 적겠다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;myip&#x27;</span>] == $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=???&gt;Next&lt;/a&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;Wrong&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>파라미터 이름이 myip라서, 나의 IP를 넣으면 되는지 아니면 서버의 IP 주소를 넣으면 되는지를 몰라서 <code>$_SERVER[&#39;REMOTE_ADDR&#39;])</code>에 대해서 알아보았다.</p><p>그 결과 웹서버에 접속한 접속한 IP의 주소를 갖고 있는 배열이였다.</p><p><img src="/images/pasted-368.png"><br>서버에 내 IP를 보내기 위해 나의 외부 IP 주소를 알아내기 위해 네이버에 검색하여 알아낸 후, Get 메소드로 서버에 전달하였다.</p><p><img src="/images/pasted-369.png"><br>다음 문제로 넘어갈 수 있었다.</p><h3 id="33-4-풀이"><a href="#33-4-풀이" class="headerlink" title="33-4 풀이"></a>33-4 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[‘password’] == md5(time())) <span class="keyword">echo</span> “&lt;a href=??<span class="meta">?&gt;</span>Next&lt;/a&gt;”;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> “hint : “.time();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번에는 현재 시간을 MD5으로 해쉬화한 값을 Get 메소드로 서버에 전달해야한다.</p><p>나는 현재 페이지에 출력된 값을 100 증가하여, MD5 해쉬화 후 나온 값을 서버에 계속 전달할 것이다.</p><p>그럼 어느 순간 내가 보낸 시간이 도달하면 문제가 풀리는 것이다.</p><p><img src="/images/pasted-370.png"><br>다음 문제로 넘어가겠다.</p><h3 id="33-5-풀이"><a href="#33-5-풀이" class="headerlink" title="33-5 풀이"></a>33-5 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[‘imget’] &amp;&amp; $_POST[‘impost’] &amp;&amp; $_COOKIE[‘imcookie’]) <span class="keyword">echo</span> “&lt;a href=??<span class="meta">?&gt;</span>Next&lt;/a&gt;”;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> “Wrong”;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번에는 Get, Post, Cookie 값이 동일해야 다음 문제로 넘어갈 수 있었다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/challenge/bonus-6/md555.php?imget=1</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: webhacking.kr</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=r0sakaqij4i0q7dk82fis0kchg; imcookie=1</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Sec-Ch-Ua</span>: &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;</span><br><span class="line"><span class="attribute">Sec-Ch-Ua-Mobile</span>: ?0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span>: none</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span>: navigate</span><br><span class="line"><span class="attribute">Sec-Fetch-User</span>: ?1</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span>: document</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">impost=1</span><br></pre></td></tr></table></figure><p>위와 같이 메소드를 POST로 지정하여, URL에 imget 파라미터를 지정, Body에 impost를 지정, Cookie에 imcookie를 지정하여 서버로 전달하였다.</p><p><img src="/images/pasted-371.png"><br>다음 문제로 넘어갈 수 있었다.</p><h3 id="33-6-풀이"><a href="#33-6-풀이" class="headerlink" title="33-6 풀이"></a>33-6 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_COOKIE[‘test’] == md5($_SERVER[‘REMOTE_ADDR’]) &amp;&amp; $_POST[‘kk’] == md5($_SERVER[‘HTTP_USER_AGENT’])) <span class="keyword">echo</span> “&lt;a href=??<span class="meta">?&gt;</span>Next&lt;/a&gt;”;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> “hint : &#123;$_SERVER[‘HTTP_USER_AGENT’]&#125;”;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번 문제는 내 외부 IP를 MD5 해쉬화한 값, USER_AGENT 값을 MD5 해쉬화한 값을 구하여 각각 Cookie와 kk 파라미터에 지정해야한다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/challenge/bonus-6/gpcc.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: webhacking.kr</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=r0sakaqij4i0q7dk82fis0kchg; test=MD5(외부 IP)</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Sec-Ch-Ua</span>: &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;</span><br><span class="line"><span class="attribute">Sec-Ch-Ua-Mobile</span>: ?0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span>: none</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span>: navigate</span><br><span class="line"><span class="attribute">Sec-Fetch-User</span>: ?1</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span>: document</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">kk=3651f072395347537c74089989c88a66</span><br></pre></td></tr></table></figure><p>위와 같이 Cookie와 kk 파라미터를 보내고 다음 문제로 넘어갈 수 있었다.</p><h3 id="33-7-풀이"><a href="#33-7-풀이" class="headerlink" title="33-7 풀이"></a>33-7 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$_SERVER[‘REMOTE_ADDR’] = str_replace(“.”,””,$_SERVER[‘REMOTE_ADDR’]);</span><br><span class="line"><span class="keyword">if</span>($_GET[$_SERVER[‘REMOTE_ADDR’]] == $_SERVER[‘REMOTE_ADDR’]) <span class="keyword">echo</span> “&lt;a href=??<span class="meta">?&gt;</span>Next&lt;/a&gt;”;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> “Wrong&lt;br&gt;”.$_GET[$_SERVER[‘REMOTE_ADDR’]];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번 문제는 나의 외부 IP 주소에서 <code>.</code>를 제거한 값을 Get 메소드로 전달하면 된다.</p><p><img src="/images/pasted-372.png"><br>다음 문제로 넘어갈 수 있었다.</p><h3 id="33-8-풀이"><a href="#33-8-풀이" class="headerlink" title="33-8 풀이"></a>33-8 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">&#x27;addr&#x27;</span>]) $addr = $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>($addr == <span class="string">&quot;127.0.0.1&quot;</span>) <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=???&gt;Next&lt;/a&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;Wrong&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번엔 Get 메소드의 addr 파라미터 값이 127.0.0.1이 되야지만, 다음 문제로 넘어갈 수 있다.</p><p><img src="/images/pasted-373.png"><br><code>addr=127.0.0.1</code>를 넘겨주고, 다음 문제로 넘어갈 수 있었다.</p><h3 id="33-9-풀이"><a href="#33-9-풀이" class="headerlink" title="33-9 풀이"></a>33-9 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">97</span>;$i&lt;=<span class="number">122</span>;$i=$i+<span class="number">2</span>)&#123;</span><br><span class="line">  $answer.=chr($i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;ans&#x27;</span>] == $answer) <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=???.php&gt;Next&lt;/a&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;Wrong&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>이번엔 아스키코드 97부터 122번까지 2씩 증가하여 나온 값을 answer에 넣어줘야한다.</p><p>간단하게 코딩으로 하지않고, 직접 구해보았다.</p><p>acegikmoqsuwy이라는 값을 구하였고, 값을 Get 메소드로 전달하였다.</p><p><img src="/images/pasted-374.png"><br>다음 문제로 넘어갈 수 있었다.</p><h3 id="33-10-풀이"><a href="#33-10-풀이" class="headerlink" title="33-10 풀이"></a>33-10 풀이</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$ip = $_SERVER[‘REMOTE_ADDR’];</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;=strlen($ip);$i++) $ip=str_replace($i,ord($i),$ip);</span><br><span class="line">$ip=str_replace(<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$ip);</span><br><span class="line">$ip=substr($ip,<span class="number">0</span>,<span class="number">10</span>);</span><br><span class="line">$answer = $ip*<span class="number">2</span>;</span><br><span class="line">$answer = $ip/<span class="number">2</span>;</span><br><span class="line">$answer = str_replace(<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$answer);</span><br><span class="line">$f=fopen(“answerip/&#123;$answer&#125;_&#123;$ip&#125;.php”,”w”);</span><br><span class="line">fwrite($f,”<span class="meta">&lt;?php</span> <span class="keyword">include</span> \”../../../config.php\”; solve(<span class="number">33</span>); unlink(<span class="keyword">__FILE__</span>); <span class="meta">?&gt;</span>”);</span><br><span class="line">fclose($f);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>answer이 구해지는 코드를 파이썬으로 구현하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ip = <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line">start = <span class="number">0</span></span><br><span class="line">end = <span class="built_in">len</span>(ip)</span><br><span class="line"><span class="keyword">while</span> start &lt;= end:</span><br><span class="line">    ip = ip.replace(<span class="built_in">str</span>(start), <span class="built_in">str</span>(<span class="built_in">ord</span>(<span class="built_in">str</span>(start)[<span class="number">0</span>])))</span><br><span class="line">    start += <span class="number">1</span></span><br><span class="line">    end = <span class="built_in">len</span>(ip)</span><br><span class="line"></span><br><span class="line">ip = ip.replace(‘.’, ‘’)[:<span class="number">10</span>]</span><br><span class="line">answer = <span class="built_in">str</span>(<span class="built_in">int</span>(ip) / <span class="number">2</span>).replace(‘.’, ‘’)</span><br><span class="line">print(<span class="string">f&#x27;answerip/<span class="subst">&#123;answer&#125;</span>_<span class="subst">&#123;ip&#125;</span>.php&#x27;</span>)</span><br></pre></td></tr></table></figure><p>이때 파이썬과 PHP 간의 차이점을 알 수 있었다.</p><p>PHP의 For문 같은 경우,<br>ip의 길이를 최대 반복 수로 지정하였는데 ip의 길이가 증가할 때마다 최대 반복 수가 그것을 반영하여 반복 수가 증가하였다.</p><p>Pytho의 경우,<br>한번 지정된 최대 반복 수는 고정이다.</p><p>이것을 몰라서 계속 잘못된 곳을 찾고 있었는데, PHP로 반복문의 반복 수를 찍어보니 알 수 있었다.<br>그래서 파이썬으로 구현된 코드는 for문으로 구현하지 않고 while문으로 구현하였다.</p><p>출력된 값을 <code>answerip/&#123;$answer&#125;_&#123;$ip&#125;.php</code>에 대입하여 서버로 전달하였다.<br>이때 IP의 값은 <code>ip = ip.replace(‘.’, ‘’)[:10]</code>의 값이다.</p><p><img src="/images/pasted-375.png"><br>이렇게 개고생을 하여 flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-33-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 23 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-23-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-23-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 14:36:11 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-23"><a href="#Old-23" class="headerlink" title="Old - 23"></a>Old - 23</h2><p><img src="/images/pasted-360.png"><br>이번 문제는 xss 문제인 것 같다.</p><p>일단, 밑에 나온 alert 창을 띄우는 스크립트를 삽입하면 어떻게 반응하는지 확인하였다.</p><p><img src="/images/pasted-361.png"><br><code>&lt;script&gt;alert(1);&lt;/script&gt;</code><br>스크립트가 서버의 xss 필터에 걸리면, no hack을 출력하는 것을 볼 수 있다.</p><p>혹시 자바스크립트로 xss 필터 기능을 정의했는지 또는 주석으로 힌트가 있는지 확인해보았다.<br><br>확인한 결과 PHP에서 xss필터 기능을 정의되었고, 코드 상에는 힌트가 없었다.</p><p>그렇다면, xss 필터가 어떤 것을 필터링하는지 확인을 해야한다.</p><p>필터링 목록</p><ul><li>script</li><li>alert</li><li>Xss에 사용되는 HTML 태그 (img, svg, onclock, onerror 등등)</li></ul><p>손으로 직접쳐서 확인한 결과 대문자 상관없이 script와 alert가 필터링 되어있었다.<br><br>또한 단어에서 사용된 알파벳 2이상 조합하는 것도 필터링 되었다.<br>e.g.) sc, ri, cs, al, lt</p><p>하지만, 특수문자는 필터링이 되어있지 않았다.</p><p>필터링을 우회하기 위해 나는 이중 인코딩, Null 바이트를 사용하여 우회를 시도하였다.</p><p>일단, 문제에서 주어진 것은 <code>&lt;script&gt;alert(1);&lt;/script&gt;</code>이라서 이것을 가지고 시도하였다.</p><h3 id="이중-인코딩"><a href="#이중-인코딩" class="headerlink" title="이중 인코딩"></a>이중 인코딩</h3><p><img src="/images/pasted-362.png" alt="upload successful"><br> <code>&amp;lt;script&amp;gt;alert(1);&amp;lt;/script&amp;gt;</code>를 이중 url 인코딩 한 값을 서버로 보내니, 한번의 디코딩 후 출력되어 필터링을 우회할 수 없었다.</p><h3 id="Null-바이트"><a href="#Null-바이트" class="headerlink" title="Null 바이트"></a>Null 바이트</h3><p>필터에 걸리는 script와 alert의 알파벳 사이에 null 바이트를 넣어서 서버로 보냈다.</p><p><img src="/images/pasted-363.png" alt="`&lt;%00s%00c%00r%00i%00p%00t&gt;%00a%00l%00e%00r%00t(1);&lt;/%00s%00c%00r%00i%00p%00t&gt;`"></p><p>그 결과 xss이 성공하여 flag를 획득할 수 있다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-23-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 20 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-20-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-20-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 14:34:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-20"><a href="#Old-20" class="headerlink" title="Old - 20"></a>Old - 20</h2><p><img src="/images/pasted-357.png"><br>페이지를 확인하니, 입력 폼과 맨 위 가운데에 나타난 time limit가 눈에 띄었다.</p><p>대충 감으로 생각했을 때 2초 안으로 입력하라는 미션같다.</p><p><img src="/images/pasted-358.png"><br>시간 제한을 신경 안쓰고, 서버에 값을 보내니 Too Slow 문구가 출력되고 몇 초 지나서 원래의 페이지로 돌아갔다.</p><p>나는 자바스크립트를 이용하여 입력값을 넣고, 서버에 전송하여 2초를 넘기지 않고 서버로 값을 보내기 위해서는 코드를 작성하여 보내는 방법 밖에 없을거라 생각하여 코드를 작성하기 위해 개발자 도구로 페이지 코드를 확인하였다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ck</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="function"><span class="title">if</span>(<span class="params">lv5frm.id.value==<span class="string">&quot;&quot;</span></span>)</span> &#123; lv5frm.id.focus(); <span class="keyword">return</span>; &#125;</span><br><span class="line">  <span class="function"><span class="title">if</span>(<span class="params">lv5frm.cmt.value==<span class="string">&quot;&quot;</span></span>)</span> &#123; lv5frm.cmt.focus(); <span class="keyword">return</span>; &#125;</span><br><span class="line">  <span class="function"><span class="title">if</span>(<span class="params">lv5frm.captcha.value==<span class="string">&quot;&quot;</span></span>)</span> &#123; lv5frm.captcha.focus(); <span class="keyword">return</span>; &#125;</span><br><span class="line">  <span class="function"><span class="title">if</span>(<span class="params">lv5frm.captcha.value!=lv5frm.captcha_.value</span>)</span> &#123; lv5frm.captcha.focus(); <span class="keyword">return</span>; &#125;</span><br><span class="line">  lv5frm.submit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>문제의 출제가 아주 보기 좋게 각 Input의 ID로 Input의 값을 검사하는 코드가 있어서 이것을 보고 간단하게 코드를 작성하였다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lv5frm.id.value = <span class="string">&quot;test&quot;</span></span><br><span class="line">lv5frm.cmt.value = <span class="string">&quot;test&quot;</span></span><br><span class="line">lv5frm.captcha.value = lv5frm.captcha_.value</span><br><span class="line">lv5frm.submit()</span><br></pre></td></tr></table></figure><p>개발자 도구의 콘솔을 열린 채로 페이지를 재로딩하여 페이지가 뜨자마자 저 코드들을 붙여넣기하여 실행하였다.</p><p><img src="/images/pasted-359.png"><br>그 결과 Flag를 획득 할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-20-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 1 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-1-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-1-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 14:32:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-1"><a href="#Old-1" class="headerlink" title="Old - 1"></a>Old - 1</h2><p><img src="/images/pasted-354.png"><br>들어가면, Level 1이라는 글과 소스코드를 볼 수 있는 링크가 페이지에 출력되어 있다.</p><p>페이지에 아무 반응이 없어서 코드를 살펴보았다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> <span class="string">&quot;../../config.php&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>($_GET[<span class="string">&#x27;view-source&#x27;</span>] == <span class="number">1</span>)&#123; view_source(); &#125;</span><br><span class="line">  <span class="keyword">if</span>(!$_COOKIE[<span class="string">&#x27;user_lv&#x27;</span>])&#123;</span><br><span class="line">    SetCookie(<span class="string">&quot;user_lv&quot;</span>,<span class="string">&quot;1&quot;</span>,time()+<span class="number">86400</span>*<span class="number">30</span>,<span class="string">&quot;/challenge/web-01/&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;&lt;meta http-equiv=refresh content=0&gt;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>맨 처음에 정의된 코드인데, user_lv이라는 쿠키를 1로 지정한다는 코드였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>(!is_numeric($_COOKIE[<span class="string">&#x27;user_lv&#x27;</span>])) $_COOKIE[<span class="string">&#x27;user_lv&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>($_COOKIE[<span class="string">&#x27;user_lv&#x27;</span>]&gt;=<span class="number">4</span>) $_COOKIE[<span class="string">&#x27;user_lv&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>($_COOKIE[<span class="string">&#x27;user_lv&#x27;</span>]&gt;<span class="number">3</span>) solve(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;level : <span class="subst">&#123;$_COOKIE[&#x27;user_lv&#x27;]&#125;</span>&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>쿠키를 지정한 후 쿠키의 값을 검사하는데, 조건이  <code>3 &lt; user_lv =&lt; 4</code>이라는 조건에 해당하면 flag를 획득할 수 있다는 것이였다.</p><p><img src="/images/pasted-355.png"><br>이를 토대로 난 쿠키의 값을 3.1로 지정하여 페이지를 다시 불려왔다.</p><p><img src="/images/pasted-356.png"><br>flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-1-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 58 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-58-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-58-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 14:29:53 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-58"><a href="#Old-58" class="headerlink" title="Old - 58"></a>Old - 58</h2><p><img src="/images/pasted-349.png"><br>이번엔 채팅앱 같은 페이지가 나왔다.</p><p><img src="/images/pasted-350.png"><br>aaaa를 입력하니, command not found라는 문구가 출력이 되었다.<br><br>command라는 단어를 보는 순간 난 ls 명령어를 입력하여 서버로 보냈다.</p><p><img src="/images/pasted-351.png"><br>파일 이름이 출력되었다. 다른 명령어들을 입력해보았지만, 모두 command not found라는 문구가 출력이 되었다.<br><br>그러다가 flag을 입력해보니, 다른 문구가 출력이 되었다.</p><p><img src="/images/pasted-352.png"><br>admin만 사용이 가능하다는 문구였다.<br><br>더이상 찾을 것이 없을 거 같아서 개발자 도구를 통해 코드를 살펴보았다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> username = <span class="string">&quot;guest&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> socket = io();</span><br><span class="line">  $(<span class="string">&#x27;form&#x27;</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    socket.emit(<span class="string">&#x27;cmd&#x27;</span>,username+<span class="string">&quot;:&quot;</span>+$(<span class="string">&#x27;#m&#x27;</span>).val());</span><br><span class="line">    $(<span class="string">&#x27;#m&#x27;</span>).val(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  socket.on(<span class="string">&#x27;cmd&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;#messages&#x27;</span>).append($(<span class="string">&#x27;&lt;li&gt;&#x27;</span>).text(msg));</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;); </span><br></pre></td></tr></table></figure><p>소켓 통신을 하는 스크립트가 있었다.</p><p>emit 함수는 서버로 데이터를 보내는 함수이고, on 함수는 서버에서 데이터를 받는 함수였다.<br><br>서버로 보내는 값을 보니, <code>guest:input에 입력한 값</code>을 보내고 있었다.</p><p>나는 이를 <code>admin:flag</code>로 변경하여 서버에 보내서 flag를 획득할 계획을 생각하였다.<br><br>개발자 도구의 콘솔로 admin으로 flag를 요청하였다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> socket = io();</span><br><span class="line">socket.emit(<span class="string">&#x27;cmd&#x27;</span>, <span class="string">&quot;admin:flag&quot;</span>);</span><br><span class="line">socket.on(</span><br><span class="line"><span class="string">&#x27;cmd&#x27;</span>, </span><br><span class="line">(msg) =&gt; $(<span class="string">&#x27;#messages&#x27;</span>).append( $(<span class="string">&#x27;&lt;li&gt;&#x27;</span>).text(msg) )</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-353.png"><br>그 결과 flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-58-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 47 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-47-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-47-Write-Up/</guid>
      <pubDate>Wed, 12 May 2021 14:28:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-47"><a href="#Old-47" class="headerlink" title="Old - 47"></a>Old - 47</h2><p><img src="/images/pasted-345.png"><br>Mail subject라고 라벨이 있는 것으로 보아서, 메일을 보낸다는 것을 추측했다.</p><p><img src="/images/pasted-346.png"><br>Input에 기본값으로 지정된 값을 그대로 서버로 보내니,  메일을 보냈다는 문구가 출력되었다.</p><p>문제를 보고 난 BeeBox의 SMTP 문제를 생각할 수 있었다.<br><br>Input에 Cc을 넣어서 메일을 공격자가 원하는 메일로 참조하는 공격이였다.</p><p>위 방법대로 공격해보도록 하겠다.</p><p><img src="/images/pasted-347.png"><br>Post 메소드로 값을 넘겨주기 때문에 body 안에 Cc를  삽입하여 보냈다.</p><p><img src="/images/pasted-348.png"><br>그 결과 Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/12/Webhacking-kr-Old-47-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 11653번 문제</title>
      <link>https://lrtk-coder.github.io/2021/05/11/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-11653%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/05/11/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-11653%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Tue, 11 May 2021 10:44:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;소인수분해&quot;&gt;&lt;a href=&quot;#소인수분해&quot; class=&quot;headerlink&quot; title=&quot;소인수분해&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11653&quot;&gt;소인수분해&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;정수 N이 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="소인수분해"><a href="#소인수분해" class="headerlink" title="소인수분해"></a><a href="https://www.acmicpc.net/problem/11653">소인수분해</a></h1><p>정수 N이 주어졌을 때, 소인수분해하는 프로그램을 작성하시오.</p><h2 id="문제-풀이-1"><a href="#문제-풀이-1" class="headerlink" title="문제 풀이 - 1"></a>문제 풀이 - 1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> n != <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">            print(i)</span><br><span class="line">            n = n//i</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>풀긴 했으나, 성능이 너무 안 좋아서, 좀 더 효율적으로 변경을 해야한다.</p><p>현재 이 코드의 시간 복잡도는 O(n^2)이다.<br><br>이 때문에 체점 시간이 1060ms이라는 엄청난 결과를 얻을 수 있었다.</p><h2 id="문제-풀이-2"><a href="#문제-풀이-2" class="headerlink" title="문제 풀이 - 2"></a>문제 풀이 - 2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line">i = <span class="number">2</span></span><br><span class="line"><span class="keyword">while</span> n != <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">        n = n//i</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="풀이-설명-1"><a href="#풀이-설명-1" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>O(n)으로 변경하여 체점하였지만, 오히려 시간이 증가하였다…<br><br>수학에 기초가 부족한 나에겐 하루종일 걸릴거 같아서 다른 사람의 풀이를 참고하였다.</p><h2 id="문제-풀이-3"><a href="#문제-풀이-3" class="headerlink" title="문제 풀이 - 3"></a>문제 풀이 - 3</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">r = <span class="built_in">int</span>(n ** <span class="number">0.5</span>)</span><br><span class="line">i = <span class="number">2</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= r:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> n % i:</span><br><span class="line">        n //= i</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> n &gt; <span class="number">1</span>:</span><br><span class="line">    print(n)</span><br></pre></td></tr></table></figure><h3 id="풀이-설명-2"><a href="#풀이-설명-2" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>다른 분들은 루트의 근사값을 이용하여 반복 횟수를 줄임으로써 시간을 절약하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%844/">백준 실버4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/11/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-11653%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 32 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/11/Webhacking-kr-Old-32-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/11/Webhacking-kr-Old-32-Write-Up/</guid>
      <pubDate>Tue, 11 May 2021 02:54:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-32"><a href="#Old-32" class="headerlink" title="Old - 32"></a>Old - 32</h2><p><img src="/images/pasted-338.png"><br>랭킹 게시판이 문제로 나왔다. 이게 무슨 기능을 하는지 몰라서 일단 개발자 도구로 코드를 살펴보았다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">onmouseover</span>=<span class="string">&quot;this.style.background=&#x27;gray&#x27;&quot;</span> <span class="attr">onmouseout</span>=<span class="string">&quot;this.style.background=&#x27;black&#x27;&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;location.href=&#x27;?hit=hyes4167&#x27;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: black;&quot;</span>&gt;</span>....<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><p>랭크에 나온 사용자를 클릭하면, <code>?hit=hyes4167</code>와 같이 사용자 이름을 파라미터 값으로 서버에 넘겨주고 있다.<br><br>어떤 기능인지 확인하기 위해 클릭을 했더니, 페이지가 다시 랭킹 게시판으로 넘어오고, hyes4167의 Hit 값이 증가가 되었다.</p><p>이것을 통해 난 Hit 점수를 100까지 올려야한다는 것을 느낌적으로 알아챌 수 있었다.</p><p>그래서 Hit 값을 올리기 위해 한번 클릭하니,<br><img src="/images/pasted-339.png"><br>투표를 이미 했다는 Alert창이 띄어졌다.</p><p>그래서 투표를 했는지 안했는지를 구분하기 위해 쿠키에 값을 넣었을 것 같아서 쿠키를 확인하였다.</p><p><img src="/images/pasted-340.png"><br>예상대로, 쿠키에 투표 값이 있었다.</p><p>나는 쿠키를 삭제하여, 페이지에 다시 들어가서 초기에 쿠키값이 어땠는지를 확인하였다.<br><br>확인한 결과 초기에는 쿠키가 없었다. 즉, 투표 후 쿠키가 생긴다는 것을 알 수 있었다.</p><p>난 이점을 이용하여, Hit 값을 100까지 올리는 작업을 하였다.</p><p><img src="/images/pasted-341.png"><br>파이썬으로 만들기 귀찮아서 Burp Suite의 Repeater을 이용하여 서버에 계속 hyes4167에게 투표한다는 트래픽을 반복적으로 보냈다.</p><p><img src="/images/pasted-342.png"><br>그 결과 어떠한 반응이 없었다.</p><p>뭔가가 더 있나 생각을 해보니, “왜 나는 나를 투표를 안하고 다른 사람을 투표를 했을까”라는 생각을 하게 되었다.</p><p>그래서 보내는 파라미터 값을 lrtk으로 변경하여 보내봤다.</p><p><img src="/images/pasted-343.png"><br>그랬더니, 맨 밑에 내 이름이 생성이 되었다.</p><p>이 방법이 맞는거 같아서 hit 값을 100까지 올렸다.</p><p><img src="/images/pasted-344.png"><br>그 결과 Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/11/Webhacking-kr-Old-32-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 27 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/10/Webhacking-kr-Old-27-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/10/Webhacking-kr-Old-27-Write-Up/</guid>
      <pubDate>Mon, 10 May 2021 17:49:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-27"><a href="#Old-27" class="headerlink" title="Old - 27"></a>Old - 27</h2><p><img src="/images/pasted-329.png"><br>SQL Injection 문제인 듯하다.<br><br>소스코드를 주는 거 보니, 입력값에 대한 처리가 있는 기능이 있을 거라 추측된다.</p><p>코드를 확인해보니, 18번 문제와 비슷한 코드가 있었다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[‘no’])&#123;</span><br><span class="line">  $db = dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(“/<span class="comment">#|select|\(| |limit|=|0x/I”, $_GET[‘no’])) exit(“no hack”);</span></span><br><span class="line">  $r=mysqli_fetch_array(mysqli_query($db,”select id <span class="keyword">from</span> chall27 where id=‘guest’ <span class="keyword">and</span> no=(&#123;$_GET[‘no’]&#125;)”)) <span class="keyword">or</span> <span class="keyword">die</span>(“query <span class="built_in">error</span>”);</span><br><span class="line">  <span class="keyword">if</span>($r[‘id’]==“guest”) <span class="keyword">echo</span>(“guest”);</span><br><span class="line">  <span class="keyword">if</span>($r[‘id’]==“admin”) solve(<span class="number">27</span>); <span class="comment">// admin’s no = 2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>입력값을 preg_match로 필터를 걸었다. 해당 필터에 걸리면 no hack이라는 문구가 출력이 된다.<br><br>거르려는 문자열은 <code>#, select, \), 스페이스, limit, =, 0x</code>가 있다.</p><p>위 문자열이 없으면, 쿼리문에 들어가기 되는데, 쿼리문은 <code>or die</code>라는 예외처리로 쿼리에 에러가 일어나면 query error가 출력된다.</p><p>나는 위 코드들을 좀 더 분석하기 좋게 따로 빼내서 작성하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$stdin = fopen(<span class="string">&#x27;php://stdin&#x27;</span>, <span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">$input = trim(fread($stdin, <span class="number">1024</span>));</span><br><span class="line">fclose($stdin);</span><br><span class="line"></span><br><span class="line">$match = preg_match(<span class="string">&quot;/#|select|\(| |limit|=|0x/i&quot;</span>, $input);</span><br><span class="line"><span class="keyword">if</span> ($match == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Nop!!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;select id from chall27 where id=&#x27;guest&#x27; and no=(<span class="subst">&#123;$input&#125;</span>) &quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>preg_match에 걸리면, Nop!!을 출력하게 해주었고, 쿼리문을 분석하기 좋게 출력하였다.</p><p>내가 1을 입력하면, </p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">select id from chall27 <span class="built_in">where</span> id=<span class="string">&#x27;guest&#x27;</span> and no=(1)</span><br></pre></td></tr></table></figure><p>로 출력된다.</p><p><img src="/images/pasted-330.png"><br>실제 페이지에선 1을 넣고 서버에 보내보니, guest로 로그인을 하였다.</p><p>실제 코드의 주석엔 admin의 no 값은 2라고 표시 되어있다.</p><p>18번 문제처럼, where절에 <code>id=&#39;guest&#39;</code>로 되어있어서 2을 넣으면 False가 되기 때문에 쿼리문은 작동이 안된다.<br><br>그렇기 때문에 <code>no=3 or no=2</code>로 False or True로 True의 값을 만들어서 admin를 출력해야하지만, no의 값은 ()로 묶어져 있기 때문에 우회 방법을 찾아야 한다.</p><p>나는 <code>3) or no=2--</code>를 생각을 했지만, preg_match에 스페이스와 =이 걸리기 때문에 Nop!!이 출력이 되었다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3) or no=2--</span><br><span class="line">Nop!!select id from chall27 <span class="built_in">where</span> id=<span class="string">&#x27;guest&#x27;</span> and no=(3) or no=2--)</span><br></pre></td></tr></table></figure><p>그래서 문제 18번처럼 스페이스를 %09로 우회하였고, =는 SQL 쿼리인 like로 우회하였다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3)%09or%09no%09like%092--</span><br><span class="line">select id from chall27 <span class="built_in">where</span> id=<span class="string">&#x27;guest&#x27;</span> and no=(3)%09or%09no%09like%092--)</span><br></pre></td></tr></table></figure><p>그 결과 preg_match에 걸리지 않고 그대로 출력되는 것을 볼 수 있었다.</p><p><img src="/images/pasted-331.png"><br>하지만, 페이지에서 query error가 발생하였고, 쿼리문에는 문제가 없다고 생각이 들어서 직접 Mysql에 쿼리를 시험해보았다.</p><p><img src="/images/pasted-332.png"><br>Mysql는 18번 문제에서 만들었던 것을 재사용하였다.</p><p><img src="/images/pasted-333.png"><br><img src="/images/pasted-334.png"><br>위 SQL를 실행해보니, <code>--)</code>에서 에러가 발생된 것을 발견할 수 있었다.</p><p>그래서 스페이스로 )를 분리하여 <code>-- )</code>로 만들어서 쿼리를 실행하니, 에러가 발생되지 않고, admin이 출력되었다.</p><p><img src="/images/pasted-335.png"><br><img src="/images/pasted-336.png"></p><p>위 SQL 쿼리를 사이트에 넣어보겠다.</p><p><img src="/images/pasted-337.png"><br>Flag를 획득하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/10/Webhacking-kr-Old-27-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 19 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/10/Webhacking-kr-Old-19-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/10/Webhacking-kr-Old-19-Write-Up/</guid>
      <pubDate>Mon, 10 May 2021 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-19"><a href="#Old-19" class="headerlink" title="Old - 19"></a>Old - 19</h2><p><img src="/images/pasted-319.png"><br>문제 페이지에 들어가니, 이상한 input이 있었다.</p><p>코드에 스크립트나 주석에 힌트가 있는지, 쿠키가 있는지 확인을 해보았다.<br><br>하지만 별다른 것은 없었고, 일단 제출 버튼을 클릭하여 서버에 값을 보내봤다.</p><p><img src="/images/pasted-320.png"><br>어드민이 아니라는 글이 출력되고, 몇 초뒤에 처음봤던 페이지로 이동하였다.</p><p>값이 admin이 아닌 값을 보내면 어떻게 작동하는지 확인해보았다.</p><p><img src="/images/pasted-321.png"><br>서버에 a를 보냈더니, a로 로그인이 되었다.<br><br>그 이후에는 아무 반응이 없어서 코드와 쿠키를 확인해보았는데, userid라는 쿠키가 생성이 되었다.</p><p><img src="/images/pasted-322.png"><br>값을 보니, 맨 뒤에 ::= (%3D)::가 있는 것으로 보아 base64로 인코딩되어있다고 판단하였다.</p><p><img src="/images/pasted-323.png"><br>Base64 디코딩된 값인데, 뭔가 더 인코딩이 되어있는 것으로 보인다.</p><p>해당 값의 길이가 32글자로, MD5로 해쉬가 된 것으로 판단하여 한번 확인을 해보았다.</p><p><img src="/images/pasted-324.png"><br>a을 md5로 인코딩했을 때 나온 값이랑 동일한것을 확인 할 수 있었다.</p><p><img src="/images/pasted-325.png"><br>나는 admin으로 로그인하기 위해 admin를 md5으로 해쉬화 후 base64로 인코딩한 값을 쿠키에 넣어봤지만, error를 반환받았다.</p><p>분명 인코딩과 해쉬도 맞았는데 뭐지 싶어서 admi를 서버로 보내서 쿠키를 확인해보았다.</p><p><img src="/images/pasted-326.png"><br>엄청 긴 값이 나와서 좀 당황을 했다.<br><br>값을 확인하기 위해 base64 디코딩을 진행하였다.</p><p><img src="/images/pasted-327.png"><br>값을 보니, a의 md5값이 맨 앞에 있는 것을 확인할 수 있었다.<br><br>알파벳 하나하나 md5로 해쉬화 후 합쳐서 base64 인코딩한 것으로 알 수 있었다.</p><p>나는 n의 md5 값을 뒤에 붙인 후 base64 인코딩을 하여 쿠키에 넣어서 페이지를 재로딩하였다.</p><p><img src="/images/pasted-328.png"><br>그 결과 Flag를 획득하였다.</p><p>내가 문자열 길이를 보고 MD5로 판단할 수 있던 이유는 각 해쉬가 출력하는 문자의 길이가 정해져있기 때문이다.</p><p><strong>1. MD5</strong></p><ul><li>MD5 출력값 길이 : 128bit (16진수로 32byte)</li></ul><p><strong>2. SHA-1</strong></p><ul><li>SHA-1 출력값 길이 : 160bit (16진수로 40byte)</li></ul><p><strong>3. SHA-256</strong></p><ul><li>SHA-256 출력값 길이 : 256bit (16진수로 64byte)</li></ul><p><strong>4. SHA-512</strong></p><ul><li>SHA-512 출력값 길이 : 512bit (16진수로 128byte)</li></ul>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/10/Webhacking-kr-Old-19-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 2581번 문제</title>
      <link>https://lrtk-coder.github.io/2021/05/10/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-2581%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/05/10/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-2581%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Mon, 10 May 2021 06:57:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;소수&quot;&gt;&lt;a href=&quot;#소수&quot; class=&quot;headerlink&quot; title=&quot;소수&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2581&quot;&gt;소수&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;자연수 M과 N이 주어질 때 M이상</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="소수"><a href="#소수" class="headerlink" title="소수"></a><a href="https://www.acmicpc.net/problem/2581">소수</a></h1><p>자연수 M과 N이 주어질 때 M이상 N이하의 자연수 중 소수인 것을 모두 골라 이들 소수의 합과 최솟값을 찾는 프로그램을 작성하시오.</p><p>예를 들어 M=60, N=100인 경우 60이상 100이하의 자연수 중 소수는 61, 67, 71, 73, 79, 83, 89, 97 총 8개가 있으므로, 이들 소수의 합은 620이고, 최솟값은 61이 된다.</p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">primeNumber</span>(<span class="params">start:<span class="built_in">int</span>, end:<span class="built_in">int</span></span>):</span></span><br><span class="line">    prime_number_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n, m + <span class="number">1</span>):</span><br><span class="line">        check = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, i):</span><br><span class="line">                <span class="keyword">if</span> i % j == <span class="number">0</span>:</span><br><span class="line">                    check = <span class="literal">False</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> check == <span class="literal">True</span>:</span><br><span class="line">                prime_number_list.append(i)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> prime_number_list</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    n, m = <span class="built_in">int</span>(<span class="built_in">input</span>()), <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    prime_number_list = primeNumber(n, m)</span><br><span class="line">    print(<span class="string">f&#x27;<span class="subst">&#123;<span class="built_in">sum</span>(prime_number_list)&#125;</span>\n<span class="subst">&#123;prime_number_list[<span class="number">0</span>]&#125;</span>&#x27;</span> <span class="keyword">if</span> <span class="built_in">len</span>(prime_number_list) != <span class="number">0</span> <span class="keyword">else</span> <span class="number">-1</span>)</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>1978번 문제에서 정의한 primeNumber 함수를 조금 수정하여 풀이를 하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%845/">백준 실버5</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/10/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-2581%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 실버 1978번 문제</title>
      <link>https://lrtk-coder.github.io/2021/05/09/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-1978%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/05/09/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-1978%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Sun, 09 May 2021 07:16:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;소수-찾기&quot;&gt;&lt;a href=&quot;#소수-찾기&quot; class=&quot;headerlink&quot; title=&quot;소수 찾기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1978&quot;&gt;소수 찾기&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;주어진 수 N</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="소수-찾기"><a href="#소수-찾기" class="headerlink" title="소수 찾기"></a><a href="https://www.acmicpc.net/problem/1978">소수 찾기</a></h1><p>주어진 수 N개 중에서 소수가 몇 개인지 찾아서 출력하는 프로그램을 작성하시오.</p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">primeNumber</span>(<span class="params">count</span>):</span></span><br><span class="line">    primeNumberList = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, count + <span class="number">2</span>):</span><br><span class="line">        check = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, i):</span><br><span class="line">            <span class="keyword">if</span> i % j == <span class="number">0</span>:</span><br><span class="line">                check = <span class="literal">False</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> check:</span><br><span class="line">            primeNumberList.append(i)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> primeNumberList</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    m = [*<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())][:n]</span><br><span class="line">    compareNumList = primeNumber(<span class="built_in">max</span>(m))</span><br><span class="line"></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> m:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> compareNumList:</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">    print(count)</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>수의 개수만큼 소수를 구하여 비교하여 카운팅하였다.</p><p>소수 구하는 방법은 2부터 n+2까지 반복하여, 2부터 자기 자신의 전까지 나눈 나머지가 0이 안나오면 소수로 판별하여 소수 리스트에 추가하는 방식으로 구하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EC%8B%A4%EB%B2%84/">실버</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%844/">백준 실버4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/09/%EB%B0%B1%EC%A4%80-%EC%8B%A4%EB%B2%84-1978%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 54 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/08/Webhacking-kr-Old-54-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/08/Webhacking-kr-Old-54-Write-Up/</guid>
      <pubDate>Sat, 08 May 2021 20:33:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-54"><a href="#Old-54" class="headerlink" title="Old - 54"></a>Old - 54</h2><p><img src="/images/pasted-317.png"><br>?의 위치에서 값이 계속 변경이 되더니, 마지막엔 ?이 되었다.</p><p>무슨 기능인지는 잘 모르겠다. 그래서 개발자 도구에서 코드를 살펴보았다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="params"><span class="built_in">window</span>.ActiveXObject</span>)</span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> ActiveXObject(<span class="string">&#x27;Msxml2.XMLHTTP&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="keyword">new</span> ActiveXObject(<span class="string">&#x27;Microsoft.XMLHTTP&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="function"><span class="title">if</span>(<span class="params"><span class="built_in">window</span>.XMLHttpRequest</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">x=run();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">answer</span>(<span class="params">i</span>)</span>&#123;</span><br><span class="line"> x.open(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;?m=&#x27;</span>+i,<span class="literal">false</span>);</span><br><span class="line">  x.send(<span class="literal">null</span>);</span><br><span class="line">  aview.innerHTML=x.responseText;</span><br><span class="line">  i++;</span><br><span class="line">  <span class="keyword">if</span>(x.responseText) <span class="built_in">setTimeout</span>(<span class="string">&quot;answer(&quot;</span>+i+<span class="string">&quot;)&quot;</span>,<span class="number">20</span>);</span><br><span class="line">  <span class="keyword">if</span>(x.responseText==<span class="string">&quot;&quot;</span>) aview.innerHTML=<span class="string">&quot;?&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="string">&quot;answer(0)&quot;</span>,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>코드 중에서 ?의 값을 변경하는 JS코드를 가져왔다.</p><p>run 함수는 서버와 통신할 객체를 선언을 해주는 역할이며,<br>answer 함수는 서버 객체에  값을 보내고, 반환 받은 값을 ?에 출력하는 역할이다.</p><p>서버에 0부터 1씩 증가된 m을 보내주는데, 반환값이 없으면 ?을 출력하는 것이다.</p><p>나는 answer 함수의 코드를 조금 수정하였다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">aview.innerHTML += x.responseText;</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span>(x.responseText) <span class="built_in">setTimeout</span>(<span class="string">&quot;answer(&quot;</span>+i+<span class="string">&quot;)&quot;</span>,<span class="number">20</span>);</span><br></pre></td></tr></table></figure><p>aview.innerHTML의 값이 계속 변하는게 아니라, 더해지는 것으로 변경<br>반환값이 없으면 ?으로 변경되는 조건을 삭제하였다.</p><p>수정된 answer 함수를 개발자 도구의 콘솔에 실행하면, 밑과 같이 Flag 값이 출력이 될 것이다.<br><img src="/images/pasted-318.png"></p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/08/Webhacking-kr-Old-54-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 39 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/08/Webhacking-kr-Old-39-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/08/Webhacking-kr-Old-39-Write-Up/</guid>
      <pubDate>Sat, 08 May 2021 20:30:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-39"><a href="#Old-39" class="headerlink" title="Old - 39"></a>Old - 39</h2><p><img src="/images/pasted-315.png"><br>이번에도 입력값에 통해 PHP에 어떤 조건이 되어있는 것으로 판단이 된다.</p><p>View-source를 열어서 코드를 확인하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  $db = dbconnect();</span><br><span class="line">  <span class="keyword">if</span>($_POST[‘id’])&#123;</span><br><span class="line">    $_POST[‘id’] = str_replace(“\\”,””,$_POST[‘id’]);</span><br><span class="line">    $_POST[‘id’] = str_replace(“’”,”’’”,$_POST[‘id’]);</span><br><span class="line">    $_POST[‘id’] = substr($_POST[‘id’],<span class="number">0</span>,<span class="number">15</span>);</span><br><span class="line">    $result = mysqli_fetch_array(mysqli_query($db,”select <span class="number">1</span> <span class="keyword">from</span> member where length(id)&lt;<span class="number">14</span> <span class="keyword">and</span> id=‘&#123;$_POST[‘id’]&#125;”));</span><br><span class="line">    <span class="keyword">if</span>($result[<span class="number">0</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">      solve(<span class="number">39</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드를 보니,<br>첫번째 replace인 <code>str_replace(“\\”,””,$_POST[‘id’])</code>은 입력값에서 \\이 있는 경우 제거한다.</p><p>두번째 replace인 <code>str_replace(“’”,”’’”,$_POST[‘id’])</code>은 입력값에서 ’을 ’’으로 변환한다.</p><p>이 2가지를 통과한 후, <a href="https://www.php.net/manual/en/function.substr.php">Substr</a> 함수에 0, 15을 줘서 입력값의 0번째부터 14번째 인덱스까지 추출하여 쿼리문에 삽입한다.</p><p>쿼리는 <code>length(id)&lt;14 and id=‘&#123;$_POST[‘id’]&#125;</code>이 True면 1를 출력한다.</p><p>결과가 1이 나와야 조건문이 실행이 되면서 Flag를 얻을 수 있다.</p><p>일단 쿼리에서 from이 member인 것을 보아서 지금까지 나온 admin, guest를 이용하면 될 것으로 판단이 된다.</p><p>문제는 <code>id=‘&#123;$_POST[‘id’]&#125;</code>가 쿼리문으로 될려면 뒤에 ’이 있어야 하는데, 두번째 replace 때문에 ::’’::으로 변환이 된다는 것이다.<br>그래서 될지 모르겠지만, 인덱스 0부터 14까지만 반영된다는 것을 이용하여 <code>admin         &#39;</code>을 입력하였다.</p><p>이유는  <code>admin         &#39;</code>가  두번째 replace에 의해 <code>admin         &#39;&#39;</code>으로 변환되고, 인덱스 0 ~ 14까지는 <code>admin         ‘</code>임으로 ’ 문제는 해결이 되었다.</p><p>값을 서버로 보내니,<br><img src="/images/pasted-316.png"><br>Flag를 받을 수 있었다.</p><p>SQL 쿼리에서 스페이스 공간이 있어도 어떻게 가능한 것인지 궁금하여 검색을 해보니, 우아한형제 기술블로그에서 해답을 찾을 수 있었다.</p><p><a href="https://woowabros.github.io/study/2018/02/26/mysql-char-comparison.html">MySQL에서 ‘a’ = ‘a ‘가 true로 평가된다? - 우아한형제들 기술 블로그</a></p><p>결론, Table 생성 시 컬럼의 길이 제한을 맞추기 위해 부족한 공간을 공백처리를 한다는 것이다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/08/Webhacking-kr-Old-39-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 38 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/08/Webhacking-kr-Old-38-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/08/Webhacking-kr-Old-38-Write-Up/</guid>
      <pubDate>Sat, 08 May 2021 11:28:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-38"><a href="#Old-38" class="headerlink" title="Old - 38"></a>Old - 38</h2><p><img src="/images/pasted-310.png"><br>페이지에 들어가니, Log Injection이 눈에 가장 띄었다.</p><blockquote><p><a href="https://owasp.org/www-community/attacks/Log_Injection">Log Injection이란?</a><br>사용자 입력을 로그 파일에 기록하면 공격자가 로그 항목을 위조하거나 악성 콘텐츠를 로그에 삽입하는 기법</p></blockquote><p>값을 넣고 서버에 보내봐도 별다른 이상이 없었다.</p><p>그래서 개발자 도구을 이용하여 코드를 살펴보았다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>LOG INJECTION<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;index.php&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">size</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Login&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;a href=admin.php&gt;admin page&lt;/a&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Admin page로 이동하는 A태그가 주석 처리가 되어있는 것을 볼 수 있었다.</p><p>해당 주소로 이동하니,</p><p><img src="/images/pasted-311.png"><br>다른 이용자들이 입력한 값들이 로그로 쌓인 것을 볼 수 있었다.</p><p>또한 Flag를 얻을 수 있는 방법도 적혀져 있었다.<br>admin을 로그에 쌓으면 Flag를 주는 것으로 판단하였고, 나는 어떻게 할 것인가 고민을 하였다.</p><p>고민 끝에 줄바꿈을 통해 로그를 위조하기로 하였고,<br><code>\n, \r\n, &lt;br&gt;</code> 등의 방법을 삽입하여 줄바꿈을 시도하였지만,</p><p><img src="/images/pasted-312.png"><br>모두 실패하였다.</p><p>그래서 인터넷에 “HTML Input 태그 줄바꿈”을 검색을 하였고, 한 블로그를 발견하였다.<br><a href="https://aboooks.tistory.com/tag/%EC%97%AC%EB%9F%AC%20%EC%A4%84%20%EC%9E%85%EB%A0%A5%20%ED%85%8D%EC%8A%A4%ED%8A%B8%20%EC%B0%BD%20%ED%83%9C%EA%B7%B8">‘여러 줄 입력 텍스트 창 태그’ 태그의 글 목록 :: 지구별 안내서</a></p><p><img src="/images/pasted-313.png"><br>블로그에선 Textarea 태그에 대해 나와있었고, 나는 문제 페이지의 input 태그를 textarea로 변경하여 Log Injection을 시도하였다.</p><p><img src="/images/pasted-314.png"><br>Log Injection을 서버로 보내고, admin 페이지에 들어가니 Flag를 얻을 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/08/Webhacking-kr-Old-38-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈 2839번 문제</title>
      <link>https://lrtk-coder.github.io/2021/05/06/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%88-2839%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/05/06/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%88-2839%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Thu, 06 May 2021 19:17:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;설탕-배달&quot;&gt;&lt;a href=&quot;#설탕-배달&quot; class=&quot;headerlink&quot; title=&quot;설탕 배달&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2839&quot;&gt;설탕 배달&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;상근이는 요즘</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="설탕-배달"><a href="#설탕-배달" class="headerlink" title="설탕 배달"></a><a href="https://www.acmicpc.net/problem/2839">설탕 배달</a></h1><p>상근이는 요즘 설탕공장에서 설탕을 배달하고 있다. 상근이는 지금 사탕가게에 설탕을 정확하게 N킬로그램을 배달해야 한다. 설탕공장에서 만드는 설탕은 봉지에 담겨져 있다. 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.</p><p>상근이는 귀찮기 때문에, 최대한 적은 봉지를 들고 가려고 한다. 예를 들어, 18킬로그램 설탕을 배달해야 할 때, 3킬로그램 봉지 6개를 가져가도 되지만, 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.</p><p>상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.</p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sugar = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line">bag = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> sugar &gt;= <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">if</span> sugar%<span class="number">5</span> == <span class="number">0</span>:</span><br><span class="line">        bag += sugar//<span class="number">5</span></span><br><span class="line">        print(bag)</span><br><span class="line">        quit()</span><br><span class="line"></span><br><span class="line">    sugar -= <span class="number">3</span></span><br><span class="line">    bag += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(<span class="number">-1</span>)</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>입력된 값이 5로 나눠서 0이 나올 수 있으면 몫을 bag 변수에 더해서 출력하고, 그게 아니라면 -3을 하여 bag을 1 증가 후 다시 반복하는 코드이다.</p><p>이렇게 되면 11와 같은 값을 구할 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B8%8C%EB%A1%A0%EC%A6%88/">브론즈</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%881/">백준 브론즈1</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/06/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%88-2839%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈 2775번 문제</title>
      <link>https://lrtk-coder.github.io/2021/05/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%88-2775%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/05/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%88-2775%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Wed, 05 May 2021 19:18:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;부녀회장이-될테야&quot;&gt;&lt;a href=&quot;#부녀회장이-될테야&quot; class=&quot;headerlink&quot; title=&quot;부녀회장이 될테야&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2775&quot;&gt;부녀회장이 될테야&lt;/a</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="부녀회장이-될테야"><a href="#부녀회장이-될테야" class="headerlink" title="부녀회장이 될테야"></a><a href="https://www.acmicpc.net/problem/2775">부녀회장이 될테야</a></h1><p>평소 반상회에 참석하는 것을 좋아하는 주희는 이번 기회에 부녀회장이 되고 싶어 각 층의 사람들을 불러 모아 반상회를 주최하려고 한다.</p><p>이 아파트에 거주를 하려면 조건이 있는데, “a층의 b호에 살려면 자신의 아래(a-1)층의 1호부터 b호까지 사람들의 수의 합만큼 사람들을 데려와 살아야 한다” 는 계약 조항을 꼭 지키고 들어와야 한다.</p><p>아파트에 비어있는 집은 없고 모든 거주민들이 이 계약 조건을 지키고 왔다고 가정했을 때, 주어지는 양의 정수 k와 n에 대해 k층에 n호에는 몇 명이 살고 있는지 출력하라. 단, 아파트에는 0층부터 있고 각층에는 1호부터 있으며, 0층의 i호에는 i명이 산다.</p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">testCase = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(testCase):</span><br><span class="line">    k = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    apt = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(k):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n):</span><br><span class="line">            apt[i] += apt[i<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    print(apt[<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><h3 id="풀이-설명"><a href="#풀이-설명" class="headerlink" title="풀이 설명"></a>풀이 설명</h3><p>단순한 구현 문제라서 풀이 설명은 넘어가겠다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B8%8C%EB%A1%A0%EC%A6%88/">브론즈</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%882/">백준 브론즈2</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/05/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%88-2775%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 26 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/04/Webhacking-kr-Old-26-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/04/Webhacking-kr-Old-26-Write-Up/</guid>
      <pubDate>Tue, 04 May 2021 19:59:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-26"><a href="#Old-26" class="headerlink" title="Old - 26"></a>Old - 26</h2><p><img src="/images/pasted-308.png"><br>View-source 라는 링크만 있어서 일단 코드를 확인하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&quot;/admin/&quot;</span>,$_GET[<span class="string">&#x27;id&#x27;</span>])) &#123; <span class="keyword">echo</span><span class="string">&quot;no!&quot;</span>; <span class="keyword">exit</span>(); &#125;</span><br><span class="line">  $_GET[<span class="string">&#x27;id&#x27;</span>] = urldecode($_GET[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">  <span class="keyword">if</span>($_GET[<span class="string">&#x27;id&#x27;</span>] == <span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">    solve(<span class="number">26</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드에서 중요한 부분만 가져왔는데, id의 값이 URL 디코딩 후 admin이면 Flag를 획득하는 조건이 있었다.</p><p>나는 admin을 이중 URL 인코딩하여 id에 넣어줄 것이다.</p><p>이중 URL 인코딩을 하는 이유는 PHP는 넘겨받은 값을 URL 디코딩을 하기 때문에 한번만 인코딩을 하면 PHP는 자동으로 디코딩을 하여 원래의 값으로 쓰기 때문이다.<br>문제에서 요구하는 건 URL 인코딩된 admin이기 때문에 이를 반영하기 위해 이중 URL 인코딩을 하였다.</p><p><code>?id=%25%36%31%25%36%34%25%36%64%25%36%39%25%36%65</code>를 페이지 URL 뒤에 넣고 서버에 보내니, </p><p><img src="/images/pasted-309.png"><br>Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/04/Webhacking-kr-Old-26-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 18 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/04/Webhacking-kr-Old-18-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/04/Webhacking-kr-Old-18-Write-Up/</guid>
      <pubDate>Tue, 04 May 2021 19:54:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-18"><a href="#Old-18" class="headerlink" title="Old - 18"></a>Old - 18</h2><p><img src="/images/pasted-299.png"><br>이번 문제는 SQL Injection이라고 적혀져 있는 것으로 보아 SQL 쿼리에 관한 문제로 추측된다.</p><p>맨 밑에 초록색 A태그를 클릭하여 코드를 확인하였다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[‘no’])&#123;</span><br><span class="line">  $db = dbconnect();</span><br><span class="line">  <span class="keyword">if</span>(preg_match(“/ |\/|\(|\)|\||&amp;|select|<span class="keyword">from</span>|<span class="number">0</span>x/i”,$_GET[‘no’])) <span class="keyword">exit</span>(“no hack”);</span><br><span class="line">  $result = mysqli_fetch_array(mysqli_query($db,”select id <span class="keyword">from</span> chall18 where id=‘guest’ <span class="keyword">and</span> no=$_GET[no]”)); <span class="comment">// admin’s no = 2</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>($result[‘id’]==“guest”) <span class="keyword">echo</span> “hi guest”;</span><br><span class="line">  <span class="keyword">if</span>($result[‘id’]==“admin”)&#123;</span><br><span class="line">    solve(<span class="number">18</span>);</span><br><span class="line">    <span class="keyword">echo</span> “hi admin!”;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드를 보니, 조건문 중에서 preg_match 함수의 인자 값들이 눈이 갔다.</p><p>그 후, preg_match가 있는 조건문 밑에 있는 줄의 주석에서 admin는 no=2이라는 것을 알 수 있었다.</p><p>하지만 현재 SQL 쿼리의 Where을 보니, <code>id=‘guest’</code>이라고 적현 것을 보니 no에 2을 넣은다고 해서 admin의 id가 나오지는 않을 것으로 판단된다.</p><p>대충 코드를 보니, 입력 값에 대한 검증이 있으며 입력 값은 쿼리의 no에 들어간다는 것을 알 수 있었다.</p><p>일단 guest의 no을 1~9까지 넣어서 찾아보도록하겠다.</p><p><img src="/images/pasted-300.png"><br>1을 입력하니, hi guest가 출력이 되었다.</p><p>guest의 no은 1인 것을 알아내었다.</p><p>이제 Where절에 어떤 값을 던져야 admin의 id가 나오는지를 고민하였다.</p><p>나는 Input form에  <code>3 or no=2</code>를 입력하여 <code>id=&#39;guest&#39; and no=3</code>를 False을 만들어서 무시하겠끔하고, 그 뒤로 <code>or no=2</code>로 admin의 id를 출력할 생각이다.</p><p>이게 무슨 말이냐?라고 하는 분도 있을거라 생각한다.</p><p><img src="/images/pasted-301.png"><br>위 사진은 내 서버의 Mysql에 문제의 DB 테이블을 구현하였다.</p><p>코드에서 나온 쿼리문을 이용하여 id를 검색해보았다.</p><p><img src="/images/pasted-302.png" alt="`SELECT id FROM chall18 WHERE id=‘guest’ and no=1;`"></p><p>이 때는 Where의 id and no가 모두 True라서 id가 출력이 되었다.</p><p>하지만 and는 둘 중 하나라도 False가 나오면 False로 인식된다.</p><p><img src="/images/pasted-303.png" alt="`SELECT id FROM chall18 WHERE id=‘guest’ and no=1 or no=2;`"></p><p>이 부분은 <code>SELECT id FROM chall18 WHERE id=‘guest’ and no=1;</code>, <code>SELECT id FROM chall18 WHERE no=2;</code>로 나누어 보면 된다.</p><p>위에 말했던 것처럼 and가 모두 True라서 guest가 출력이 되었다.</p><p><img src="/images/pasted-304.png" alt="`SELECT id FROM chall18 WHERE id=‘guest’ and no=3 or no=2;`"></p><p>여기선 <code>id=‘guest’ and no=3</code>의 no가 False라서 and의 결과값은 False로 인식되어 guest의 id가 출력되지 않았다.</p><p>하지만 or는 왜 False로 인식되지 않았을까? 그것은 or는 둘 중 하나라도 True면 결과 값을 True로 인식되기 때문이다.<br>그래서 admin이 출력이 되었다.</p><p>이제 어떻게 입력하면 admin이 출력되는지 알았으니, 한번 입력해보겠다.</p><p><img src="/images/pasted-306.png"><br>입력 검증에 걸려서 no hack을 출력되는 것을 알 수 있다.</p><p>이를 우회하기 위해 어떤 것을 검증하는지 살펴보겠다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(“/ |\/|\(|\)|\||&amp;|select|<span class="keyword">from</span>|<span class="number">0</span>x/i”,$_GET[‘no’])) <span class="keyword">exit</span>(“no hack”);</span><br></pre></td></tr></table></figure><p>preg_match 함수는 정규식을 이용하여 필터를 하는 함수이다.<br>자세한 내용을 알고 싶으면 <a href="https://www.php.net/manual/en/function.preg-match.php">PHP: preg_match - Manual</a>에 들어가서 확인하면 된다.</p><p>preg_match 함수의 첫번째 인자에 정의된 정규식을 살펴보겠다.<br>정규식은 <code>/..pattern../</code>으로 정의가 된다.</p><p>정규식 뒤에 후치 옵션이라는 것을 지정할 수 있는데, 현재 코드에선 i가 그 후치 옵션이다.</p><p>i는 알파벳 대/소문자를 구별하지 않는다는 것을 나타내는 옵션이다.</p><p><code>/ |\/|\(|\)|\||&amp;|select|from|0x/i</code>을 나눠보면, 밑과 같다.<br>    - 공백(스페이스)<br>    - /<br>    - (<br>    - )<br>    - |<br>    - &amp;<br>    - select<br>    - from<br>    - 0x</p><p>저 값을 중 현재 내가 입력할 값에서 걸리는 것은 스페이스가 걸린다.</p><p>이를 우회하기 위해서 스페이스 대신에 사용할 값을 찾아야 한다.</p><p>입력된 값이 GET으로 넘어간다는 것에서 URL 인코딩된 값을 이용하면 된다는 것을 인지하였고, Tab 값을 URL 인코딩하여 값을 넘기기로 하였다.</p><p>URL에 <code>index.php?no=3%09or%09no%3D2</code>을 넣어서 값을 넘겨고,</p><p><img src="/images/pasted-307.png"><br>Flag를 얻을 수 있었다.</p><p>이번 문제는 기초적인 PHP, URL 인코딩, SQL 쿼리를 아는지를 확인하는 문제로 생각된다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/04/Webhacking-kr-Old-18-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 17 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/04/Webhacking-kr-Old-17-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/04/Webhacking-kr-Old-17-Write-Up/</guid>
      <pubDate>Tue, 04 May 2021 19:52:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-17"><a href="#Old-17" class="headerlink" title="Old - 17"></a>Old - 17</h2><p><img src="/images/pasted-296.png"><br>문제 14번과 비슷한 유형의 문제인 것 같다.</p><p>어떤 기능을 하는지 알아보기 위해 개발자 도구를 이용하여 코드를 확인해보았다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;black&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span> <span class="attr">size</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;passwd&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pw&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;sub()&quot;</span> <span class="attr">value</span>=<span class="string">&quot;check&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">unlock=100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10*100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10*100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10*100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10/100*10*10+1/10-10+10+50-9*8+7-6+5-4*3-2*1*10*100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10+100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10-100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10/100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10/100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10/100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10/100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10/100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10/100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10/100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10/100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10/100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10*100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10*100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10*100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10*100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10*100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10*100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10*100*10*10+100/10-10+10+50-9*8+7-6+5-4*3-2*1*10+9999999;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">sub</span>(<span class="params"></span>) </span>&#123; </span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">if</span>(<span class="params">login.pw.value==unlock</span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">location.href=<span class="string">&quot;?&quot;</span>+unlock/<span class="number">10</span>; </span></span><br><span class="line">&#125; </span><br><span class="line"><span class="javascript"><span class="keyword">else</span> &#123; </span></span><br><span class="line"><span class="javascript">alert(<span class="string">&quot;Wrong&quot;</span>); </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>코드를 보니, 변수 unlock의 값과 Input form에 입력한 값을 비교하여 같으면 Flag를 주는 페이지도 이동이 되는 것 같다.</p><p><img src="/images/pasted-297.png"><br>unlock을 복사하여 값을 개발자 도구의 콘솔에 출력해보았다.</p><p>출력한 값을 Input form에 입력하여 <code>location.href=&quot;?&quot;+unlock/10;</code>로 이동하였다.</p><p><img src="/images/pasted-298.png"><br>바로 Flag를 얻을 수 있었다.</p><p>이번 문제는 기초적인 JS만 알고 있으면 손쉽게 풀 수 있는 문제였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/04/Webhacking-kr-Old-17-Write-Up/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
