<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LRTK Blog</title>
    <link>https://lrtk-coder.github.io/</link>
    
    <atom:link href="https://lrtk-coder.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Coding, Security, IT News 등 정리한 블로그</description>
    <pubDate>Fri, 22 Jan 2021 08:20:20 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>test</title>
      <link>https://lrtk-coder.github.io/2021/01/21/test/</link>
      <guid>https://lrtk-coder.github.io/2021/01/21/test/</guid>
      <pubDate>Thu, 21 Jan 2021 23:20:20 GMT</pubDate>
      
      
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/01/21/test/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 1712번 문제</title>
      <link>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1712%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1712%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Wed, 30 Dec 2020 22:04:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-1712번-문제&quot;&gt;&lt;a href=&quot;#백준-1712번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 1712번 문제&quot;&gt;&lt;/a&gt;백준 1712번 문제&lt;/h2&gt;&lt;h3 id=&quot;손익분기점&quot;&gt;&lt;a href=&quot;#손익분기점&quot; class</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-1712번-문제"><a href="#백준-1712번-문제" class="headerlink" title="백준 1712번 문제"></a>백준 1712번 문제</h2><h3 id="손익분기점"><a href="#손익분기점" class="headerlink" title="손익분기점"></a>손익분기점</h3><h4 id="월드전자는-노트북을-제조하고-판매하는-회사이다-노트북-판매-대수에-상관없이-매년-임대료-재산세-보험료-급여-등-A만원의-고정-비용이-들며-한-대의-노트북을-생산하는-데에는-재료비와-인건비-등-총-B만원의-가변-비용이-든다고-한다"><a href="#월드전자는-노트북을-제조하고-판매하는-회사이다-노트북-판매-대수에-상관없이-매년-임대료-재산세-보험료-급여-등-A만원의-고정-비용이-들며-한-대의-노트북을-생산하는-데에는-재료비와-인건비-등-총-B만원의-가변-비용이-든다고-한다" class="headerlink" title="월드전자는 노트북을 제조하고 판매하는 회사이다. 노트북 판매 대수에 상관없이 매년 임대료, 재산세, 보험료, 급여 등 A만원의 고정 비용이 들며, 한 대의 노트북을 생산하는 데에는 재료비와 인건비 등 총 B만원의 가변 비용이 든다고 한다."></a>월드전자는 노트북을 제조하고 판매하는 회사이다. 노트북 판매 대수에 상관없이 매년 임대료, 재산세, 보험료, 급여 등 A만원의 고정 비용이 들며, 한 대의 노트북을 생산하는 데에는 재료비와 인건비 등 총 B만원의 가변 비용이 든다고 한다.</h4><h4 id="예를-들어-A-1-000-B-70이라고-하자-이-경우-노트북을-한-대-생산하는-데는-총-1-070만원이-들며-열-대-생산하는-데는-총-1-700만원이-든다"><a href="#예를-들어-A-1-000-B-70이라고-하자-이-경우-노트북을-한-대-생산하는-데는-총-1-070만원이-들며-열-대-생산하는-데는-총-1-700만원이-든다" class="headerlink" title="예를 들어 A=1,000, B=70이라고 하자. 이 경우 노트북을 한 대 생산하는 데는 총 1,070만원이 들며, 열 대 생산하는 데는 총 1,700만원이 든다."></a>예를 들어 A=1,000, B=70이라고 하자. 이 경우 노트북을 한 대 생산하는 데는 총 1,070만원이 들며, 열 대 생산하는 데는 총 1,700만원이 든다.</h4><h4 id="노트북-가격이-C만원으로-책정되었다고-한다-일반적으로-생산-대수를-늘려-가다-보면-어느-순간-총-수입-판매비용-이-총-비용-고정비용-가변비용-보다-많아지게-된다-최초로-총-수입이-총-비용보다-많아져-이익이-발생하는-지점을-손익분기점-BREAK-EVEN-POINT-이라고-한다"><a href="#노트북-가격이-C만원으로-책정되었다고-한다-일반적으로-생산-대수를-늘려-가다-보면-어느-순간-총-수입-판매비용-이-총-비용-고정비용-가변비용-보다-많아지게-된다-최초로-총-수입이-총-비용보다-많아져-이익이-발생하는-지점을-손익분기점-BREAK-EVEN-POINT-이라고-한다" class="headerlink" title="노트북 가격이 C만원으로 책정되었다고 한다. 일반적으로 생산 대수를 늘려 가다 보면 어느 순간 총 수입(판매비용)이 총 비용(=고정비용+가변비용)보다 많아지게 된다. 최초로 총 수입이 총 비용보다 많아져 이익이 발생하는 지점을 손익분기점(BREAK-EVEN POINT)이라고 한다."></a>노트북 가격이 C만원으로 책정되었다고 한다. 일반적으로 생산 대수를 늘려 가다 보면 어느 순간 총 수입(판매비용)이 총 비용(=고정비용+가변비용)보다 많아지게 된다. 최초로 총 수입이 총 비용보다 많아져 이익이 발생하는 지점을 손익분기점(BREAK-EVEN POINT)이라고 한다.</h4><h4 id="A-B-C가-주어졌을-때-손익분기점을-구하는-프로그램을-작성하시오"><a href="#A-B-C가-주어졌을-때-손익분기점을-구하는-프로그램을-작성하시오" class="headerlink" title="A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오."></a>A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오.</h4><p>Link : <a href="https://www.acmicpc.net/problem/1712">https://www.acmicpc.net/problem/1712</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a, b, c = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">12</span>):</span><br><span class="line">    print(a+b*i)</span><br><span class="line">    print(c*i, <span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">입력</span><br><span class="line">1000 70 170</span><br><span class="line"></span><br><span class="line">출력 결과</span><br><span class="line">1070</span><br><span class="line">170 </span><br><span class="line"></span><br><span class="line">1140</span><br><span class="line">340 </span><br><span class="line"></span><br><span class="line">1210</span><br><span class="line">510 </span><br><span class="line"></span><br><span class="line">1280</span><br><span class="line">680 </span><br><span class="line"></span><br><span class="line">1350</span><br><span class="line">850 </span><br><span class="line"></span><br><span class="line">1420</span><br><span class="line">1020 </span><br><span class="line"></span><br><span class="line">1490</span><br><span class="line">1190 </span><br><span class="line"></span><br><span class="line">1560</span><br><span class="line">1360 </span><br><span class="line"></span><br><span class="line">1630</span><br><span class="line">1530 </span><br><span class="line"></span><br><span class="line">1700</span><br><span class="line">1700 </span><br><span class="line"></span><br><span class="line">1770</span><br><span class="line">1870 </span><br></pre></td></tr></table></figure><p>문제를 이해하는데 좀 걸렸다.<br><br>문제를 쉽게 풀이하자면, 노트북을 생산하는데 들어가는 <strong>고정 비용</strong>, 재료비와 인건비를 합친 <strong>가변 비용</strong> 두 비용을 더해서 노트북 생산 금액이 측정이 된다.<br><br>예시대로, 고정 비용 - 1000, 가변 비용 - 70 이면, 노트북 2개를 생산하는 비용은 ** 고정 비용 + ( 가변 비용 * 2 ) **이라는 공식이 성립되고, 1140이라는 비용이 들게 된다.</p><p>판매값이 170이 측정이 될 때, 노트북 몇 대를 팔아야 생산 비용을 넘어설 수 있는지를 구하는 문제였다.</p><p>공식을 구하자면, ** 고정 비용 + (가변 비용 * X) &lt; 판매값 * X **이 성립이 된다.<br><br>여기서 ** 가변 비용 * X *<em>를 옆에 옮기면, ** 고정 비용 &lt; (판매값 - 가변 비용) \</em> X **이 된다.</p><p>우리의 목표는 x를 구하는 것이 목적이므로, x만 남기고 옆으로 넘긴다.<br><br>** 고정 비용 / (판매값 - 가변 비용) &lt; X **이라는 최종 공식이 구해지게 된다.</p><p>이 공식을 이용하여 문제풀이를 하겠다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a, b, c = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (c &lt;= b):</span><br><span class="line">    d = <span class="number">-1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    d = a//(c-b)+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><p>여기서 더 풀이를 하자면, 판매값과 가변 비용의 크기 비교를 한 이유는 가변 비용의 크기가 판매값보다 크면, 공식이 음수로 되기 때문에 x가 0이라도 참이 된다. 그래서 예외 처리를 하였다.<br></p><p>else문을 보면 공식에 +1를 한 모습을 볼 수 있다. +1은 소수점을 반올림을 한 경우를 생각하여 더해주었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1712%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 5543번 문제</title>
      <link>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-5543%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-5543%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Wed, 30 Dec 2020 22:03:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-5543번-문제&quot;&gt;&lt;a href=&quot;#백준-5543번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 5543번 문제&quot;&gt;&lt;/a&gt;백준 5543번 문제&lt;/h2&gt;&lt;h3 id=&quot;상근날드&quot;&gt;&lt;a href=&quot;#상근날드&quot; class=&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-5543번-문제"><a href="#백준-5543번-문제" class="headerlink" title="백준 5543번 문제"></a>백준 5543번 문제</h2><h3 id="상근날드"><a href="#상근날드" class="headerlink" title="상근날드"></a>상근날드</h3><h4 id="상근날드에서-가장-잘-팔리는-메뉴는-세트-메뉴이다-주문할-때-자신이-원하는-햄버거와-음료를-하나씩-골라-세트로-구매하면-가격의-합계에서-50원을-뺀-가격이-세트-메뉴의-가격이-된다"><a href="#상근날드에서-가장-잘-팔리는-메뉴는-세트-메뉴이다-주문할-때-자신이-원하는-햄버거와-음료를-하나씩-골라-세트로-구매하면-가격의-합계에서-50원을-뺀-가격이-세트-메뉴의-가격이-된다" class="headerlink" title="상근날드에서 가장 잘 팔리는 메뉴는 세트 메뉴이다. 주문할 때, 자신이 원하는 햄버거와 음료를 하나씩 골라, 세트로 구매하면, 가격의 합계에서 50원을 뺀 가격이 세트 메뉴의 가격이 된다."></a>상근날드에서 가장 잘 팔리는 메뉴는 세트 메뉴이다. 주문할 때, 자신이 원하는 햄버거와 음료를 하나씩 골라, 세트로 구매하면, 가격의 합계에서 50원을 뺀 가격이 세트 메뉴의 가격이 된다.</h4><h4 id="햄버거는-총-3종류-상덕버거-중덕버거-하덕버거가-있고-음료는-콜라와-사이다-두-종류가-있다"><a href="#햄버거는-총-3종류-상덕버거-중덕버거-하덕버거가-있고-음료는-콜라와-사이다-두-종류가-있다" class="headerlink" title="햄버거는 총 3종류 상덕버거, 중덕버거, 하덕버거가 있고, 음료는 콜라와 사이다 두 종류가 있다."></a>햄버거는 총 3종류 상덕버거, 중덕버거, 하덕버거가 있고, 음료는 콜라와 사이다 두 종류가 있다.</h4><h4 id="햄버거와-음료의-가격이-주어졌을-때-가장-싼-세트-메뉴의-가격을-출력하는-프로그램을-작성하시오"><a href="#햄버거와-음료의-가격이-주어졌을-때-가장-싼-세트-메뉴의-가격을-출력하는-프로그램을-작성하시오" class="headerlink" title="햄버거와 음료의 가격이 주어졌을 때, 가장 싼 세트 메뉴의 가격을 출력하는 프로그램을 작성하시오."></a>햄버거와 음료의 가격이 주어졌을 때, 가장 싼 세트 메뉴의 가격을 출력하는 프로그램을 작성하시오.</h4><p>Link : <a href="https://www.acmicpc.net/problem/5543">https://www.acmicpc.net/problem/5543</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">menu = [ i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">open</span>(<span class="number">0</span>)) ]</span><br><span class="line"><span class="built_in">sum</span> = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">3</span>):</span><br><span class="line">    <span class="built_in">sum</span>.append(menu[i] + menu[<span class="number">3</span>])</span><br><span class="line">    <span class="built_in">sum</span>.append(menu[i] + menu[<span class="number">4</span>])</span><br><span class="line">    </span><br><span class="line">print(<span class="built_in">sorted</span>(<span class="built_in">sum</span>)[<span class="number">0</span>]<span class="number">-50</span>)</span><br></pre></td></tr></table></figure><p>list를 사용하여 문제해결을 하였다.<br><br>하지만 많이 부족하다. 사실 최소값을 구하는 건 가장 작은 수 2개를 구해서 더해주면 되는데 위 방식은 모든 경우의 수를 구하여, 정렬시킨 것이라 비효율적이다.<br><br>효율적으로 수정하겠다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*p,q,r = <span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">open</span>(<span class="number">0</span>))</span><br><span class="line">print(<span class="built_in">min</span>(p)+<span class="built_in">min</span>(q,r)<span class="number">-50</span>)</span><br></pre></td></tr></table></figure><p>2번째 코드는 위에 설명한 대로 최소값 2개를 구하여 더하는 코드이다.<br><br>1번째 코드를 보면 좀 생소한 방식을 확인할 수 있다.<br><br><code>*p,q,r = map(int, open(0))</code>는 10개를 입력시 뒤에서 2개 빼고 앞의 8개는 p에 리스트로 저장이 된다.<br><br>뒤의 2개는 q, r에 저장이 되어서 음료의 최소값을 구하기가 더 수월하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*p,q,r = <span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">open</span>(<span class="number">0</span>)) <span class="comment"># 입력 : 1,2,3,4,5</span></span><br><span class="line">print(p) <span class="comment"># 출력 : [1, 2, 3]</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-5543%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 14681번 문제</title>
      <link>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-14681%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-14681%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Wed, 30 Dec 2020 22:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-14681번-문제&quot;&gt;&lt;a href=&quot;#백준-14681번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 14681번 문제&quot;&gt;&lt;/a&gt;백준 14681번 문제&lt;/h2&gt;&lt;h3 id=&quot;사분면-고르기&quot;&gt;&lt;a href=&quot;#사분면-고르</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-14681번-문제"><a href="#백준-14681번-문제" class="headerlink" title="백준 14681번 문제"></a>백준 14681번 문제</h2><h3 id="사분면-고르기"><a href="#사분면-고르기" class="headerlink" title="사분면 고르기"></a>사분면 고르기</h3><h4 id="흔한-수학-문제-중-하나는-주어진-점이-어느-사분면에-속하는지-알아내는-것이다-사분면은-아래-그림처럼-1부터-4까지-번호를-갖는다-“Quadrant-n”은-“제n사분면”이라는-뜻이다"><a href="#흔한-수학-문제-중-하나는-주어진-점이-어느-사분면에-속하는지-알아내는-것이다-사분면은-아래-그림처럼-1부터-4까지-번호를-갖는다-“Quadrant-n”은-“제n사분면”이라는-뜻이다" class="headerlink" title="흔한 수학 문제 중 하나는 주어진 점이 어느 사분면에 속하는지 알아내는 것이다. 사분면은 아래 그림처럼 1부터 4까지 번호를 갖는다. “Quadrant n”은 “제n사분면”이라는 뜻이다."></a>흔한 수학 문제 중 하나는 주어진 점이 어느 사분면에 속하는지 알아내는 것이다. 사분면은 아래 그림처럼 1부터 4까지 번호를 갖는다. “Quadrant n”은 “제n사분면”이라는 뜻이다.</h4><p><img src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14681/1.png"></p><h4 id="예를-들어-좌표가-12-5-인-점-A는-x좌표와-y좌표가-모두-양수이므로-제1사분면에-속한다-점-B는-x좌표가-음수이고-y좌표가-양수이므로-제2사분면에-속한다"><a href="#예를-들어-좌표가-12-5-인-점-A는-x좌표와-y좌표가-모두-양수이므로-제1사분면에-속한다-점-B는-x좌표가-음수이고-y좌표가-양수이므로-제2사분면에-속한다" class="headerlink" title="예를 들어, 좌표가 (12, 5)인 점 A는 x좌표와 y좌표가 모두 양수이므로 제1사분면에 속한다. 점 B는 x좌표가 음수이고 y좌표가 양수이므로 제2사분면에 속한다."></a>예를 들어, 좌표가 (12, 5)인 점 A는 x좌표와 y좌표가 모두 양수이므로 제1사분면에 속한다. 점 B는 x좌표가 음수이고 y좌표가 양수이므로 제2사분면에 속한다.</h4><h4 id="점의-좌표를-입력받아-그-점이-어느-사분면에-속하는지-알아내는-프로그램을-작성하시오-단-x좌표와-y좌표는-모두-양수나-음수라고-가정한다"><a href="#점의-좌표를-입력받아-그-점이-어느-사분면에-속하는지-알아내는-프로그램을-작성하시오-단-x좌표와-y좌표는-모두-양수나-음수라고-가정한다" class="headerlink" title="점의 좌표를 입력받아 그 점이 어느 사분면에 속하는지 알아내는 프로그램을 작성하시오. 단, x좌표와 y좌표는 모두 양수나 음수라고 가정한다."></a>점의 좌표를 입력받아 그 점이 어느 사분면에 속하는지 알아내는 프로그램을 작성하시오. 단, x좌표와 y좌표는 모두 양수나 음수라고 가정한다.</h4><p>Link : <a href="https://www.acmicpc.net/problem/2753">https://www.acmicpc.net/problem/2753</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">open</span>(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> a &gt;= <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">if</span> b &gt;= <span class="number">0</span>:</span><br><span class="line">        print(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="number">4</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> b &gt;=<span class="number">0</span>:</span><br><span class="line">        print(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>조건문을 왕창써서 해결한 코드이다.<br><br>좀 더 파이썬스럽게 변경하곘다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;3421&quot;</span>[<span class="built_in">input</span>()&gt;<span class="string">&quot;0&quot;</span>::<span class="number">2</span>][<span class="built_in">input</span>()&gt;<span class="string">&quot;0&quot;</span>])</span><br></pre></td></tr></table></figure><p>슬라이싱과 bool을 이용하여 수정하였다.<br><br>두 개의 설명은 9498번 문제와 1038번 문제를 보면 된다.<br><br>Link : <a href="https://lrtk-coder.github.io/2020/12/08/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1008%EB%B2%88-%EB%AC%B8%EC%A0%9C/">https://lrtk-coder.github.io/2020/12/08/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1008%EB%B2%88-%EB%AC%B8%EC%A0%9C/</a></p><p>코드를 설명하자면,<br><br><code>&quot;3421&quot;[input()&gt;&quot;0&quot;::2]</code>은 입력받은 값이 0보다 크면 True가 나온다.<br><br>파이썬에서 True는 1로 통한다. 그래서 파이썬에선 <code>::2</code>의 조건을 통해서 index 1의 자리와 3의 자리를 출력한다.<br><br>그 후, <code>[input()&gt;&quot;0&quot;]</code>을 통해 인덱스 0의 자리를 가져올지, 1의 자리를 가져올지를 결정한다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-14681%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 10039번 문제</title>
      <link>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10039%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10039%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Wed, 30 Dec 2020 21:58:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-10039번-문제&quot;&gt;&lt;a href=&quot;#백준-10039번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 10039번 문제&quot;&gt;&lt;/a&gt;백준 10039번 문제&lt;/h2&gt;&lt;h3 id=&quot;평균-점수&quot;&gt;&lt;a href=&quot;#평균-점수&quot; c</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-10039번-문제"><a href="#백준-10039번-문제" class="headerlink" title="백준 10039번 문제"></a>백준 10039번 문제</h2><h3 id="평균-점수"><a href="#평균-점수" class="headerlink" title="평균 점수"></a>평균 점수</h3><h4 id="상현이가-가르치는-아이폰-앱-개발-수업의-수강생은-원섭-세희-상근-숭-강수이다"><a href="#상현이가-가르치는-아이폰-앱-개발-수업의-수강생은-원섭-세희-상근-숭-강수이다" class="headerlink" title="상현이가 가르치는 아이폰 앱 개발 수업의 수강생은 원섭, 세희, 상근, 숭, 강수이다."></a>상현이가 가르치는 아이폰 앱 개발 수업의 수강생은 원섭, 세희, 상근, 숭, 강수이다.</h4><h4 id="어제-이-수업의-기말고사가-있었고-상현이는-지금-학생들의-기말고사-시험지를-채점하고-있다-기말고사-점수가-40점-이상인-학생들은-그-점수-그대로-자신의-성적이-된다-하지만-40점-미만인-학생들은-보충학습을-듣는-조건을-수락하면-40점을-받게-된다-보충학습은-거부할-수-없기-때문에-40점-미만인-학생들은-항상-40점을-받게-된다"><a href="#어제-이-수업의-기말고사가-있었고-상현이는-지금-학생들의-기말고사-시험지를-채점하고-있다-기말고사-점수가-40점-이상인-학생들은-그-점수-그대로-자신의-성적이-된다-하지만-40점-미만인-학생들은-보충학습을-듣는-조건을-수락하면-40점을-받게-된다-보충학습은-거부할-수-없기-때문에-40점-미만인-학생들은-항상-40점을-받게-된다" class="headerlink" title="어제 이 수업의 기말고사가 있었고, 상현이는 지금 학생들의 기말고사 시험지를 채점하고 있다. 기말고사 점수가 40점 이상인 학생들은 그 점수 그대로 자신의 성적이 된다. 하지만, 40점 미만인 학생들은 보충학습을 듣는 #### 조건을 수락하면 40점을 받게 된다. 보충학습은 거부할 수 없기 때문에, 40점 미만인 학생들은 항상 40점을 받게 된다."></a>어제 이 수업의 기말고사가 있었고, 상현이는 지금 학생들의 기말고사 시험지를 채점하고 있다. 기말고사 점수가 40점 이상인 학생들은 그 점수 그대로 자신의 성적이 된다. 하지만, 40점 미만인 학생들은 보충학습을 듣는 #### 조건을 수락하면 40점을 받게 된다. 보충학습은 거부할 수 없기 때문에, 40점 미만인 학생들은 항상 40점을 받게 된다.</h4><h4 id="학생-5명의-점수가-주어졌을-때-평균-점수를-구하는-프로그램을-작성하시오"><a href="#학생-5명의-점수가-주어졌을-때-평균-점수를-구하는-프로그램을-작성하시오" class="headerlink" title="학생 5명의 점수가 주어졌을 때, 평균 점수를 구하는 프로그램을 작성하시오."></a>학생 5명의 점수가 주어졌을 때, 평균 점수를 구하는 프로그램을 작성하시오.</h4><p>Link : <a href="https://www.acmicpc.net/problem/2753">https://www.acmicpc.net/problem/2753</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">num = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">open</span>(<span class="number">0</span>))]</span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> num:</span><br><span class="line">    <span class="keyword">if</span> i &lt; <span class="number">40</span>: i = <span class="number">40</span></span><br><span class="line">    <span class="built_in">sum</span> += i</span><br><span class="line">    </span><br><span class="line">print(<span class="built_in">sum</span>//<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>저 코드는 c언어 스타일의 코드이다.<br><br>파이썬스럽게 수정하겠다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">eval</span>(<span class="string">&quot;+max(8,int(input())//5)&quot;</span>*<span class="number">5</span>))</span><br></pre></td></tr></table></figure><p>차근차근 설명하자면, <code>int(input())//5</code>으로 나누었다. 하지만 max 함수를 이용하여 나눈 값이 8보다 낮으면, 8로 출력하게 하였다.<br><br>생각 없이 보고 있다면, 왜 8인지를 모르는 사람이 있을 것이다. 이유는 <code>40/5 = 8</code> 이므로, 40보다 작으면 8보다 작다는 공식이 성립이 된다.</p><p>그 후, eval를 이용하기 위해 문자열로 만들었고, 평균 값을 구하기 위해 나눈 값 앞에 <code>+</code>를 해주었다. 또한 문자열은 곱하기를 해주면 반복함으로 5번 입력받아 5명의 점수를 입력하였다.<br></p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10039%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 2588번 문제</title>
      <link>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2588%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2588%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Wed, 30 Dec 2020 21:56:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-2588번-문제&quot;&gt;&lt;a href=&quot;#백준-2588번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 2588번 문제&quot;&gt;&lt;/a&gt;백준 2588번 문제&lt;/h2&gt;&lt;h3 id=&quot;곱셈&quot;&gt;&lt;a href=&quot;#곱셈&quot; class=&quot;head</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-2588번-문제"><a href="#백준-2588번-문제" class="headerlink" title="백준 2588번 문제"></a>백준 2588번 문제</h2><h3 id="곱셈"><a href="#곱셈" class="headerlink" title="곱셈"></a>곱셈</h3><h4 id="세-자리-수-×-세-자리-수-는-다음과-같은-과정을-통하여-이루어진다"><a href="#세-자리-수-×-세-자리-수-는-다음과-같은-과정을-통하여-이루어진다" class="headerlink" title="(세 자리 수) × (세 자리 수)는 다음과 같은 과정을 통하여 이루어진다."></a>(세 자리 수) × (세 자리 수)는 다음과 같은 과정을 통하여 이루어진다.</h4><p><img src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/images/f5NhGHVLM4Ix74DtJrwfC97KepPl27s%20(1).png"></p><h4 id="1-과-2-위치에-들어갈-세-자리-자연수가-주어질-때-3-4-5-6-위치에-들어갈-값을-구하는-프로그램을-작성하시오"><a href="#1-과-2-위치에-들어갈-세-자리-자연수가-주어질-때-3-4-5-6-위치에-들어갈-값을-구하는-프로그램을-작성하시오" class="headerlink" title="(1)과 (2)위치에 들어갈 세 자리 자연수가 주어질 때 (3), (4), (5), (6)위치에 들어갈 값을 구하는 프로그램을 작성하시오."></a>(1)과 (2)위치에 들어갈 세 자리 자연수가 주어질 때 (3), (4), (5), (6)위치에 들어갈 값을 구하는 프로그램을 작성하시오.</h4><p>Link : <a href="https://www.acmicpc.net/problem/2753">https://www.acmicpc.net/problem/2753</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">num1, num2 = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">open</span>(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">num3 = num1 * (num2 % <span class="number">10</span>)</span><br><span class="line">num4 = num1 * (num2 % <span class="number">100</span> // <span class="number">10</span>)</span><br><span class="line">num5 = num1 * (num2 // <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">f&#x27;<span class="subst">&#123;num3&#125;</span>\n<span class="subst">&#123;num4&#125;</span>\n<span class="subst">&#123;num5&#125;</span>\n<span class="subst">&#123;num1*num2&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p>이 문제는 사칙연산만 안다면 풀 수 있으므로 자세한 설명은 넘어가겠다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2588%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 2753번 문제</title>
      <link>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2753%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2753%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Wed, 30 Dec 2020 21:55:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-2753번-문제&quot;&gt;&lt;a href=&quot;#백준-2753번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 2753번 문제&quot;&gt;&lt;/a&gt;백준 2753번 문제&lt;/h2&gt;&lt;h3 id=&quot;윤년&quot;&gt;&lt;a href=&quot;#윤년&quot; class=&quot;head</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-2753번-문제"><a href="#백준-2753번-문제" class="headerlink" title="백준 2753번 문제"></a>백준 2753번 문제</h2><h3 id="윤년"><a href="#윤년" class="headerlink" title="윤년"></a>윤년</h3><h4 id="연도가-주어졌을-때-윤년이면-1-아니면-0을-출력하는-프로그램을-작성하시오"><a href="#연도가-주어졌을-때-윤년이면-1-아니면-0을-출력하는-프로그램을-작성하시오" class="headerlink" title="연도가 주어졌을 때, 윤년이면 1, 아니면 0을 출력하는 프로그램을 작성하시오."></a>연도가 주어졌을 때, 윤년이면 1, 아니면 0을 출력하는 프로그램을 작성하시오.</h4><h4 id="윤년은-연도가-4의-배수이면서-100의-배수가-아닐-때-또는-400의-배수일-때이다"><a href="#윤년은-연도가-4의-배수이면서-100의-배수가-아닐-때-또는-400의-배수일-때이다" class="headerlink" title="윤년은 연도가 4의 배수이면서, 100의 배수가 아닐 때 또는 400의 배수일 때이다."></a>윤년은 연도가 4의 배수이면서, 100의 배수가 아닐 때 또는 400의 배수일 때이다.</h4><h4 id="예를-들어-2012년은-4의-배수이면서-100의-배수가-아니라서-윤년이다-1900년은-100의-배수이고-400의-배수는-아니기-때문에-윤년이-아니다"><a href="#예를-들어-2012년은-4의-배수이면서-100의-배수가-아니라서-윤년이다-1900년은-100의-배수이고-400의-배수는-아니기-때문에-윤년이-아니다" class="headerlink" title="예를 들어, 2012년은 4의 배수이면서 100의 배수가 아니라서 윤년이다. 1900년은 100의 배수이고 400의 배수는 아니기 때문에 윤년이 아니다."></a>예를 들어, 2012년은 4의 배수이면서 100의 배수가 아니라서 윤년이다. 1900년은 100의 배수이고 400의 배수는 아니기 때문에 윤년이 아니다.</h4><h4 id="하지만-2000년은-400의-배수이기-때문에-윤년이다"><a href="#하지만-2000년은-400의-배수이기-때문에-윤년이다" class="headerlink" title="하지만, 2000년은 400의 배수이기 때문에 윤년이다."></a>하지만, 2000년은 400의 배수이기 때문에 윤년이다.</h4><p>Link : <a href="https://www.acmicpc.net/problem/2753">https://www.acmicpc.net/problem/2753</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> a%<span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> a%<span class="number">100</span> != <span class="number">0</span> <span class="keyword">or</span> a%<span class="number">400</span> == <span class="number">0</span>: print(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>: print(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2753%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 1330번 문제</title>
      <link>https://lrtk-coder.github.io/2020/12/24/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1330%EB%B2%88-%EB%AC%B9/</link>
      <guid>https://lrtk-coder.github.io/2020/12/24/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1330%EB%B2%88-%EB%AC%B9/</guid>
      <pubDate>Thu, 24 Dec 2020 03:58:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-1330번-문제&quot;&gt;&lt;a href=&quot;#백준-1330번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 1330번 문제&quot;&gt;&lt;/a&gt;백준 1330번 문제&lt;/h2&gt;&lt;h3 id=&quot;두-수-비교하기&quot;&gt;&lt;a href=&quot;#두-수-비교하기&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-1330번-문제"><a href="#백준-1330번-문제" class="headerlink" title="백준 1330번 문제"></a>백준 1330번 문제</h2><h3 id="두-수-비교하기"><a href="#두-수-비교하기" class="headerlink" title="두 수 비교하기"></a>두 수 비교하기</h3><h4 id="두-정수-A와-B가-주어졌을-때-A와-B를-비교하는-프로그램을-작성하시오"><a href="#두-정수-A와-B가-주어졌을-때-A와-B를-비교하는-프로그램을-작성하시오" class="headerlink" title="두 정수 A와 B가 주어졌을 때, A와 B를 비교하는 프로그램을 작성하시오."></a>두 정수 A와 B가 주어졌을 때, A와 B를 비교하는 프로그램을 작성하시오.</h4><p>Link : <a href="https://www.acmicpc.net/problem/1330">https://www.acmicpc.net/problem/1330</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">if</span> a &gt; b: print(<span class="string">&#x27;&gt;&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> a &lt; b: print(<span class="string">&#x27;&lt;&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>: print(<span class="string">&#x27;==&#x27;</span>)</span><br></pre></td></tr></table></figure><p>9498번 문제와 같이 조건문을 사용하여 문제 해결을 했다.<br><br>하지만 bool과 index을 조합하면 좀 더 python스럽게 만들 수 있다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a,b=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line">print([<span class="string">&#x27;&gt;&lt;&#x27;</span>[a&lt;b],<span class="string">&#x27;==&#x27;</span>][a==b])</span><br></pre></td></tr></table></figure><p>false는 0으로 표현이 가능하고, true는 1로 표현이 가능하다.<br><br>이것을 이용하여 index을 이용하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">2</span>&lt;<span class="number">2</span>, <span class="string">&#x27;12&#x27;</span>[<span class="number">2</span>&lt;<span class="number">1</span>])   <span class="comment"># 출력 : False 1</span></span><br><span class="line">print(<span class="number">2</span>&lt;<span class="number">3</span>, <span class="string">&#x27;12&#x27;</span>[<span class="number">2</span>&lt;<span class="number">3</span>])   <span class="comment"># 출력 : True 2</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/24/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1330%EB%B2%88-%EB%AC%B9/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Injection(SQLite)</title>
      <link>https://lrtk-coder.github.io/2020/12/24/SQL-Injection-SQLite/</link>
      <guid>https://lrtk-coder.github.io/2020/12/24/SQL-Injection-SQLite/</guid>
      <pubDate>Thu, 24 Dec 2020 03:55:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Low&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/post_img/SQL_injection_SQLite/1.png&quot; alt=&quot;사진1&quot;&gt;&lt;br&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/img/post_img/SQL_injection_SQLite/1.png" alt="사진1"><br>페이지를 보니, Mysql을 사용했던 SQL Injection 문제와 같은 페이지가 나왔다.<br><br>하지만 이번 문제는 Mysql이 아닌 SQLite을 사용하여 구현한 페이지으로 판단된다.<br><br>Error을 일으켜 어떤 오류 메시지를 출력하는지 확인하겠다.</p><p><img src="/img/post_img/SQL_injection_SQLite/2.png" alt="사진2"><br>Error 코드가 출력되었다.<br><br>검색하니 <code>General error: 1 unable to open database</code>이라는 뜻을 가진 에러 코드였다. 해석하자면, DB에 접속을 할 수 없다는 Error이다.</p><p>입력 : <code>&#39; or &#39;1&#39;=&#39;1</code><br><img src="/img/post_img/SQL_injection_SQLite/3.png" alt="사진3"><br>SQLite도 SQL Injection이 성공하였다. Mysql의 SQL Injection 문제처럼 테이블명, 컬럼명, 컬럼 갯수를 알아보겠다.<br><br>그리고, Mysql와 어떤 차이점이 있는지 알아보겠다.</p><p>입력 : <code>&#39; union select 1,2,3,4,5,6--</code><br><img src="/img/post_img/SQL_injection_SQLite/4.png" alt="사진4"><br>Union을 이용하여 컬럼의 수를 알아냈다. 여기서 알 수 있는 점은 SQLite에선 주석 처리를 <code>--</code>로 한다는 것이다.</p><p>입력 : <code>&#39; union select 1,name,3,4,5,6 from sqlite_master where type=&#39;table&#39;--</code> 또는 <code>&#39; union select 1,tbl_name,3,4,5,6 from sqlite_master</code><br><img src="/img/post_img/SQL_injection_SQLite/5.png" alt="사진5"><br>SQLite는 메타데이터가 저장된 곳이 sqlite_master에 저장이 된다. Mysql의 <code>information_schema</code>와 같다고 생각하면 된다.<br><br>where은 안써도 테이블명이 출력되긴 하지만, 다른 데이터도 출력됨으로 type이 table인 것만 출력하였다.<br></p><p>입력 : <code>&#39; union select 1,sql,3,4,5,6 from sqlite_master where tbl_name=&#39;movies&#39;--</code><br><img src="/img/post_img/SQL_injection_SQLite/6.png" alt="사진6"><br>SQLite는 별도의 컬럼 필드가 없기 때문에 생성할 때 만든 sql 쿼리를 담고 있는 sql필드를 이용하였다.<br></p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><p><code>functions_external.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">no_check</span>(<span class="params">$data</span>)</span>&#123;    </span><br><span class="line">    <span class="keyword">return</span> $data;       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p><code>sql_11.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">&quot;SELECT * FROM movies WHERE title LIKE &#x27;%&quot;</span> . sqli($title) . <span class="string">&quot;%&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure><p>검증을 거치지 않고 그대로 sql 쿼리에 입력데이터를 넣어주었다.</p><br><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>추후에 업데이트하겠다.</p><h3 id="Source-Code-1"><a href="#Source-Code-1" class="headerlink" title="Source Code"></a>Source Code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqli_check_4</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// Not bulletproof</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Replaces a single quote (&#x27;)</span></span><br><span class="line">    $input = str_replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&#x27;&#x27;&quot;</span>, $data);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> $input;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>이 문제에선 High Level은 없다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/24/SQL-Injection-SQLite/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Injection(Login Form/Hero)</title>
      <link>https://lrtk-coder.github.io/2020/12/24/SQL-Injection-Login-Form-Hero/</link>
      <guid>https://lrtk-coder.github.io/2020/12/24/SQL-Injection-Login-Form-Hero/</guid>
      <pubDate>Thu, 24 Dec 2020 02:06:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Low&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/post_img/SQL_Injection_Login_Hero/1.png&quot; alt=&quot;사진1&quot;&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/img/post_img/SQL_Injection_Login_Hero/1.png" alt="사진1"><br>로그인 페이지가 나왔다.<br><br>추측상으로 <code>select ~~~ from ~~~ where id = &#39;입력값&#39; and pw = &#39;입력값&#39;</code>으로 추측이 되기 때문에 <code>&#39;</code>를 입력하여 오류 메시지가 출력되는지 확인하였다.</p><p>ID 입력 : <code>&#39;</code><br>PW 입력 : <code>&#39;</code><br><img src="/img/post_img/SQL_Injection_Login_Hero/2.png" alt="사진2"><br>오류 메시지는 출력되지 않았다.<br><br>일단 추측으로 생각한 sql문에 SQL Injection을 넣어보겠다.</p><p>ID 입력 : <code>&#39; or &#39;1&#39; = &#39;1&#39;#</code><br>PW 입력 : <code>aa</code><br><img src="/img/post_img/SQL_Injection_Login_Hero/3.png" alt="사진3"><br>SQL Injection이 성공하였고, Neo라는 사람으로 로그인되었다.<br><br>DB에서 가장 첫번째로 있는 사람이 Neo인 듯 하다.<br><br>이제 Union Based Injection을 시도하여, 데이터베이스의 컬럼 갯수를 알아보겠다.</p><p>ID 입력 : <code>&#39; union select 1,2,3,4#</code><br>PW 입력 : <code>aa</code><br><img src="/img/post_img/SQL_Injection_Login_Hero/4.png" alt="사진4"><br>첫 시도에 성공하였다.<br><br>1번은 Number, 2번은 ID, 3번은 PW로 생각하고 4번째부터 시도했는데 컬럼의 갯수가 4개였다.<br><br>아마 4번째는 secret이 저장된 컬럼인 듯 하다.</p><p>ID 입력 : <code>&#39; union select 1,table_name,3,4 from information_schema.tables where table_schema = database() limit 1,1#</code><br>PW 입력 : <code>aa</code><br><img src="/img/post_img/SQL_Injection_Login_Hero/5.png" alt="사진5"><br>DB 메타데이터를 이용하여 테이블을 찾아보았다.<br><br>현재의 페이지에는 하나의 테이블명만 가져올 수 있다. 그래서 <code>limit</code>을 사용하여 테이블명을 파싱하였다.<br></p><h3 id="SQL-Limit"><a href="#SQL-Limit" class="headerlink" title="SQL - Limit"></a>SQL - Limit</h3><p>limit x, y<br>x -&gt; 시작점<br>y -&gt; 출력할 갯수</p><p>x번째부터 시작해서 y개만 출력<br><br>여기서 주의할 점은 맨 앞 index는 0번부터 시작한다는 점이다.</p><p>두번째 테이블명이 <code>Heroes</code>였다. 문제의 제목이 <code>hero</code>가 들어가는 것을 생각하니 연관이 있을거라 생각하여 컬럼명을 조회했다.<br></p><p>ID 입력 : <code>&#39; union select 1,column_name,3,4 from information_schema.columns where table_name=&#39;heroes&#39; limit 0,1#</code><br>PW 입력 : <code>aa</code><br><img src="/img/post_img/SQL_Injection_Login_Hero/6.png" alt="사진6"><br><img src="/img/post_img/SQL_Injection_Login_Hero/7.png" alt="사진7"><br><img src="/img/post_img/SQL_Injection_Login_Hero/8.png" alt="사진8"><br><img src="/img/post_img/SQL_Injection_Login_Hero/9.png" alt="사진9"><br>컬럼명을 보니 <code>heores</code> 테이블에 데이터가 저장이 되는 것 같다.<br><br>이제 <code>ID</code> 컬럼과 <code>Login</code> 컬럼을 확인하여 ID값을 찾아보겠다.<br></p><p>ID 입력 : <code>&#39; union select 1,id,3,4 from heroes limit 0,1#</code><br>PW 입력 : <code>aa</code><br><img src="/img/post_img/SQL_Injection_Login_Hero/10.png" alt="사진10"><br><code>ID</code> 컬럼은 데이터의 index을 저장하는 컬럼인 것으로 보인다.</p><p>ID 입력 : <code>&#39; union select 1,login,3,4 from heroes limit 0,1#</code><br>PW 입력 : <code>aa</code><br><img src="/img/post_img/SQL_Injection_Login_Hero/11.png" alt="사진11"><br><code>Login</code> 컬럼이 ID 값을 저장한 컬럼인 것을 확실하게 검증하였다.<br><br>이제 반복하여, ID 값을 뽑아보겠다.</p><p><strong>[출력된 ID값]</strong><br>Neo, Alice, Thor, Wolverine, Johnny, Seline</p><p>출력된 ID 값을 보니, 누가 Superhero인지를 모르겠다.<br><br>이제 <code>Secret</code> 컬럼을 출력하여, Superhero을 찾아보겠다.</p><p>ID 입력 : <code>&#39; union select 1,secret,3,4 from heroes limit 4,1#</code><br>PW 입력 : <code>aa</code><br><img src="/img/post_img/SQL_Injection_Login_Hero/12.png" alt="사진12"><br>확인하니 5번째 ID값이 Superhero였다. 즉, <code>Johnny</code>가 슈퍼히어로 고스트라이더였던 것이다.</p><br><h2 id="Medium-amp-High"><a href="#Medium-amp-High" class="headerlink" title="Medium &amp; High"></a>Medium &amp; High</h2><p>추후에 업데이트하겠습니다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/24/SQL-Injection-Login-Form-Hero/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Injection(Captcha)</title>
      <link>https://lrtk-coder.github.io/2020/12/24/SQL-Injection-Captcha/</link>
      <guid>https://lrtk-coder.github.io/2020/12/24/SQL-Injection-Captcha/</guid>
      <pubDate>Thu, 24 Dec 2020 02:01:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Low&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/post_img/SQL_Injection_Captcha/1.png&quot; alt=&quot;사진1&quot;&gt;&lt;br</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/img/post_img/SQL_Injection_Captcha/1.png" alt="사진1"><br>페이지를 들어갔더니, Captcha를 입력하라는 form이 있어서 입력해보았다.</p><p><img src="/img/post_img/SQL_Injection_Captcha/2.png" alt="사진2"><br>영화 데이터를 조회할 수 있는 페이지가 나왔고, 오류가 생기면 출력을 하는지 확인하기 위해서 <code>&#39;</code>를 입력하였다.</p><p><img src="/img/post_img/SQL_Injection_Captcha/3.png" alt="사진3"><br>오류 메시지가 출력되는 것을 확인할 수 있었다.</p><p><img src="/img/post_img/SQL_Injection_Captcha/4.png" alt="사진4"><br>추가적으로 <code>&#39; or &#39;1&#39;=&#39;1</code>를 입력하여 Injection이 되는 지 확인했는데 잘 되었다.<br><br>전의 문제와 유사하여, 더 진행하지 않겠다.</p><p>또한 소스코드도 같아서 전에 풀이한 문제 링크를 참조하겠다.<br><br>Link : <a href="https://lrtk-coder.github.io/2020/12/18/SQL-Injection-Get-Search/">https://lrtk-coder.github.io/2020/12/18/SQL-Injection-Get-Search/</a></p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/24/SQL-Injection-Captcha/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Injection(AJAX, JSON, JQUERY)</title>
      <link>https://lrtk-coder.github.io/2020/12/20/SQL-Injection-AJAX-JSON-JQUERY/</link>
      <guid>https://lrtk-coder.github.io/2020/12/20/SQL-Injection-AJAX-JSON-JQUERY/</guid>
      <pubDate>Sun, 20 Dec 2020 11:11:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Low&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/post_img/SQL_Injection_AJAX_JSON_JQUERY/1.gif&quot; alt=</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/img/post_img/SQL_Injection_AJAX_JSON_JQUERY/1.gif" alt="사진1"><br>보시는 것과 같이 첫번째 SQL Injection과 같은 문제가 나왔다.<br><br>차이점이라면 자바스크립트를 사용하여 서버로 넘겨서 데이터를 받았다는 것이다.<br></p><p>개발자 도구를 이용하여 자바스크립트를 확인하겠다.<br></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#title&quot;</span>).keyup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// Searches for a movie title</span></span><br><span class="line">    <span class="keyword">var</span> search = &#123;<span class="attr">title</span>: $(<span class="string">&quot;#title&quot;</span>).val()&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// AJAX call</span></span><br><span class="line">    $.getJSON(<span class="string">&quot;sqli_10-2.php&quot;</span>, search, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">        init_table();</span><br><span class="line">        <span class="comment">// Constructs the table from the JSON data</span></span><br><span class="line">        <span class="keyword">var</span> total = <span class="number">0</span>;</span><br><span class="line">        $.each(data, <span class="function"><span class="keyword">function</span>(<span class="params">key, val</span>)</span>&#123;</span><br><span class="line">            total++;</span><br><span class="line">            $(<span class="string">&quot;#table_yellow tr:last&quot;</span>).after(<span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span> + val.title + <span class="string">&quot;&lt;/td&gt;&lt;td align=&#x27;center&#x27;&gt;&quot;</span> + val.release_year + <span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span> + val.main_character + <span class="string">&quot;&lt;/td&gt;&lt;td align=&#x27;center&#x27;&gt;&quot;</span> + val.genre + <span class="string">&quot;&lt;/td&gt;&lt;td align=&#x27;center&#x27;&gt;&lt;a href=&#x27;http://www.imdb.com/title/&quot;</span> + val.imdb + <span class="string">&quot;&#x27; target=&#x27;_blank&#x27;&gt;Link&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// Empty result</span></span><br><span class="line">        <span class="keyword">if</span> (total == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $(<span class="string">&quot;#table_yellow tr:last&quot;</span>).after(<span class="string">&quot;&lt;tr height=&#x27;30&#x27;&gt;&lt;td colspan=&#x27;5&#x27; width=&#x27;580&#x27;&gt;No movies were found!&lt;/td&gt;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init_table</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">&quot;#table_yellow&quot;</span>).html(<span class="string">&quot;&lt;tr height=&#x27;30&#x27; bgcolor=&#x27;#ffb717&#x27; align=&#x27;center&#x27;&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;td width=&#x27;200&#x27;&gt;&lt;b&gt;Title&lt;/b&gt;&lt;/td&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;td width=&#x27;80&#x27;&gt;&lt;b&gt;Release&lt;/b&gt;&lt;/td&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;td width=&#x27;140&#x27;&gt;&lt;b&gt;Character&lt;/b&gt;&lt;/td&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;td width=&#x27;80&#x27;&gt;&lt;b&gt;Genre&lt;/b&gt;&lt;/td&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;td width=&#x27;80&#x27;&gt;&lt;b&gt;IMDb&lt;/b&gt;&lt;/td&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;/tr&gt;&quot;</span></span><br><span class="line">            );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>위와 같이 자바스크립트의 JQUERY를 이용하여 입력한 데이터를 받았다.<br><br>그 후 AJAX로 데이터를 <code>sqli_10-2.php</code>로 넘겼다.<br><br>한번 <code>sqli_10-2.php</code>에 Injection 코드를 넘겨보겠다.</p><p><img src="/img/post_img/SQL_Injection_AJAX_JSON_JQUERY/2.png" alt="사진2"><br><code>sqli_10-2.php</code>에게 받은 데이터는 JSON 형식으로 영화 데이터였다.<br></p><p>이와 같이 꼭 HTML의 Form만 아니라 다양한 입력 방식을 통해서 Injection 가능하다는 것을 배울 수 있었다.</p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><p><code>functions_external.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">no_check</span>(<span class="params">$data</span>)</span>&#123;    </span><br><span class="line">    <span class="keyword">return</span> $data;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p><code>sqli_10_2.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_GET[<span class="string">&quot;title&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Retrieves the movie title</span></span><br><span class="line">    $title = $_GET[<span class="string">&quot;title&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Constructs the query</span></span><br><span class="line">    $sql = <span class="string">&quot;SELECT * FROM movies WHERE title LIKE &#x27;%&quot;</span> . sqli($title) . <span class="string">&quot;%&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Queries the database</span></span><br><span class="line">    $recordset = mysql_query($sql, $link);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>위와 같이 입력 데이터에 아무 검증 없이 sql문에 넣는 것을 확인 할 수 있었다.</p><br><h2 id="Medium-amp-High"><a href="#Medium-amp-High" class="headerlink" title="Medium &amp; High"></a>Medium &amp; High</h2><p>2문제는 추후에 우회 방법을 찾는대로 업로드하겠다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/20/SQL-Injection-AJAX-JSON-JQUERY/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Injection(Get&amp;Post/Select)</title>
      <link>https://lrtk-coder.github.io/2020/12/20/SQL-Injection-Get-Post-Select/</link>
      <guid>https://lrtk-coder.github.io/2020/12/20/SQL-Injection-Get-Post-Select/</guid>
      <pubDate>Sun, 20 Dec 2020 08:13:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Low&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/post_img/SQL_Injection_Select/1.png&quot; alt=&quot;사진1&quot;&gt;&lt;br&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/img/post_img/SQL_Injection_Select/1.png" alt="사진1"><br>이전 문제인 Search 페이지와 유사한 페이지가 나왔다.<br><br>차이점은 사용자 직접 입력을 하지 않고, HTML 태그의 Option 태그를 이용하여 선택하는 방식으로 변경이 되었다.</p><p>나는 개발자 도구와 URL 창에서 서버에 보내주는 movie 변수의 값을 변경하여 SQL Injection하였다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;movie&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>G.I. Joe: Retaliation<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>Iron Man<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>Man of Steel<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>Terminator Salvation<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span>&gt;</span>The Amazing Spider-Man<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;6&quot;</span>&gt;</span>The Cabin in the Woods<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;7&quot;</span>&gt;</span>The Dark Knight Rises<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;8&quot;</span>&gt;</span>The Fast and the Furious<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;9&quot;</span>&gt;</span>The Incredible Hulk<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>&gt;</span>World War Z<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>개발자 도구를 이용하여 option 태크의 value 속성을 변경하였다.<br><br><code>&lt;option value=&quot;&#39;&quot;&gt;G.I. Joe: Retaliation&lt;/option&gt;</code><br></p><p>그 후, 서버로 보내서 확인하니 Error 메시지가 출력되는 것을 확인할 수 있었다.<br><img src="/img/post_img/SQL_Injection_Select/2.png" alt="사진2"></p><p>2번째 방법인 URL 창을 이용하는 방법은 영화를 선택한 후 서버로 보내고 난 후의 URL의 파라미터를 이용하여 Injection을 하였다.<br><br>정상 : <code>/bWAPP/sqli_2.php?movie=1&amp;action=go</code><br><br>Injection : <code>/bWAPP/sqli_2.php?movie=1 or 1=1&amp;action=go</code></p><p>여기서 의문이 생길 것이다. 왜 <code>&#39;</code>를 입력하지 않는지<br><br>그 이유는 이 페이지에선 Id값 즉, 정수를 입력받아 처리하기 때문에 ‘’이 필요가 없다.<br><br>그래서 Injecion할 때 <code>&#39;</code>를 쓰지 않았다.</p><p><img src="/img/post_img/SQL_Injection_Select/3.png" alt="사진3"><br>위의 Injection이 오류 없이 실행이 된 모습이다.<br><br>하지만 출력된 데이터는 단 하나 뿐이다. 추측 상으로 단 하나의 데이터만 출력되겠끔 설계되어 있는 것 같다.<br></p><p>만약 여기에 Union 기반 Injection을 시도한다면, 맨 아래에 출력되기 때문에 앞에 출력된 데이터가 출력이 안되게 해야한다.<br><br>방법은 간단하다. <code>1=1</code>이라는 참을 거짓으로 만드면 된다. 물론 조건인 <code>or</code>를 <code>and</code>로 변경하여 해당 값 자체를 거짓으로 만들어야한다.</p><p>입력 : <code>/bWAPP/sqli_2.php?movie=1 and 1=0 union select 1,2,3,4,5,6,7</code><br><img src="/img/post_img/SQL_Injection_Select/4.png" alt="사진4"></p><p>그 이후에는 SQL Injection Search 문제를 참고하면 된다.</p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><p><code>functions_external.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">no_check</span>(<span class="params">$data</span>)</span>&#123;    </span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p><code>sqli_2.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&quot;movie&quot;</span>]))</span><br><span class="line">&#123;   </span><br><span class="line"></span><br><span class="line">    $id = $_GET[<span class="string">&quot;movie&quot;</span>];</span><br><span class="line"></span><br><span class="line">    $sql = <span class="string">&quot;SELECT * FROM movies&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If the user selects a movie</span></span><br><span class="line">    <span class="keyword">if</span>($id)        </span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $sql.= <span class="string">&quot; WHERE id = &quot;</span> . sqli($id);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $recordset = mysql_query($sql, $link);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$sql.= &quot; WHERE id = &quot; . sqli($id);</code>를 보면 우리가 입력 받은 값을 아무 검증 없이 sql문에 넣는 모습를 볼 수 있다.</p><br><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqli_check_2</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mysql_real_escape_string($data);   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>mysql_real_escape_string 함수의 우회 방법은 찾는대로 업로드하겠습니다.</p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>이 문제는 High 문제가 없다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/20/SQL-Injection-Get-Post-Select/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Injection(Get&amp;Post/Search)</title>
      <link>https://lrtk-coder.github.io/2020/12/17/SQL-Injection-Get-Search/</link>
      <guid>https://lrtk-coder.github.io/2020/12/17/SQL-Injection-Get-Search/</guid>
      <pubDate>Thu, 17 Dec 2020 22:03:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Low&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/post_img/SQL_Injection_Get_Search/1.png&quot; alt=&quot;사진1&quot;&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/img/post_img/SQL_Injection_Get_Search/1.png" alt="사진1"><br>페이지를 보니 영화를 검색하는 페이지인 것 같다.<br><br>어떤 영화가 있는지 잘 모르겠어서 Form에 a만 입력하여 검색을 해보았다.</p><p><img src="/img/post_img/SQL_Injection_Get_Search/2.png" alt="사진2"><br>영화 제목에 a가 들어간 영화가 출력이 되었다.<br><br>SQL에 에러를 일으켜서 어떤 에러가 일어나는지 확인을 하였다.</p><p>입력값 : <code>&#39;</code><br><img src="/img/post_img/SQL_Injection_Get_Search/3.png" alt="사진3"><br>현재 사용 중인 DB는 Mysql인 것으로 확인할 수 있었다.<br><br>이와 같이 에러를 발생시켜서 에러 메시지로부터 DB 정보를 얻어내는 기법을 <strong>Error Based Injection</strong>이라고 한다.</p><p>또한 추측상으로 <code>select ~~~ from ~~~ where &#39;입력값&#39;;</code>으로 이루어진 sql문이라고 추측을 해본다. 그래서 입력을 <code>&#39;</code>을 했을 때 오류가 뜬 이유가 <code>select ~~~ from ~~~ where &#39;&#39;&#39;;</code>으로 되어서 오류가 출력된 것으로 생각을 한다.</p><p>Error Based Injection으로도 볼 수 있는 <code>&#39;1&#39;=&#39;1&#39;</code>을 이용하여 모든 데이터를 출력하겠다.<br></p><p>입력값 : <code>&#39; or &#39;1&#39;=&#39;1</code><br><img src="/img/post_img/SQL_Injection_Get_Search/4.png" alt="사진4"><br>잘 먹히는 것을 볼 수 있다.<br><br>다른 SQL Injection 공격 방법인 <strong>Union Based SQL Injecion</strong>를 시도하여 영화의 데이터가 저장된 테이블에 몇 개의 컬럼이 있는지 확인하겠다.</p><p>입력값 : <code>&#39; union select 1,2,3,4,5,6,7#</code><br><img src="/img/post_img/SQL_Injection_Get_Search/5.png" alt="사진5"><br>페에지에 나온 컬럼(Title, Release, Character, Genre, IMDb) 5개 이상으로 생각하여 1<del>5부터 시작하였고, 1</del>7 때에 성공하였다.<br><br>테이블 제일 밑에 Union에 의해 합쳐서 출력된 1~7을 보니 1은 나타나지 않고 2부터 나타났다. 또한 7도 나타나지 않았다.<br><br>아마 1번째 컬럼은 ID 컬럼으로 추측이 되고, 7번째 컬럼은 확인을 해봐야하겠다.</p><p>입력값 : <code>&#39; union select 1,table_name,3,4,5,6,7 from information_schema.tables#</code><br><img src="/img/post_img/SQL_Injection_Get_Search/6.png" alt="사진6"><br>DB의 메타데이터를 통해 DB에 저장된 테이블명을 출력하였다.<br><br>관련이 있어보이는 movies이라는 테이블을 찾을 수 있었다. 이 테이블의 컬럼명을 얻어보겠다.</p><p>입력값 : <code>&#39; union select 1,column_name,3,4,5,6,7 from information_schema.columns where table_name=&#39;movies&#39;#</code><br><img src="/img/post_img/SQL_Injection_Get_Search/7.png" alt="사진7"><br>확인해보니 7번째 컬럼은 tickets_stock이라는 이름을 가진 컬럼으로 알 수 있었다.</p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><p><code>functions_external.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">no_check</span>(<span class="params">$data</span>)</span>&#123;    </span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p><code>sqli_1.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&quot;title&quot;</span>]))&#123;</span><br><span class="line">    $title = $_GET[<span class="string">&quot;title&quot;</span>];</span><br><span class="line">    </span><br><span class="line">    $sql = <span class="string">&quot;SELECT * FROM movies WHERE title LIKE &#x27;%&quot;</span> . sqli($title) . <span class="string">&quot;%&#x27;&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    $recordset = mysql_query($sql, $link);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!$recordset)&#123;</span><br><span class="line">        <span class="comment">// die(&quot;Error: &quot; . mysql_error());</span></span><br><span class="line">        &lt;tr height=<span class="string">&quot;50&quot;</span>&gt;</span><br><span class="line">            &lt;td colspan=<span class="string">&quot;5&quot;</span> width=<span class="string">&quot;580&quot;</span>&gt;<span class="meta">&lt;?php</span> <span class="keyword">die</span>(<span class="string">&quot;Error: &quot;</span> . mysql_error()); <span class="meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>입력 데이터에 대한 검증이 없다. 또한 Mysql에 Error가 발생하면 그대로 출력하는 코드도 있다.</p><br><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><h3 id="Source-Code-1"><a href="#Source-Code-1" class="headerlink" title="Source Code"></a>Source Code</h3><p><code>Medium</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqli_check_1</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> addslashes($data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p><code>High</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqli_check_2</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mysql_real_escape_string($data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>addslashes 함수는 iFrame Injection에서 설명을 보면 된다.<br></p><p>mysql_real_escape_string 함수는 PHP에서 SQL Injection 공격 등을 방어하기 위하여 특수 문자를 치환하기 위한 함수이다.</p><p><strong>[치환되는 문자]</strong></p><ul><li>\x00</li><li>\n</li><li>\r</li><li>\</li><li>‘, “</li><li>\x1a</li></ul><p>위 문자들은 문자 앞에 \를 붙여서 해당 문자가 작동하지 않도록 치환해준다.</p><p>이 두가지 함수를 우회하는 방법이 인터넷에서 몇가지가 있는데 시도를 해보니, 모두 실패하였다.<br><br>이 부분은 추후에 보강하겠다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/17/SQL-Injection-Get-Search/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SSI Injection</title>
      <link>https://lrtk-coder.github.io/2020/12/16/SSI-Injection/</link>
      <guid>https://lrtk-coder.github.io/2020/12/16/SSI-Injection/</guid>
      <pubDate>Wed, 16 Dec 2020 01:48:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Server-Side-Includes이란&quot;&gt;&lt;a href=&quot;#Server-Side-Includes이란&quot; class=&quot;headerlink&quot; title=&quot;Server Side Includes이란?&quot;&gt;&lt;/a&gt;Server Side Include</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Server-Side-Includes이란"><a href="#Server-Side-Includes이란" class="headerlink" title="Server Side Includes이란?"></a>Server Side Includes이란?</h2><p>HTML 페이지에 사용하는 지시어로, 페이지를 서비스할 때 서버가 처리한다.<br><br>SSI를 사용하면 CGI 프로그램이나 다른 동적인 기술로 페이지 전체를 만들어서 서비스하지 않고도 HTML 페이지에 동적으로 생성한 내용을 추가할 수 있다.</p><p>즉, SSI을 이용하여 악성행위를 Injection할 경우 SSI은 그 지시를 받고 동적으로 페이지를 생성할 것이다.</p><p>HTML로만 작성된 웹문서와는 달리 SSI코드가 들어있는 파일의 이름은 <code>.shtml</code>이라는 확장자를 가진다.</p><p><img src="/img/post_img/SSI_Injection/1.png" alt="사진1"><br>* CGI : Web 서버에서 외부 프로그램과 통신하는 방법을 정의하는 스크립트 또는 프로그램</p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/img/post_img/SSI_Injection/2.png" alt="사진2"><br>페이지를 보니 BeeBox 웹서버의 IP 주소를 조회하는 기능을 가진 페이지인 것 같다.<br><br>First Name과 Last Name에 test, test를 입력하여 어떻게 결과가 나오는 확인하였다.</p><p><img src="/img/post_img/SSI_Injection/3.png" alt="사진3"><br>Form에 입력했던 값이 그대로 나오고, 밑에 BeeBox 웹서버의 IP 주소이 출력되었다.<br>또한 출력된 페이지는 확장자가 <code>ssii.shtml</code>의 이름을 가진 SSI 파일으로 확인되었다.</p><p>Form에 SSI 지시어와 HTML 태그를 입력해보았다.</p><p>First Name : <code>&lt;h1&gt;test&lt;/h1&gt;</code><br><br>Last Name : <code>test</code><br><img src="/img/post_img/SSI_Injection/4.png" alt="사진4"></p><p>HTML 태그가 그대로 적용이 된 것을 확인할 수 있었다.<br>이번엔 SSI 지시어를 사용하여 Injection 하겠다.</p><p>First Name : <code>&lt;!--#exec cmd=&quot;ls&quot; --&gt;</code><br><br>Last Name : <code>test</code><br><img src="/img/post_img/SSI_Injection/5.png" alt="사진5"></p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><p><code>functions_external.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">no_check</span>(<span class="params">$data</span>)</span>&#123;    </span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p><code>ssii.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($firstname == <span class="string">&quot;&quot;</span> <span class="keyword">or</span> $lastname == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">        $field_empty = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $line = <span class="string">&#x27;&lt;p&gt;Hello &#x27;</span> . $firstname . <span class="string">&#x27; &#x27;</span> . $lastname . <span class="string">&#x27;,&lt;/p&gt;&lt;p&gt;Your IP address is:&#x27;</span> . <span class="string">&#x27;&lt;/p&gt;&lt;h1&gt;&lt;!--#echo var=&quot;REMOTE_ADDR&quot; --&gt;&lt;/h1&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Writes a new line to the file</span></span><br><span class="line">    $fp = fopen(<span class="string">&quot;ssii.shtml&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    fputs($fp, $line, <span class="number">200</span>);</span><br><span class="line">    fclose($fp);</span><br><span class="line"></span><br><span class="line">    header(<span class="string">&quot;Location: ssii.shtml&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>빈 입력값을 검증하는 항목은 있지만, 입력값은 그대로 출력한다.</p><br><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>Low Level에서 확인해봤던 HTML 태그를 입력해봤더니, 그대로 출력이 되었다.<br><br><code>&lt;, &gt;, /</code> 3개의 특수 문자 검증이 없을 것으로 추측이 된다.</p><p><code>&quot;, &#39;</code>도 검증 없이 출력이 되는지 확인하겠다.<br><br>First Name : <code>&lt;!--#exec cmd=&quot;ls&quot; --&gt;</code><br><br>Last Name : <code>test</code></p><p>결과는 막힌 것으로 확인되었다.<br><br> <code>&quot;, &#39;</code>을 검사하여, 치환된 것으로 추측이 된다.</p><p>First Name : <code>&lt;!--#exec cmd=ls --&gt;</code><br><br>Last Name : <code>test</code><br><img src="img/post_img/SSI_Injection/6.png" alt="사진6"></p><p><code>&quot;, &#39;</code>을 제거 후 출력 결과를 보니 SSI 지시어가 잘 실행되는 것을 확인 할 수 있었다.</p><h3 id="Source-Code-1"><a href="#Source-Code-1" class="headerlink" title="Source Code"></a>Source Code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xss_check_4</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// addslashes - returns a string with backslashes before characters that need to be quoted in database queries etc.</span></span><br><span class="line">    <span class="comment">// These characters are single quote (&#x27;), double quote (&quot;), backslash (\) and NUL (the NULL byte).</span></span><br><span class="line">    <span class="comment">// Do NOT use this for XSS or HTML validations!!!</span></span><br><span class="line">    <span class="keyword">return</span> addslashes($data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>addslashes 함수는 iFrame Injection 문제에서 확인할 수 있다.<br><br>Link : <a href="http://lrtk-github.io/2020/12/09/iFrame-Injection-1/">http://lrtk-github.io/2020/12/09/iFrame-Injection-1/</a></p><br><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xss_check_3</span>(<span class="params">$data, $encoding = <span class="string">&quot;UTF-8&quot;</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// htmlspecialchars - converts special characters to HTML entities    </span></span><br><span class="line">    <span class="comment">// &#x27;&amp;&#x27; (ampersand) becomes &#x27;&amp;amp;&#x27; </span></span><br><span class="line">    <span class="comment">// &#x27;&quot;&#x27; (double quote) becomes &#x27;&amp;quot;&#x27; when ENT_NOQUOTES is not set</span></span><br><span class="line">    <span class="comment">// &quot;&#x27;&quot; (single quote) becomes &#x27;&amp;#039;&#x27; (or &amp;apos;) only when ENT_QUOTES is set</span></span><br><span class="line">    <span class="comment">// &#x27;&lt;&#x27; (less than) becomes &#x27;&amp;lt;&#x27;</span></span><br><span class="line">    <span class="comment">// &#x27;&gt;&#x27; (greater than) becomes &#x27;&amp;gt;&#x27;  </span></span><br><span class="line">    <span class="keyword">return</span> htmlspecialchars($data, ENT_QUOTES, $encoding);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>htmlspecialchars 함수도 iFrame Injection 문제에서 확인할 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/16/SSI-Injection/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>PHP Code Injection</title>
      <link>https://lrtk-coder.github.io/2020/12/15/PHP-Code-Injection/</link>
      <guid>https://lrtk-coder.github.io/2020/12/15/PHP-Code-Injection/</guid>
      <pubDate>Tue, 15 Dec 2020 22:43:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;PHP-Code-Injection이란&quot;&gt;&lt;a href=&quot;#PHP-Code-Injection이란&quot; class=&quot;headerlink&quot; title=&quot;PHP Code Injection이란?&quot;&gt;&lt;/a&gt;PHP Code Injection이란?&lt;/h2</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="PHP-Code-Injection이란"><a href="#PHP-Code-Injection이란" class="headerlink" title="PHP Code Injection이란?"></a>PHP Code Injection이란?</h2><p>웹 어플리케이션을 통해 PHP 코드를 입력하면, 웹 어플리케이션의 입력을 정상적으로 인식하여 개발자가 의도와는 다르게 내부에 있는 PHP 코드를 실행하는 취약점이다.<br></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/img/post_img/PHP_Code_Injection/1.png" alt="사진1"><br>페이지를 들어가니 <code>This is just a test page, reflecting back your message...</code>이라는 문구를 확인 할 수 있었다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is just a test page, reflecting back your </span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/bWAPP/phpi.php?message=test&quot;</span>&gt;</span>message<span class="tag">&lt;/<span class="name">a</span>&gt;</span>...</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>message를 자세히보니 a태그로 되어있는 것을 확인할 수 있었다.<br></p><p><img src="/img/post_img/PHP_Code_Injection/2.png" alt="사진2"><br>클릭하여 넘어가보니, 서버에 message이라는 변수에 test를 넘어갔다.<br><br>페이지에 그대로 <code>test</code>라는 문구가 써져있는 것을 확인할 수 있었다.</p><p>저는 message에 php 내장 함수를 넘겨서 어떻게 작동하는지 확인해보았다.<br><code>http://localhost/bWAPP/phpi.php?message=exec(id)</code><br><img src="/img/post_img/PHP_Code_Injection/3.png" alt="사진3"></p><p>실행이 잘되는 것을 확인할 수 있었다.</p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">&quot;message&quot;</span>]))&#123;</span><br><span class="line">    <span class="comment">// If the security level is not MEDIUM or HIGH</span></span><br><span class="line">    <span class="keyword">if</span>($_COOKIE[<span class="string">&quot;security_level&quot;</span>] != <span class="string">&quot;1&quot;</span> &amp;&amp; $_COOKIE[<span class="string">&quot;security_level&quot;</span>] != <span class="string">&quot;2&quot;</span>)&#123;</span><br><span class="line">        &lt;p&gt;&lt;i&gt;<span class="meta">&lt;?php</span> @<span class="keyword">eval</span> (<span class="string">&quot;echo &quot;</span> . $_REQUEST[<span class="string">&quot;message&quot;</span>] . <span class="string">&quot;;&quot;</span>);<span class="meta">?&gt;</span>&lt;/i&gt;&lt;/p&gt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>코드를 보니 message 변수에 넘기고, 아무 검증 없이 eval 함수를 이용하여 바로 출력하여 페이지에 반영하는 것을 볼 수 있다.</p><br><h2 id="Medium-amp-High"><a href="#Medium-amp-High" class="headerlink" title="Medium &amp; High"></a>Medium &amp; High</h2><p><img src="/img/post_img/PHP_Code_Injection/4.png" alt="사진4"></p><p>이번엔 검증이 추가가 되었는지 Low Level에서 했던 방법이 안된다.<br>도통 모르겠어서 소스코드를 확인해보았다.</p><h3 id="Source-Code-1"><a href="#Source-Code-1" class="headerlink" title="Source Code"></a>Source Code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// If the security level is MEDIUM or HIGH</span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    &lt;p&gt;&lt;i&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> htmlspecialchars($_REQUEST[<span class="string">&quot;message&quot;</span>], ENT_QUOTES, <span class="string">&quot;UTF-8&quot;</span>);;<span class="meta">?&gt;</span>&lt;/i&gt;&lt;/p&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>확인해보니 Medium &amp; High Level 같은 방어 방법으로 해결을 하였다.<br><br>바로 htmlspecialchars 함수를 이용하여 특수 문자를 필터링하여 Injection을 방어하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/15/PHP-Code-Injection/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>OS Injection Blind</title>
      <link>https://lrtk-coder.github.io/2020/12/12/OS-Injection-Blind/</link>
      <guid>https://lrtk-coder.github.io/2020/12/12/OS-Injection-Blind/</guid>
      <pubDate>Sat, 12 Dec 2020 19:29:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Blind-Command-Injection이란&quot;&gt;&lt;a href=&quot;#Blind-Command-Injection이란&quot; class=&quot;headerlink&quot; title=&quot;Blind Command Injection이란?&quot;&gt;&lt;/a&gt;Blind Comm</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Blind-Command-Injection이란"><a href="#Blind-Command-Injection이란" class="headerlink" title="Blind Command Injection이란?"></a>Blind Command Injection이란?</h2><p>시스템 명령의 수행 결과 값이 없이 수행하는 Injection 공격이다.</p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/img/post_img/OS_Command_Injection_Blind/1.png"><br>Form에 IP나 도메인을 입력하면 Ping을 보내는 페이지인 것 같다.<br><br>DNS 서버인 8.8.8.8를 입력하여 어떻게 출력되는지 확인하였다.</p><p><img src="/img/post_img/OS_Command_Injection_Blind/2.png"><br><code>Did you captured our GOLDEN packet?</code>이라는 문구만 출력이 되고, 잘 작동되는지도 모르겠다.<br><br>그래서 확실한 오류를 일으키고자, 입력 값을 넣지 않고 서버에 넘겨보았다.</p><p><img src="/img/post_img/OS_Command_Injection_Blind/3.png"><br>IP를 입력하라는 문구가 나오는 것을 확인할 수 있었다.<br><br>빈 입력 값을 검증하는 코드가 있는 것 같다.</p><p>다른 방법으로 현재 나의 집 라우터에 없는 주소를 입력하여 오류를 일으켜보겠다.<br><br><img src="/img/post_img/OS_Command_Injection_Blind/2.png"><br>DNS 서버의 IP을 넘겨줄 때랑 같은 문구를 확인 할 수 있었다.<br><br>문제의 이름처럼 Blind로 이루어진 페이지로 확인이 되었다.</p><p>이제 OS Command Injection 문제처럼 다중 명령어를 사용하여 Command Injection을 시도하였다.<br></p><p><code>8.8.8.8 &amp; echo hi!! &gt;&gt; test.txt</code>를 입력해주었다.<br><br>나는 Injection 잘 수행이 되었는지 확인하기 위해서 test.txt를 생성하였다. 또 다른 확인 방법은 Netcat을 이용하여 확인하는 방법이 있다.<br></p><p>서버에 Injection 입력 값을 넘겨주고, 파일이 잘 생성됬는지 확인하였다.<br><br><code>http://localhost/bWAPP/test.txt</code><br><img src="/img/post_img/OS_Command_Injection_Blind/4.png"></p><p>잘 생성이 된 것을 확인할 수 있다. 이 취약점을 이용하여 악성코드를 이처럼 만들 수도 있고, 아니면 파일을 삭제를 할 수 있다.</p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><p>functions_external.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">no_check</span>(<span class="params">$data</span>)</span>&#123;    </span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>commandi_blind.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($target == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;font color=\&quot;red\&quot;&gt;Please enter your IP address...&lt;/font&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Did you captured our GOLDEN packet?&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(PHP_OS == <span class="string">&quot;Windows&quot;</span> <span class="keyword">or</span> PHP_OS == <span class="string">&quot;WINNT&quot;</span> <span class="keyword">or</span> PHP_OS == <span class="string">&quot;WIN32&quot;</span>)&#123;</span><br><span class="line">        <span class="comment">// Debugging</span></span><br><span class="line">        <span class="comment">// echo &quot;Windows!&quot;;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Increasing the PING count will slow down your web scanner!</span></span><br><span class="line">        shell_exec(<span class="string">&quot;ping -n 1 &quot;</span> . commandi($target));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// Debugging</span></span><br><span class="line">        <span class="comment">// echo &quot;Not Windows!&quot;;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Increasing the PING count will slow down your web scanner!</span></span><br><span class="line">        shell_exec(<span class="string">&quot;ping -c 1 &quot;</span> . commandi($target));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>코드를 보니 입력 값을 검사하는 항목은 빈 입력을 검사하는 것 밖에 없다.</p><br><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>아마 OS Command Injection 문제의 Medium Leval처럼 특정 문자를 치환하는 것으로 방어를 할 것으로 생각되지만 일단 해보겠다.</p><p><code>8.8.8.8 | echo Hi!! Medium &gt;&gt; test.txt</code>을 입력하여 제대로 생성이 됬는지 확인하였다.<br><img src="/img/post_img/OS_Command_Injection_Blind/5.png"><br>예상대로 OS Command Injection 문제와 똑같이 방어를 한 것으로 추측된다.</p><h3 id="Source-Code-1"><a href="#Source-Code-1" class="headerlink" title="Source Code"></a>Source Code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">commandi_check_1</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">    $input = str_replace(<span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;&quot;</span>, $data);</span><br><span class="line">    $input = str_replace(<span class="string">&quot;;&quot;</span>, <span class="string">&quot;&quot;</span>, $input);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> $input;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>파이프(|)가 치환되지 않았다. 또한 Command Injection에 많이 쓰이는 {}, (), $ 등등 다른 것들도 치환하지 않는 것을 확인할 수 있었다.</p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">commandi_check_2</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> escapeshellcmd($data); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>이에 대한 설명은 OS Command Injection에서 확인하면 된다.<br>Link : <a href="http://lrtk-github.io/2020/12/12/OS-Injection/">http://lrtk-github.io/2020/12/12/OS-Injection/</a></p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/12/OS-Injection-Blind/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>OS Injection</title>
      <link>https://lrtk-coder.github.io/2020/12/11/OS-Injection/</link>
      <guid>https://lrtk-coder.github.io/2020/12/11/OS-Injection/</guid>
      <pubDate>Fri, 11 Dec 2020 21:52:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;리눅스-다중-명령어&quot;&gt;&lt;a href=&quot;#리눅스-다중-명령어&quot; class=&quot;headerlink&quot; title=&quot;리눅스 다중 명령어&quot;&gt;&lt;/a&gt;리눅스 다중 명령어&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;세미클론(;) : 하나의 라인에 주어진 명령어들을 성공,실</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="리눅스-다중-명령어"><a href="#리눅스-다중-명령어" class="headerlink" title="리눅스 다중 명령어"></a>리눅스 다중 명령어</h2><ul><li>세미클론(;) : 하나의 라인에 주어진 명령어들을 성공,실패와 관련 없이 전부 실행한다.</li><li>파이프(|) : 앞 명령어의 실행 결과를 뒤 명령어에 전달하여 실행한다.</li><li>더블 버티컬바(||) : 앞에서부터 순차적으로 실행하되, 명령 실행에 성공하면 뒤에 오는 명령을 실행하지 않는다.</li><li>엠퍼센트(&amp;) : 앞의 명령어를 백그라운드로 돌리고 동시에 뒤의 명령어를 실행한다.</li><li>더블 엠퍼센트(&amp;&amp;) : 앞에서부터 순차적으로 실행하되, 명령 실행에 실패할 경우 뒤에 오는 명령은 실행하지 않는다.</li></ul><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/img/post_img/OS_Command_Injection/1.png"><br>form에 nslookup 명령어 인자값을 전달 받아서 nslookup을 실행하는 페이지인 것 같다.<br><br>리눅스의 다중 명령어를 삽입하였다.</p><p><code>www.nsa.gov &amp; ls -al commandi.php</code><br><img src="/img/post_img/OS_Command_Injection/2.png"></p><p>성공한 것을 보니 아마 검증이 없는 것 같다.</p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">no_check</span>(<span class="params">$data</span>)</span>&#123;    </span><br><span class="line">    <span class="keyword">return</span> $data;       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>코드를 보니 검증이 없었다.</p><br><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>Low Level에 시도한 <code>&amp;</code>은 검증을 통해 제거가 된 것 같다.<br><br>또한 nslookup 결과도 안뜨는 것을 보니 특정 문자가 있으면 넘어온 데이터를 제거를 하는 것 같다.</p><p>현 입력에서 쓸 수 있는 다중 명령어(;, |)도 블랙리스트에 들어있는지 확인 하였다.</p><p><code>www.nsa.gov | ls -al commandi.php</code><br><img src="/img/post_img/OS_Command_Injection/3.png"></p><p>파이프는 블랙리스트에 없던 것으로 결과가 나왔다.<br></p><h3 id="Source-Code-1"><a href="#Source-Code-1" class="headerlink" title="Source Code"></a>Source Code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">commandi_check_1</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">    $input = str_replace(<span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;&quot;</span>, $data);</span><br><span class="line">    $input = str_replace(<span class="string">&quot;;&quot;</span>, <span class="string">&quot;&quot;</span>, $input);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> $input;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>소스코드를 보니 역시 파이프(|)는 검증에 넣지 않은 모습을 확인 할 수 있었다.<br><br>하지만 좀 이상한 것은 특정 문자가 있으면 지워서 반환을 하는데 nslookup 명령어는 왜 실행이 안된는 것은 디버깅을 통해 알아봐야 할 것 같다.</p><br><h2 id="Hight"><a href="#Hight" class="headerlink" title="Hight"></a>Hight</h2><p>시도하였지만 모두 통하지 않았다…<br><br>또한 다중 명령어 말고도 <code>\n, $()</code>으로도 우회를 시도하였지만 차단되었다.</p><h3 id="Source-Code-2"><a href="#Source-Code-2" class="headerlink" title="Source Code"></a>Source Code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">commandi_check_2</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> escapeshellcmd($data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>escapeshellcmd 함수를 이용하여 OS Command Injection를 방어한 것을 확인 할 수 있었다.<br></p><h4 id="escapeshellcmd이란"><a href="#escapeshellcmd이란" class="headerlink" title="escapeshellcmd이란?"></a>escapeshellcmd이란?</h4><p>link : <a href="https://www.php.net/manual/en/function.escapeshellcmd.php">https://www.php.net/manual/en/function.escapeshellcmd.php</a></p><p>OS Injection에 사용될 수있는 문자열의 모든 문자를 이스케이프하는 함수이다.</p><p><strong>[ 치환 목록 ]</strong><br><br>&amp; # ; ` | * ? ~ &lt;&gt; ^ () [] {} $ \ \x0A \xFF</p><p>이 문자는 앞에 <code>\</code>를 붙어서 치환이 된다.<br><br>또한 <code>&#39;</code>, <code>&quot;</code>은 하나의 쌍으로 되었을 때만 치환이 된다.</p><p>escapeshellcmd 함수의 우회법은 몇가지가 있어서 추후에 우회를 시도하겠다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/11/OS-Injection/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 9498번 문제</title>
      <link>https://lrtk-coder.github.io/2020/12/09/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1330%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2020/12/09/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1330%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Wed, 09 Dec 2020 15:08:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-9498번-문제&quot;&gt;&lt;a href=&quot;#백준-9498번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 9498번 문제&quot;&gt;&lt;/a&gt;백준 9498번 문제&lt;/h2&gt;&lt;h3 id=&quot;시험-성적&quot;&gt;&lt;a href=&quot;#시험-성적&quot; class</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-9498번-문제"><a href="#백준-9498번-문제" class="headerlink" title="백준 9498번 문제"></a>백준 9498번 문제</h2><h3 id="시험-성적"><a href="#시험-성적" class="headerlink" title="시험 성적"></a>시험 성적</h3><h4 id="시험-점수를-입력받아-90-100점은-A-80-89점은-B-70-79점은-C-60-69점은-D-나머지-점수는-F를-출력하는-프로그램을-작성하시오"><a href="#시험-점수를-입력받아-90-100점은-A-80-89점은-B-70-79점은-C-60-69점은-D-나머지-점수는-F를-출력하는-프로그램을-작성하시오" class="headerlink" title="시험 점수를 입력받아 90 ~ 100점은 A, 80 ~ 89점은 B, 70 ~ 79점은 C, 60 ~ 69점은 D, 나머지 점수는 F를 출력하는 프로그램을 작성하시오."></a>시험 점수를 입력받아 90 ~ 100점은 A, 80 ~ 89점은 B, 70 ~ 79점은 C, 60 ~ 69점은 D, 나머지 점수는 F를 출력하는 프로그램을 작성하시오.</h4><p>Link : <a href="https://www.acmicpc.net/problem/9498">https://www.acmicpc.net/problem/9498</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> <span class="number">90</span> &lt;= a &lt;= <span class="number">100</span>: print(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">80</span> &lt;= a &lt;= <span class="number">89</span>: print(<span class="string">&#x27;B&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">70</span> &lt;= a &lt;= <span class="number">79</span>: print(<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">60</span> &lt;= a &lt;= <span class="number">69</span>: print(<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>: print(<span class="string">&#x27;F&#x27;</span>)</span><br></pre></td></tr></table></figure><p>if문을 사용하여 문제를 해결하였다. 하지만 문제를 한 줄로 해결할 수 있다.<br><br>문제에서는 10단위 씩 나누어 점수 평가를 하였다. 즉, 입력된 점수의 10의 자리를 알면 점수를 줄 수 있다는 것이다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&#x27;FFFFFFDCBA&#x27;</span>[<span class="built_in">int</span>(<span class="built_in">input</span>())//<span class="number">10</span>])</span><br></pre></td></tr></table></figure><p>인덱싱를 사용하여 한 줄로 해결하였다.<br><br>여기서 주의할 점은 Index은 시작이 0부터 시작함으로 총 11개의 평가 점수를 입력해주었다.</p><h3 id="Index"><a href="#Index" class="headerlink" title="Index"></a>Index</h3><p>Link : <a href="https://wikidocs.net/14">https://wikidocs.net/14</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> =  [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;123&#x27;</span></span><br><span class="line"></span><br><span class="line">print(<span class="built_in">list</span>[<span class="number">2</span>])  <span class="comment"># 출력 : 3</span></span><br><span class="line">print(<span class="built_in">str</span>[<span class="number">1</span>])   <span class="comment"># 출력 : 2</span></span><br></pre></td></tr></table></figure><p>이런식으로 문자열, 리스트, 튜플, 딕셔너리 등에 유용하게 쓸 수 있다.<br></p><h3 id="Slicing"><a href="#Slicing" class="headerlink" title="Slicing"></a>Slicing</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> =  [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;123&#x27;</span></span><br><span class="line"></span><br><span class="line">print(<span class="built_in">list</span>[<span class="number">0</span>:<span class="number">2</span>])  <span class="comment"># 출력 : 3</span></span><br><span class="line">print(<span class="built_in">str</span>[<span class="number">1</span>:])   <span class="comment"># 출력 : 2</span></span><br></pre></td></tr></table></figure><p>Index로 범위를 지정하여 그 범위 안에 있는 데이터를 출력한다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/09/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1330%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>iFrame Injection</title>
      <link>https://lrtk-coder.github.io/2020/12/08/iFrame-Injection-1/</link>
      <guid>https://lrtk-coder.github.io/2020/12/08/iFrame-Injection-1/</guid>
      <pubDate>Tue, 08 Dec 2020 16:43:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Low&lt;/h2&gt;&lt;p&gt;&lt;code&gt;bWAPP/iframei.php?ParamUrl=robots.txt&amp;amp;ParamWidth=250&amp;amp</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><code>bWAPP/iframei.php?ParamUrl=robots.txt&amp;ParamWidth=250&amp;ParamHeight=250</code><br><img src="./img/post_img/iFrame_Injection/1.png"></p><p>Url를 보면 robots.txt을 iFrame에 넣어서 출력한다.<br><br>ParamUrl을 robots.txt말고 다른 링크을 넣으면 출력이 되는지 확인하였다.</p><p><code>bWAPP/iframei.php?ParamUrl=index.php&amp;ParamWidth=250&amp;ParamHeight=250</code><br><img src="./img/post_img/iFrame_Injection/3.png"></p><p>출력이 되는 모습을 볼 수 있다.<br><br>여기서는 아무 악성 행위가 없는 사이트를 넣어지만, 만약 Xss가 들어있는 사이트를 넣으면 공격을 시도 할 수도 있다.</p><p>소스 코드를 확인하면, 바로 url를 출력하는 것을 확인 할 수 있다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">no_check</span>(<span class="params">$data</span>)</span>&#123;    </span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>물론 안되겠지만, Low처럼 index.php를 불려오도록 하겠다.<br><br><code>bWAPP/iframei.php?ParamUrl=index.php&amp;ParamWidth=250&amp;ParamHeight=250</code><br><img src="./img/post_img/iFrame_Injection/1.png"></p><p>역시 보완이 되었는지 index.php가 출력이 안된 것을 확인할 수 있다.<br><br>Url의 파라미터를 확인해보니, iframe의 옵션으로 확인 할 수 있다.<br></p><p>이것들을 이용한다면, Xss나 iFrame Injection이 가능할 것 같다.<br><br>이를 위해, 개발자 도구를 이용하여 해당 파라미터가 어떻게 넣어지는지를 확인하였다.<br><br><br><br></p><p>Url의 파라미터에 아무 값을 안 넣고 소스 코드를 확인하였을 때의 모습이다.<br><br><code>bWAPP/iframei.php?ParamUrl=robots.txt&amp;ParamWidth=250&amp;ParamHeight=250</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">src</span>=<span class="string">&quot;robots.txt&quot;</span> <span class="attr">height</span>=<span class="string">&quot;250&quot;</span> <span class="attr">width</span>=<span class="string">&quot;250&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>가장 마지막 파라미터에 test를 입력하여 소스 코드를 확인하였다.<br><br><code>bWAPP/iframei.php?ParamUrl=test&amp;ParamWidth=test1&amp;ParamHeight=test2</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">src</span>=<span class="string">&quot;robots.txt&quot;</span> <span class="attr">height</span>=<span class="string">&quot;test2&quot;</span> <span class="attr">width</span>=<span class="string">&quot;test1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>src는 robots.txt가 고정으로 확인되었다. 아마 다른 링크를 넣는 것을 방지하기 위함으로 추측이 된다.<br><br>하지만, 다른 파라미터는 값을 넣을 수 있다. 이를 이용하여 iFrame Injection하겠다.<br></p><p>ParamWidth에 <code>&quot;&gt;&lt;/iframe&gt;&lt;iframe src=&#39;index.php&#39; height=&quot;250&quot; width=&quot;250&quot;&gt;&lt;/iframe&gt;</code>을 추가하여 Injection을 시도하겠다.<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">src</span>=<span class="string">&quot;robots.txt&quot;</span> <span class="attr">height</span>=<span class="string">&quot;250&quot;</span> <span class="attr">width</span>=<span class="string">&quot;250&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>전혀 변경된 것이 없다. 생각을 하면, <code>&lt;, &gt;, /</code>을 지웠다면, 지워진 나머지 문자열은 남아있어야 하는데 전혀 볼 수가 없다.<br><br>그래서 ParamWidth와 ParamHeight에 <code>&lt;/test&gt;</code>을 넣어서 확인해봤다.</p><p><code>bWAPP/iframei.php?ParamUrl=robots.txt&amp;ParamWidth=250&quot;&lt;/test&gt;&amp;ParamHeight=250&quot;&lt;/test&gt;</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder=&quot;0&quot; src=&quot;robots.txt&quot; height=&quot;250\&quot; &lt;=&quot;&quot; test=&quot;&quot;&gt;&quot; width=&quot;250\&quot;&lt;/test&gt;&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>뭔가 이상하게 되었다. 하지만, ParamWidth에 넣었을 때와 다르게 소스코드에 넣어졌기 때문에 다시 한번 ParamWidth에 넣었던 <code>&quot;&gt;&lt;/iframe&gt;&lt;iframe src=&#39;index.php&#39; height=&quot;250&quot; width=&quot;250&quot;&gt;&lt;/iframe&gt;</code>을 넣어서 시도하였다.</p><p><code>bWAPP/iframei.php?ParamUrl=robots.txt&amp;ParamWidth=250&amp;ParamHeight=250&quot;&gt;&lt;/iframe&gt;&lt;iframe src=&#39;index.php&#39; height=&quot;250&quot; width=&quot;250&quot;&gt;&lt;/iframe&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">src</span>=<span class="string">&quot;robots.txt&quot;</span> <span class="attr">height</span>=<span class="string">&quot;250\&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;\&#x27;index.php\&#x27;&quot;</span> <span class="attr">height</span>=<span class="string">&quot;\<span class="symbol">&amp;quot;</span>250\<span class="symbol">&amp;quot;</span>&quot;</span> <span class="attr">width</span>=<span class="string">&quot;\<span class="symbol">&amp;quot;</span>250\<span class="symbol">&amp;quot;</span>&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="./img/post_img/iFrame_Injection/7.png"></p><p>iframe Injection이 성공한 것을 확인할 수 있다.</p><p>이제 어떻게 iframe Injection을 방어했는지 소스 코드를 확인하겠다.</p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xss_check_4</span>(<span class="params">$data</span>)</span>&#123;  </span><br><span class="line">    <span class="comment">// addslashes - returns a string with backslashes before characters that need to be quoted in database queries etc.</span></span><br><span class="line">    <span class="comment">// These characters are single quote (&#x27;), double quote (&quot;), backslash (\) and NUL (the NULL byte).</span></span><br><span class="line">    <span class="comment">// Do NOT use this for XSS or HTML validations!!!</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> addslashes($data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>addslashes 함수를 사용하여 유효성 검사를 하였다.<br></p><h4 id="addslashes-함수"><a href="#addslashes-함수" class="headerlink" title="addslashes 함수"></a>addslashes 함수</h4><p>Link : <a href="http://www.w3big.com/ko/php/func-string-addslashes.html">http://www.w3big.com/ko/php/func-string-addslashes.html</a></p><p>addslashes 함수는 데이터베이스에 특수 문자를 넣을 경우 예상치 못한 오류를 발생하는 것을 치환하여 방지하는 함수이다.</p><p>[ 치환되는 문자 ]</p><ul><li>‘</li><li>“</li><li>\</li><li>NULL</li></ul><p>이 문자들은 출력이 될 때 앞에 <code>\</code>이 붙는다.<br></p><p>소스 코드의 주석을 보면 Xss과 HTML의 유효성 검사로는 쓰지말라는 주의가 적혀져 있다.</p><br><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xss_check_3</span>(<span class="params">$data, $encoding = <span class="string">&quot;UTF-8&quot;</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// htmlspecialchars - converts special characters to HTML entities    </span></span><br><span class="line">    <span class="comment">// &#x27;&amp;&#x27; (ampersand) becomes &#x27;&amp;amp;&#x27; </span></span><br><span class="line">    <span class="comment">// &#x27;&quot;&#x27; (double quote) becomes &#x27;&amp;quot;&#x27; when ENT_NOQUOTES is not set</span></span><br><span class="line">    <span class="comment">// &quot;&#x27;&quot; (single quote) becomes &#x27;&amp;#039;&#x27; (or &amp;apos;) only when ENT_QUOTES is set</span></span><br><span class="line">    <span class="comment">// &#x27;&lt;&#x27; (less than) becomes &#x27;&amp;lt;&#x27;</span></span><br><span class="line">    <span class="comment">// &#x27;&gt;&#x27; (greater than) becomes &#x27;&amp;gt;&#x27;  </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> htmlspecialchars($data, ENT_QUOTES, $encoding);    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>HTML Injection의 High Level처럼 htmlspecialchars 함수를 사용하여 유효성 검사를 하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/08/iFrame-Injection-1/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
